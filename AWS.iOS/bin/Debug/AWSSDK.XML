<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK</name>
    </assembly>
    <members>
        <member name="T:Amazon.AWSConfigs">
            <summary>
            Configuration options that apply to the entire SDK.
            </summary>
            <summary>
            Configuration options that apply to the entire SDK.
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.AWSRegionKey">
            <summary>
            Key for the AWSRegion property.
            <seealso cref="P:Amazon.AWSConfigs.AWSRegion"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.LoggingKey">
            <summary>
            Key for the Logging property.
            <seealso cref="P:Amazon.AWSConfigs.Logging"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.ResponseLoggingKey">
            <summary>
            Key for the ResponseLogging property.
            
            <seealso cref="P:Amazon.AWSConfigs.ResponseLogging"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.LogMetricsKey">
            <summary>
            Key for the LogMetrics property.
            <seealso cref="P:Amazon.AWSConfigs.LogMetrics"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.EndpointDefinitionKey">
            <summary>
            Key for the EndpointDefinition property.
            <seealso cref="P:Amazon.AWSConfigs.LogMetrics"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.DynamoDBContextTableNamePrefixKey">
            <summary>
            Key for the DynamoDBContextTableNamePrefix property.
            <seealso cref="P:Amazon.AWSConfigs.DynamoDBContextTableNamePrefix"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.S3UseSignatureVersion4Key">
            <summary>
            Key for the S3UseSignatureVersion4 property.
            <seealso cref="P:Amazon.AWSConfigs.S3UseSignatureVersion4"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.EC2UseSignatureVersion4Key">
            <summary>
            Key for the EC2UseSignatureVersion4 property.
            <seealso cref="P:Amazon.AWSConfigs.EC2UseSignatureVersion4"/>
            </summary>
        </member>
        <member name="M:Amazon.AWSConfigs.AddTraceListener(System.String,System.Diagnostics.TraceListener)">
            <summary>
            Add a listener for SDK logging. 
            </summary>
            <remarks>If the listener does not have a name, you will not be able to remove it later.</remarks>
            <param name="source">The source to log for, e.g. "Amazon", or "Amazon.DynamoDB".</param>
            <param name="listener">The listener to add.</param>
        </member>
        <member name="M:Amazon.AWSConfigs.RemoveTraceListener(System.String,System.String)">
            <summary>
            Remove a trace listener from SDK logging.
            </summary>
            <param name="source">The source the listener was added to.</param>
            <param name="name">The name of the listener.</param>
        </member>
        <member name="P:Amazon.AWSConfigs.AWSRegion">
            <summary>
            Configures the default AWS region for clients which have not explicitly specified a region.
            Changes to this setting will only take effect for newly constructed instances of AWS clients.
            
            This setting can be configured through the App.config. For example:
            <code>
            &lt;appSettings>
              &lt;add key="AWSRegion" value="us-west-2"/>
            &lt;appSettings>
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.Logging">
            <summary>
            Configures how the SDK should log events, if at all.
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSLogging" value="log4net"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.ResponseLogging">
            <summary>
            Configures when the SDK should log service responses.
            Changes to this setting will take effect immediately.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSResponseLogging" value="OnError"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.LogMetrics">
            <summary>
            Configures if the SDK should log performance metrics.
            This setting configures the default LogMetrics property for all clients/configs.
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSLogMetrics" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.EndpointDefinition">
            <summary>
            Configures if the SDK should use a custom configuration file that defines the regions and endpoints.
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSEndpointDefinition" value="c:\config\endpoints.xml"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.DynamoDBContextTableNamePrefix">
            <summary>
            Configures the default TableNamePrefix that the DynamoDBContext will use if
            not manually configured.
            Changes to this setting will only take effect in newly-constructed instances of
            DynamoDBContextConfig and DynamoDBContext.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.DynamoDBContext.TableNamePrefix" value="Test-"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.S3UseSignatureVersion4">
            <summary>
            Configures if the S3 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.S3.UseSignatureVersion4" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.EC2UseSignatureVersion4">
            <summary>
            Configures if the EC2 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.EC2.UseSignatureVersion4" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="T:Amazon.LoggingOptions">
            <summary>
            Logging options.
            Can be combined to enable multiple loggers.
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.None">
            <summary>
            No logging
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.Log4Net">
            <summary>
            Log using log4net
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.SystemDiagnostics">
            <summary>
            Log using System.Diagnostics
            </summary>
        </member>
        <member name="T:Amazon.ResponseLoggingOption">
            <summary>
            Response logging option.
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.Never">
            <summary>
            Never log service response
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.OnError">
            <summary>
            Only log service response when there's an error
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.Always">
            <summary>
            Always log service response
            </summary>
        </member>
        <member name="T:Amazon.RegionEndpoint">
            <summary>
            This class contains the endpoints available to the AWS clients.  The static constants representing the 
            regions can be used while constructing the AWS client instead of looking up the exact endpoint URL.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USEast1">
            <summary>
            The US East (Virginia) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USWest1">
            <summary>
            The US West (N. California) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USWest2">
            <summary>
            The US West (Oregon) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.EUWest1">
            <summary>
            The EU West (Ireland) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APNortheast1">
            <summary>
            The Asia Pacific (Tokyo) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APSoutheast1">
            <summary>
            The Asia Pacific (Singapore) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APSoutheast2">
            <summary>
            The Asia Pacific (Sydney) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.SAEast1">
            <summary>
            The South America (Sao Paulo) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USGovCloudWest1">
            <summary>
            The US GovCloud West (Oregon) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.CNNorth1">
            <summary>
            The China (Beijing) endpoint.
            </summary>
        </member>
        <member name="M:Amazon.RegionEndpoint.GetBySystemName(System.String)">
            <summary>
            Gets the region based on its system name like "us-west-1"
            </summary>
            <param name="systemName">The system name of the service like "us-west-1"</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.RegionEndpoint.LoadEndpointDefinitions(System.IO.TextReader)">
            <summary>
            Parse the endpoint definition.  This method is only meant to be called directly for testing purposes.
            </summary>
            <param name="reader">A reader of the endpoint definitions</param>
        </member>
        <member name="M:Amazon.RegionEndpoint.UnloadEndpointDefinitions">
            <summary>
            This is a testing method and should not be called by production applications.
            </summary>
        </member>
        <member name="M:Amazon.RegionEndpoint.GetEndpointForService(System.String)">
            <summary>
            Gets the endpoint for a service in a region.
            </summary>
            <param name="serviceName">The services system name.</param>
            <exception cref="T:System.ArgumentException">Thrown when the request service does not have a valid endpoint in the region.</exception>
            <returns></returns>
        </member>
        <member name="P:Amazon.RegionEndpoint.EnumerableAllRegions">
            <summary>
            Enumerate through all the regions.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.SystemName">
            <summary>
            Gets the system name of a region.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.DisplayName">
            <summary>
            Gets the display name of a region.
            </summary>
        </member>
        <member name="T:Amazon.RegionEndpoint.Endpoint">
            <summary>
            This class defines an endpoints hostname and which protocols it supports.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.Hostname">
            <summary>
            Gets the hostname for the service.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.HTTPS">
            <summary>
            Returns true of the service endpoint supports HTTPS.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.HTTP">
            <summary>
            Returns true of the service endpoint supports HTTP.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.IPropertyConverter">
            <summary>
            Interface for converting arbitrary objects to DynamoDB-supported
            object types.
            
            Implementing type must be public, instantiable, and should have
            a zero-parameter constructor.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IPropertyConverter.ToEntry(System.Object)">
            <summary>
            Convert object to DynamoDBEntry
            </summary>
            <param name="value">Object to be deserialized</param>
            <returns>Object deserialized as DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IPropertyConverter.FromEntry(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)">
            <summary>
            Convert DynamoDBEntry to the specified object
            </summary>
            <param name="entry">DynamoDBEntry to be serialized</param>
            <returns>Serialized object</returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern for the AmazonWebServiceClient
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.CloneConfig``1">
            <summary>
            Used to create a copy of the config for a different service then the current instance.
            </summary>
            <typeparam name="C"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.ShouldRetry(System.Net.HttpStatusCode,Amazon.Runtime.ClientConfig,Amazon.Runtime.AmazonServiceException,System.Int32)">
            <summary>
            Returns true if a failed request should be retried.
            </summary>
            <param name="statusCode">The HTTP status code from the failed request</param>
            <param name="config">The client config</param>
            <param name="errorResponseException">The exception from the failed request</param>
            <param name="retries">The number of times the current request has been attempted</param>
            <returns>True if the failed request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.CanRetry(Amazon.Runtime.Internal.IRequestData)">
            <summary>
            Returns true if the request is in a state where it can be retried.
            False otherwise.
            </summary>
            <param name="irequest"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.pauseExponentially(System.Int32)">
            <summary> 
            Exponential sleep on failed request to avoid flooding a service with
            retries.
            </summary>
            <param name="retries">Current retry count.</param>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.BeforeMarshallingEvent">
            <summary>
            Occurs before a request is marshalled.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.BeforeRequestEvent">
            <summary>
            Occurs before a request is issued against the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.AfterResponseEvent">
            <summary>
            Occurs after a response is received from the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.ExceptionEvent">
            <summary>
            Occurs after an exception is encountered.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AbstractWebServiceClient.ServiceURL">
            <summary>
            Gets the service url endpoint used by this client.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonClientException">
            <summary>
            Exception thrown by the SDK for errors that occur within the SDK.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonServiceException">
            <summary>
            A base exception for some Amazon Web Services.
            <para>
            Most exceptions thrown to client code will be service-specific exceptions, though some services
            may throw this exception if there is a problem which is caught in the core client code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.ErrorType">
            <summary>
            Whether the error was attributable to <c>Sender</c> or <c>Reciever</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.ErrorCode">
            <summary>
            The error code returned by the service
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.RequestId">
            <summary>
            The id of the request which generated the exception.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.StatusCode">
            <summary>
            The HTTP status code from the service response
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonUnmarshallingException">
            <summary>
            This exception is thrown when there is a parse error on the response back from AWS.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonWebServiceRequest">
            <summary>
            Base class for request used by some of the services.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceRequest.Expect100Continue">
            <summary>
            Gest or Sets a value indicating if "Expect: 100-continue" HTTP header will be 
            sent by the client for this request. The default value is false.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonWebServiceResponse">
            <summary>
            Abstract class for Response objects, contains only metadata, 
            and no result information.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.ResponseMetadata">
            <summary>
            Contains additional information about the request, such as the 
            Request Id.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.ContentLength">
            <summary>
            Returns the content length of the HTTP response.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.HttpStatusCode">
            <summary>
            Returns the status code of the HTTP response.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ImmutableCredentials">
            <summary>
            Immutable representation of AWS credentials.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ImmutableCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs an ImmutableCredentials object with supplied accessKey, secretKey.
            </summary>
            <param name="awsAccessKeyId"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="token">Optional. Can be set to null or empty for non-session credentials.</param>
        </member>
        <member name="M:Amazon.Runtime.ImmutableCredentials.Copy">
            <summary>
            Returns a copy of the current credentials.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.AccessKey">
            <summary>
            Gets the AccessKey property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.SecretKey">
            <summary>
            Gets the SecretKey property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.Token">
            <summary>
            Gets the Token property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.UseToken">
            <summary>
            Gets the UseToken property for the current credentials.
            Specifies if Token property is non-emtpy.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AWSCredentials">
            <summary>
            Abstract class that represents a credentials object for AWS services.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AWSCredentials.GetCredentials">
            <summary>
            Returns a copy of ImmutableCredentials
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.BasicAWSCredentials">
            <summary>
            Basic set of credentials consisting of an AccessKey and SecretKey
            </summary>
        </member>
        <member name="M:Amazon.Runtime.BasicAWSCredentials.#ctor(System.String,System.String)">
            <summary>
            Constructs a BasicAWSCredentials object for the specified accessKey and secretKey.
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
        </member>
        <member name="M:Amazon.Runtime.BasicAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.SessionAWSCredentials">
            <summary>
            Session credentials consisting of AccessKey, SecretKey and Token
            </summary>
        </member>
        <member name="M:Amazon.Runtime.SessionAWSCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a SessionAWSCredentials object for the specified accessKey, secretKey.
            </summary>
            <param name="awsAccessKeyId"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="token"></param>
        </member>
        <member name="M:Amazon.Runtime.SessionAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.EnvironmentAWSCredentials">
            <summary>
            Credentials that are retrieved from ConfigurationManager.AppSettings
            </summary>
        </member>
        <member name="M:Amazon.Runtime.EnvironmentAWSCredentials.#ctor">
            <summary>
            Constructs an instance of EnvironmentAWSCredentials and attempts
            to load AccessKey and SecretKey from ConfigurationManager.AppSettings
            </summary>
        </member>
        <member name="M:Amazon.Runtime.EnvironmentAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.RefreshingAWSCredentials">
            <summary>
            Abstract class for automatically refreshing AWS credentials
            </summary>
        </member>
        <member name="M:Amazon.Runtime.RefreshingAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.RefreshingAWSCredentials.GenerateNewCredentials">
            <summary>
            When overridden in a derived class, generates new credentials and new expiration date.
            
            Called on first credentials request and when expiration date is in the past.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.RefreshingAWSCredentials.PreemptExpiryTime">
            <summary>
            The time before actual expiration to expire the credentials.        
            Property cannot be set to a negative TimeSpan.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.RefreshingAWSCredentials.CredentialsRefreshState">
            <summary>
            Refresh state container consisting of credentials
            and the date of the their expiration
            </summary>
        </member>
        <member name="T:Amazon.Runtime.InstanceProfileAWSCredentials">
            <summary>
            Credentials that are retrieved from the Instance Profile service on an EC2 instance
            </summary>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.#ctor(System.String)">
            <summary>
            Constructs a InstanceProfileAWSCredentials object for specific role
            </summary>
            <param name="role">Role to use</param>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.#ctor">
            <summary>
            Constructs a InstanceProfileAWSCredentials object for the first found role
            </summary>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.GetAvailableRoles">
            <summary>
            Retrieves a list of all roles available through current InstanceProfile service
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.InstanceProfileAWSCredentials.Role">
            <summary>
            Role for which the credentials are retrieved
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AssumeRoleAWSCredentials">
            <summary>
            Credentials that are retrieved by invoking AWS Security Token Service
            AssumeRole or AssumeRoleWithSAML action.
            </summary>
            <summary>
            Assumed role credentials retrieved and automatically refreshed from
            an instance of IAmazonSecurityTokenService.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.IAmazonSecurityTokenService,Amazon.SecurityToken.Model.AssumeRoleRequest)">
            <summary>
            Instantiates AssumeRoleAWSCredentials which automatically assumes a specified role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="sts">
            Instance of IAmazonSecurityTokenService that will be used to make the AssumeRole service call.
            </param>
            <param name="assumeRoleRequest">Configuration for the role to assume.</param>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)">
            <summary>
            Instantiates AssumeRoleAWSCredentials which automatically assumes a specified SAML role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="assumeRoleWithSamlRequest">Configuration for the SAML role to assume.</param>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AnonymousAWSCredentials">
            <summary>
            Anonymous credentials.
            Using these credentials, the client does not sign the request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AnonymousAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.ClientConfig">
            <summary>
            This class is the base class of all the configurations settings to connect
            to a service.
            </summary>    
            <summary>
            This class is the base class of all the configurations settings to connect
            to a service.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ClientConfig.Validate">
            <summary>
            Performs validation on this config object.
            Throws exception if any of the required values are missing/invalid.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ClientConfig.GetTimeoutValue(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Returns the request timeout value if its value is set, 
            else returns client timeout value.
            </summary>        
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProxyHost">
            <summary>
            Gets and sets of the ProxyHost property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProxyPort">
            <summary>
            Gets and sets of the ProxyPort property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.MaxIdleTime">
            <summary>
            Gets and sets the max idle time set on the ServicePoint for the WebRequest.
            Default value is 50 seconds (50,000 ms) unless ServicePointManager.MaxServicePointIdleTime is set,
            in which case ServicePointManager.MaxServicePointIdleTime will be used as the default.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ConnectionLimit">
            <summary>
            Gets and sets the connection limit set on the ServicePoint for the WebRequest.
            Default value is 50 connections unless ServicePointManager.DefaultConnectionLimit is set in 
            which case ServicePointManager.DefaultConnectionLimit will be used as the default.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.UseNagleAlgorithm">
            <summary>
            Gets or sets a Boolean value that determines whether the Nagle algorithm is used on connections managed by the ServicePoint object used
            for requests to AWS. This is defaulted to false for lower latency with responses that return small amount of data. This is the opposite
            default than ServicePoint.UseNagleAlgorithm which is optimized for large responses like web pages or images.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ReadWriteTimeout">
            <summary>
            Overrides the default read-write timeout value.
            </summary>
            <remarks>
            <para>
            If the value is set, the value is assigned to the ReadWriteTimeout property of the HTTPWebRequest/WebRequestHandler object used
            to send requests.
            </para>
            <exception cref="T:System.ArgumentNullException">The timeout specified is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than or equal to zero and is not Infinite.</exception>
            </remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.Http.WebRequestHandler.ReadWriteTimeout"/>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ServiceVersion">
            <summary>
            Gets Service Version
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.SignatureMethod">
            <summary>
            Gets and sets of the signatureMethod property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.SignatureVersion">
            <summary>
            Gets and sets of the SignatureVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.UserAgent">
            <summary>
            Gets and sets of the UserAgent property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.RegionEndpoint">
            <summary>
            Gets and sets the RegionEndpoint property.  The region constant to use that 
            determines the endpoint to use.  If this is not set
            then the client will fallback to the value of ServiceURL.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ServiceURL">
            <summary>
            Gets and sets of the ServiceURL property.
            This is an optional property; change it
            only if you want to try a different service
            endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.UseHttp">
            <summary>
            Gets and sets the UseHttp.
            If this property is set to true, the client attempts
            to use HTTP protocol, if the target endpoint supports it.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.AuthenticationRegion">
            <summary>
            Gets and sets the AuthenticationRegion property.
            Used in AWS4 request signing, this is an optional property; 
            change it only if the region cannot be determined from the 
            service endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.AuthenticationServiceName">
            <summary>
            Gets and sets the AuthenticationServiceName property.
            Used in AWS4 request signing, this is the short-form
            name of the service being called.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.MaxErrorRetry">
            <summary>
            Gets and sets of the MaxErrorRetry property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.LogResponse">
            <summary>
            Gets and sets the LogResponse.
            If this property is set to true, the service response
            is read in its entirety and logged.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ReadEntireResponse">
            <summary>
            Gets and sets the ReadEntireResponse.
            If this property is set to true, the service response
            is read in its entirety before being processed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.BufferSize">
            <summary>
            Gets and Sets the BufferSize property.
            The BufferSize controls the buffer used to read in from input streams and write 
            out to the request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProgressUpdateInterval">
            <summary>
            <para>
            Gets or sets the interval at which progress update events are raised
            for upload operations. By default, the progress update events are 
            raised at every 100KB of data transferred. 
            </para>
            <para>
            If the value of this property is set less than ClientConfig.BufferSize, 
            progress updates events will be raised at the interval specified by ClientConfig.BufferSize.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ResignRetries">
            <summary>
            Flag on whether to resign requests on retry or not.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.LogMetrics">
            <summary>
            Flag on whether to log metrics for service calls.
            
            This can be set in the application's configs, as below:
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSLogMetrics" value"true"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.DisableLogging">
            <summary>
            Flag on whether to completely disable logging for this client or not.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProxyCredentials">
            <summary>
            Credentials to use with a proxy.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.Timeout">
            <summary>
            Overrides the default request timeout value.
            </summary>
            <remarks>
            <para>
            If the value is set, the value is assigned to the Timeout property of the HTTPWebRequest/HttpClient object used
            to send requests.
            </para>
            <para>
            Please specify a timeout value only if the operation will not complete within the default intervals
            specified for an HttpWebRequest/HttpClient.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The timeout specified is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than or equal to zero and is not Infinite.</exception>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
            <seealso cref="P:System.Net.Http.HttpClient.Timeout"/>
        </member>
        <member name="T:Amazon.Runtime.ConstantClass">
            <summary>
            Base class for constant class that holds the value that will be sent to AWS for the static constants.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ConstantClass.Intern">
            <summary>
            Attempt to find correct-cased constant value using whatever cased value the user
            has provided. This is primarily useful for mapping any-cased values from a CLI
            tool to the specific casing required by the service, avoiding the need for the
            user to (a) remember the specific case and (b) actually type it correctly.
            </summary>
            <returns>The properly cased service constant matching the value</returns>
        </member>
        <member name="P:Amazon.Runtime.ConstantClass.Value">
            <summary>
            Gets the value that needs to be used when send the value to AWS
            </summary>
        </member>
        <member name="T:Amazon.Runtime.SigningAlgorithm">
            <summary>
            The valid hashing algorithm supported by the sdk for request signing.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ErrorType">
            <summary>
            Which end of a request was responsible for a service error response.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Sender">
            <summary>
            The sender was responsible for the error, i.e. the client
            request failed validation or was improperly formatted.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Receiver">
            <summary>
            The error occured within the service.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Unknown">
            <summary>
            An unrecognized error type was returned.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ResponseMetadata">
            <summary>
            Information about the request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ResponseMetadata.RequestId">
            <summary>
            Gets and sets the RequestId property.
            ID that uniquely identifies a request. Amazon keeps track of request IDs. If you have a question about a request, include the request ID in your correspondence.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.SignatureException">
            <summary>
            This exception is thrown if there are problems signing the request.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.SignatureException">
            <summary>
            This exception is thrown if there are problems signing the request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.StreamTransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.Runtime.StreamTransferProgressArgs.ToString">
            <summary>
            Returns a string representation of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.PercentDone">
            <summary>
            Gets the percentage of transfer completed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.IncrementTransferred">
            <summary>
            Gets the number of bytes transferred since last event
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.TransferredBytes">
            <summary>
            Gets the number of bytes transferred
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.TotalBytes">
            <summary>
            Gets the total number of bytes to be transferred
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.AsyncResult.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.AsyncResult.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.DefaultRequest">
            <summary>
            Default implementation of the IRequest interface.
            <para>
            This class is only intended for internal use inside the AWS client libraries.
            Callers shouldn't ever interact directly with objects of this class.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.IRequest">
            <summary>
            Represents a request being sent to an Amazon Web Service, including the
            parameters being sent as part of the request, the endpoint to which the
            request should be sent, etc.
            <para>
            This class is only intended for internal use inside the AWS client libraries.
            Callers shouldn't ever interact directly with objects of this class.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.ComputeContentStreamHash">
            <summary>
            Computes the SHA 256 hash of the content stream. If the stream is not
            seekable, it searches the parent stream hierarchy to find a seekable
            stream prior to computation. Once computed, the hash is cached for future
            use.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.RequestName">
            <summary>
            The name of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Headers">
            <summary>
            Returns a dictionary of the headers included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.UseQueryString">
            <summary>
            Gets and sets a flag that indicates whether the request is sent as a query string instead of the request body.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Parameters">
            <summary>
            Returns a dictionary of the parameters included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.HttpMethod">
            <summary>
            Gets and sets the type of http request to make, whether it should be POST,GET or DELETE
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Endpoint">
            <summary>
            Gets and Sets the endpoint for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ResourcePath">
            <summary>
            Gets and Sets the resource path added on to the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Content">
            <summary>
            Gets and Sets the content for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ContentStream">
            <summary>
            Gets and sets the content stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.OriginalStreamPosition">
            <summary>
            Gets and sets the original stream position.
            If ContentStream is null or does not support seek, this propery
            should be equal to -1.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ServiceName">
            <summary>
            The name of the service to which this request is being sent.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.OriginalRequest">
            <summary>
            Returns the original, user facing request object which this internal
            request object is representing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.AlternateEndpoint">
            <summary>
            Alternate endpoint to use for this request, if any.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Suppress404Exceptions">
            <summary>
            Gets and sets the Suppress404Exceptions property. If true then 404s return back from AWS will not cause an exception and 
            an empty response object will be returned.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.AWS4SignerResult">
            <summary>
            If using AWS4 signing protocol, contains the resultant parts of the
            signature that we may need to make use of if we elect to do a chunked
            encoding upload.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.UseChunkEncoding">
            <summary>
            Determine whether to use a chunked encoding upload for the request
            (applies to Amazon S3 PutObject and UploadPart requests only). 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.#ctor(Amazon.Runtime.AmazonWebServiceRequest,System.String)">
            <summary>
            Constructs a new DefaultRequest with the specified service name and the
            original, user facing request object.
            </summary>
            <param name="request">The orignal request that is being wrapped</param>
            <param name="serviceName">The service name</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.ComputeContentStreamHash">
            <summary>
            Computes the SHA 256 hash of the content stream. If the stream is not
            seekable, it searches the parent stream hierarchy to find a seekable
            stream prior to computation. Once computed, the hash is cached for future
            use. If a suitable stream cannot be found to use, null is returned.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.RequestName">
            <summary>
            The name of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.HttpMethod">
            <summary>
            Gets and sets the type of http request to make, whether it should be POST,GET or DELETE
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.UseQueryString">
            <summary>
            Gets and sets a flag that indicates whether the request is sent as a query string instead of the request body.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.OriginalRequest">
            <summary>
            Returns the original, user facing request object which this internal
            request object is representing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Headers">
            <summary>
            Returns a dictionary of the headers included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Parameters">
            <summary>
            Returns a dictionary of the parameters included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Endpoint">
            <summary>
            Gets and Sets the endpoint for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ResourcePath">
            <summary>
            Gets and Sets the resource path added on to the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Content">
            <summary>
            Gets and Sets the content for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ContentStream">
            <summary>
            Gets and sets the content stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.OriginalStreamPosition">
            <summary>
            Gets and sets the original stream position.
            If ContentStream is null or does not support seek, this propery
            should be equal to -1.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ServiceName">
            <summary>
            The name of the service to which this request is being sent.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.AlternateEndpoint">
            <summary>
            Alternate endpoint to use for this request, if any.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Suppress404Exceptions">
            <summary>
            Gets and sets the Suppress404Exceptions property. If true then 404s return back from AWS will not cause an exception and 
            an empty response object will be returned.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.AWS4SignerResult">
            <summary>
            If using AWS4 signing protocol, contains the resultant parts of the
            signature that we may need to make use of if we elect to do a chunked
            encoding upload.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.UseChunkEncoding">
            <summary>
            Determine whether to use a chunked encoding upload for the request
            (applies to Amazon S3 PutObject and UploadPart requests only). 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AbstractAWSSigner.ComputeHash(System.String,System.String,Amazon.Runtime.SigningAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AbstractAWSSigner.ComputeHash(System.Byte[],System.String,Amazon.Runtime.SigningAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS3Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Signs the specified request with the AWS3 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4Signer">
            <summary>
            AWS4 protocol signer for service calls that transmit authorization in the header field "Authorization".
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters. The resulting signature is added
            to the request headers as 'Authorization'. Parameters supplied in the request, either in
            the resource path as a query string or in the Parameters collection must not have been
            uri encoded. If they have, use the SignRequest method to obtain a signature.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Client configuration data encompassing the service call (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text.
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignRequest(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Client configuration data encompassing the service call (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request.
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text.
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
            <remarks>
            Parameters passed as part of the resource path should be uri-encoded prior to
            entry to the signer. Parameters passed in the request.Parameters collection should
            be not be encoded; encoding will be done for these parameters as part of the 
            construction of the canonical request.
            </remarks>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.InitializeHeaders(System.Collections.Generic.IDictionary{System.String,System.String},System.Uri)">
            <summary>
            Sets the AWS4 mandated 'host' and 'x-amz-date' headers, returning the date/time that will
            be used throughout the signing process in various elements and formats.
            </summary>
            <param name="headers">The current set of headers</param>
            <param name="requestEndpoint"></param>
            <returns>Date and time used for x-amz-date, in UTC</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.InitializeHeaders(System.Collections.Generic.IDictionary{System.String,System.String},System.Uri,System.DateTime)">
            <summary>
            Sets the AWS4 mandated 'host' and 'x-amz-date' headers, accepting and returning the date/time that will
            be used throughout the signing process in various elements and formats.
            </summary>
            <param name="headers">The current set of headers</param>
            <param name="requestEndpoint"></param>
            <param name="requestDateTime"></param>
            <returns>Date and time used for x-amz-date, in UTC</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeSignature(Amazon.Runtime.ImmutableCredentials,System.String,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Computes and returns an AWS4 signature for the specified canonicalized request
            </summary>
            <param name="credentials"></param>
            <param name="region"></param>
            <param name="signedAt"></param>
            <param name="service"></param>
            <param name="signedHeaders"></param>
            <param name="canonicalRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeSignature(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,Amazon.Runtime.Internal.Util.RequestMetrics)">
            <summary>
            Computes and returns an AWS4 signature for the specified canonicalized request
            </summary>
            <param name="awsAccessKey"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="region"></param>
            <param name="signedAt"></param>
            <param name="service"></param>
            <param name="signedHeaders"></param>
            <param name="canonicalRequest"></param>
            <param name="metrics"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.FormatDateTime(System.DateTime,System.String)">
            <summary>
            Formats the supplied date and time for use in AWS4 signing, where various formats are used.
            </summary>
            <param name="dt"></param>
            <param name="formatString">The required format</param>
            <returns>The UTC date/time in the requested format</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComposeSigningKey(System.String,System.String,System.String,System.String)">
            <summary>
            Compute and return the multi-stage signing key for the request.
            </summary>
            <param name="awsSecretAccessKey">The clear-text AWS secret key, if not held in secureKey</param>
            <param name="region">The region in which the service request will be processed</param>
            <param name="date">Date of the request, in yyyyMMdd format</param>
            <param name="service">The name of the service being called by the request</param>
            <returns>Computed signing key</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SetRequestBodyHash(Amazon.Runtime.Internal.IRequest)">
            <summary>
            If the caller has already set the x-amz-content-sha256 header with a pre-computed
            content hash, or it is present as ContentStreamHash on the request instance, return
            the value to be used in request canonicalization. 
            If not set as a header or in the request, attempt to compute a hash based on
            inspection of the style of the request content.
            </summary>
            <param name="request"></param>
            <returns>
            The computed hash, whether already set in headers or computed here. Null
            if we were not able to compute a hash.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignBlob(System.Byte[],System.String)">
            <summary>
            Returns the HMAC256 for an arbitrary blob using the specified key
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignBlob(System.Byte[],System.Byte[])">
            <summary>
            Returns the HMAC256 for an arbitrary blob using the specified key
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeKeyedHash(Amazon.Runtime.SigningAlgorithm,System.Byte[],System.String)">
            <summary>
            Compute and return the hash of a data blob using the specified key
            </summary>
            <param name="algorithm">Algorithm to use for hashing</param>
            <param name="key">Hash key</param>
            <param name="data">Data blob</param>
            <returns>Hash of the data</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeKeyedHash(Amazon.Runtime.SigningAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Compute and return the hash of a data blob using the specified key
            </summary>
            <param name="algorithm">Algorithm to use for hashing</param>
            <param name="key">Hash key</param>
            <param name="data">Data blob</param>
            <returns>Hash of the data</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeHash(System.String)">
            <summary>
            Computes the non-keyed hash of the supplied data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeHash(System.Byte[])">
            <summary>
            Computes the non-keyed hash of the supplied data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeRequest(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Computes and returns the canonical request
            </summary>
            <param name="resourcePath">the path of the resource being operated on</param>
            <param name="httpMethod">The http method used for the request</param>
            <param name="sortedHeaders">The full request headers, sorted into canonical order</param>
            <param name="canonicalQueryString">The query parameters for the request</param>
            <param name="precomputedBodyHash">
            The hash of the binary request body if present. If not supplied, the routine
            will look for the hash as a header on the request.
            </param>
            <returns>Canonicalised request as a string</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeResourcePath(System.String)">
            <summary>
            Returns the canonicalized resource path for the service endpoint
            </summary>
            <param name="resourcePath">Resource path for the request</param>
            <returns>Canonicalized resource path for the endpoint</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SortHeaders(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Reorders the headers for the request for canonicalization.
            </summary>
            <param name="requestHeaders">The set of proposed headers for the request</param>
            <returns>List of headers that must be included in the signature</returns>
            <remarks>For AWS4 signing, all headers are considered viable for inclusion</remarks>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeHeaders(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Computes the canonical headers with values for the request. Only headers included in the signature
            are included in the canonicalization process.
            </summary>
            <param name="sortedHeaders">All request headers, sorted into canonical order</param>
            <returns>Canonicalized string of headers, with the header names in lower case.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeHeaderNames(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Returns the set of headers included in the signature as a flattened, ;-delimited string
            </summary>
            <param name="sortedHeaders">The headers included in the signature</param>
            <returns>Formatted string of header names</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeQueryParameters(System.String,System.Boolean)">
            <summary>
            Computes and returns the canonicalized query string, if query parameters have been supplied.
            Parameters with no value will be canonicalized as 'param='. The expectation is that parameters
            have not already been url encoded prior to canonicalization.
            </summary>
            <param name="queryString">The set of parameters being passed on the uri</param>
            <param name="uriEncodeParameters">
            Parameters must be uri encoded into the canonical request and by default the signer expects
            that the supplied collection contains non-encoded data. Set this to false if the encoding was
            done prior to signer entry.
            </param>
            <returns>The uri encoded query string parameters in canonical ordering</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Computes and returns the canonicalized query string, if query parameters have been supplied.
            Parameters with no value will be canonicalized as 'param='. The expectation is that parameters
            have not already been url encoded prior to canonicalization.
            </summary>
            <param name="parameters">The set of parameters to be encoded in the query string</param>
            <param name="uriEncodeParameters">
            Parameters must be uri encoded into the canonical request and by default the signer expects
            that the supplied collection contains non-encoded data. Set this to false if the encoding was
            done prior to signer entry.
            </param>
            <returns>The uri encoded query string parameters in canonical ordering</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.GetRequestPayload(Amazon.Runtime.Internal.IRequest)">
            <summary>
            Returns the request parameters in the form of a query string.
            </summary>
            <param name="request">The request instance</param>
            <returns>Request parameters in query string format</returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner">
            <summary>
            AWS4 protocol signer for Amazon S3 presigned urls.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters. The resulting signature is added
            to the request headers as 'Authorization'.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Adding supporting data for the service call required by the signer (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner.SignRequest(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates the AWS4 signature for a presigned url.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing. If the Expires parameter
            is present, it is renamed to 'X-Amz-Expires' before signing.
            </param>
            <param name="clientConfig">
            Adding supporting data for the service call required by the signer (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
            <remarks>
            Parameters passed as part of the resource path should be uri-encoded prior to
            entry to the signer. Parameters passed in the request.Parameters collection should
            be not be encoded; encoding will be done for these parameters as part of the 
            construction of the canonical request.
            </remarks>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4SigningResult">
            <summary>
            Encapsulates the various fields and eventual signing value that makes up 
            an AWS4 signature. This can be used to retrieve the required authorization string
            or authorization query parameters for the final request as well as hold ongoing
            signature computations for subsequent calls related to the initial signing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4SigningResult.#ctor(System.String,System.DateTime,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Constructs a new signing result instance for a computed signature
            </summary>
            <param name="awsAccessKeyId">The access key that was included in the signature</param>
            <param name="signedAt">Date/time (UTC) that the signature was computed</param>
            <param name="signedHeaders">The collection of headers names that were included in the signature</param>
            <param name="scope">Formatted 'scope' value for signing (YYYYMMDD/region/service/aws4_request)</param>
            <param name="signingKey">Returns the key that was used to compute the signature</param>
            <param name="signature">Computed signature</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.AccessKeyId">
            <summary>
            The access key that was used in signature computation.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ISO8601DateTime">
            <summary>
            ISO8601 formatted date/time that the signature was computed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ISO8601Date">
            <summary>
            ISO8601 formatted date that the signature was computed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SignedHeaders">
            <summary>
            The ;-delimited collection of header names that were included in the signature computation
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.Scope">
            <summary>
            Formatted 'scope' value for signing (YYYYMMDD/region/service/aws4_request)
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SigningKey">
            <summary>
            Returns a copy of the key that was used to compute the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.Signature">
            <summary>
            Returns the hex string representing the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SignatureBytes">
            <summary>
            Returns a copy of the byte array containing the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ForAuthorizationHeader">
            <summary>
            Returns the signature in a form usable as an 'Authorization' header value.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ForQueryParameters">
            <summary>
            Returns the signature in a form usable as a set of query string parameters.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.QueryStringSigner.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Signs the specified request with the AWS2 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.EC2Signer.#ctor">
            <summary>
            EC2 signer constructor
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.EC2Signer.SelectSigner(Amazon.Runtime.ClientConfig)">
            <summary>
            Inspects the supplied evidence to return the signer appropriate for the operation
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.EC2Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Determines the appropriate signer and signs the request.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.S3Signer.#ctor">
            <summary>
            S3 signer constructor
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.S3Signer.SelectSigner(Amazon.Runtime.ClientConfig)">
            <summary>
            Inspects the supplied evidence to return the signer appropriate for the operation and
            precomputes the body hash for the request if AWS4 protocol is selected.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IUnmarshaller`2">
            <summary>
            Interface for unmarshallers which unmarshall objects from response data.
            The Unmarshallers are stateless, and only encode the rules for what data 
            in the XML stream goes into what members of an object. 
            </summary>
            <typeparam name="T">The type of object the unmarshaller returns</typeparam>
            <typeparam name="R">The type of the XML unmashaller context, which contains the
            state during parsing of the XML stream. Usually an instance of 
            <c>Amazon.Runtime.Internal.Transform.UnmarshallerContext</c>.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.IUnmarshaller`2.Unmarshall(`1)">
            <summary>
            Given the current position in the XML stream, extract a T.
            </summary>
            <param name="input">The XML parsing context</param>
            <returns>An object of type T populated with data from the XML stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Build an ErrorResponse from XML 
            </summary>
            <param name="context">The XML parsing context. 
            Usually an <c>Amazon.Runtime.Internal.UnmarshallerContext</c>.</param>
            <returns>An <c>ErrorResponse</c> object.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller.GetInstance">
            <summary>
            Return an instance of and ErrorResponseUnmarshaller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IResponseUnmarshaller`2">
            <summary>
            Interface for unmarshallers which unmarshall service responses.
            The Unmarshallers are stateless, and only encode the rules for what data 
            in the XML stream goes into what members of an object. 
            </summary>
            <typeparam name="T">The type of object the unmarshaller returns</typeparam>
            <typeparam name="R">The type of the XML unmashaller context, which contains the
            state of parsing the XML stream. Uaually an instance of 
            <c>Amazon.Runtime.Internal.Transform.UnmarshallerContext</c>.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.IResponseUnmarshaller`2.UnmarshallException(`1,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Extracts an exeption with data from an ErrorResponse.
            </summary>
            <param name="input">The XML parsing context.</param>
            <param name="innerException">An inner exception to be included with the returned exception</param>
            <param name="statusCode">The HttpStatusCode from the ErrorResponse</param>
            <returns>Either an exception based on the ErrorCode from the ErrorResponse, or the 
            general service exception for the service in question.</returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Build an ErrorResponse from json 
            </summary>
            <param name="context">The json parsing context. 
            Usually an <c>Amazon.Runtime.Internal.JsonUnmarshallerContext</c>.</param>
            <returns>An <c>ErrorResponse</c> object.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller.GetInstance">
            <summary>
            Return an instance of JsonErrorResponseUnmarshaller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext">
            <summary>
            Wraps a json string for unmarshalling.
            
            Each <c>Read()</c> operation gets the next token.
            <c>TestExpression()</c> is used to match the current key-chain
            to an xpath expression. The general pattern looks like this:
            <code>
            JsonUnmarshallerContext context = new JsonUnmarshallerContext(jsonString);
            while (context.Read())
            {
                if (context.IsKey)
                {
                    if (context.TestExpresion("path/to/element"))
                    {
                        myObject.stringMember = stringUnmarshaller.GetInstance().Unmarshall(context);
                        continue;
                    }
                }
            }
            </code>
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.UnmarshallerContext">
            <summary>
            Base class for the UnmarshallerContext objects that are used
            to unmarshall a web-service response.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.TestExpression(System.String)">
            <summary>
                Tests the specified expression against the current position in the XML
                document </summary>
            <param name="expression">
                The pseudo-XPath expression to test.</param>
            <returns>
                True if the expression matches the current position in the document, 
                false otherwise.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.TestExpression(System.String,System.Int32)">
            <summary>
                Tests the specified expression against the current position in the XML
                document being parsed, and restricts the expression to matching at the
                specified stack depth. </summary>
            <param name="expression">
                The pseudo-XPath expression to test.</param>
            <param name="startingStackDepth">
                The depth in the stack representing where the expression must
                start matching in order for this method to return true. </param>
            <returns>
                True if the specified expression matches the current position in
                the XML document, starting from the specified depth. </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Read">
            <summary>
            Reads to the next node in the document, and updates the context accordingly.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current element being parsed.
            </summary>
            <returns>
                The text contents of the current element being parsed.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.CurrentPath">
            <summary>
            The current path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.CurrentDepth">
            <summary>
            Returns the element depth of the parser's current position in the
            document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsStartElement">
            <summary>
            True if <c>NodeType</c> is <c>Element</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsEndElement">
            <summary>
            True if <c>NodeType</c> is <c>EndElement</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsStartOfDocument">
            <summary>
            True if the context is at the start of the document.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap the jsonstring for unmarshalling.
            </summary>
            <param name="responseStream">Stream that contains the JSON for unmarshalling</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Read">
            <summary>
                Reads to the next token in the json document, and updates the context
                accordingly.
            </summary>
            <returns>
                True if a token was read, false if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.ReadAtDepth(System.Int32)">
            <summary>
            Reads the next token at depth greater than or equal to terget depth.
            </summary>
            <param name="targetDepth">Tokens are read at depth greater than or equal to terget depth.</param>
            <returns>True if a token was read and current depth is greater than or equal to target depth.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Peek(ThirdParty.Json.LitJson.JsonToken)">
            <summary>
            Peeks at the next token. This peek implementation
            reads the next token and makes the subsequent Read() return the same data.
            If Peek is called successively, it will return the same data.
            Only the first one calls Read(), subsequent calls 
            will return the same data until a Read() call is made.
            </summary>
            <param name="token">Token to peek.</param>
            <returns>Returns true if the peeked token matches given token.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current token being parsed.
            </summary>
            <returns>
                The text contents of the current token being parsed.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Peek">
            <summary>
            Peeks at the next (non-whitespace) character in the jsonStream.
            </summary>
            <returns>The next (non-whitespace) character in the jsonStream, or -1 if at the end.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.StreamPeek">
            <summary>
            Peeks at the next character in the stream.
            If the data isn't buffered into the StreamReader (Peek() returns -1),
            we flush the buffered data and try one more time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsStartOfDocument">
            <summary>
            Are we at the start of the json document.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsEndElement">
            <summary>
            Is the current token the end of an object
            </summary>    
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsStartElement">
            <summary>
            Is the current token the start of an object
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentDepth">
            <summary>
                Returns the element depth of the parser's current position in the json
                document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentPath">
            <summary>
            The current Json path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentTokenType">
            <summary>
            The type of the current token
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Stream">
            <summary>
            Get the base stream of the jsonStream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ResponseUnmarshaller">
            <summary>
            Abstract class for unmarshalling service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.XmlResponseUnmarshaller">
            <summary>
            Class for unmarshalling XML service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.EC2ResponseUnmarshaller">
            <summary>
            Class for unmarshalling EC2 service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.S3ReponseUnmarshaller">
            <summary>
            Class for unmarshalling S3 service responses
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonResponseUnmarshaller">
            <summary>
            Class for unmarshalling JSON service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IntUnmarshaller">
            <summary>
            Unmarshaller for int fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.LongUnmarshaller">
            <summary>
            Unmarshaller for long fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.FloatUnmarshaller">
            <summary>
            Unmarshaller for float fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.DoubleUnmarshaller">
            <summary>
            Unmarshaller for double fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.BoolUnmarshaller">
            <summary>
            Unmarshaller for bool fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.StringUnmarshaller">
            <summary>
            Unmarshaller for string fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ByteUnmarshaller">
            <summary>
            Unmarshaller for byte fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.DateTimeUnmarshaller">
            <summary>
            Unmarshaller for DateTime fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.MemoryStreamUnmarshaller">
            <summary>
            Unmarshaller for MemoryStream fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ResponseMetadataUnmarshaller">
            <summary>
            Unmarshaller for ResponseMetadata
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext">
            <summary>
            Wrap an <c>XmltextReader</c> for simulating an event stream.
            
            Each <c>Read()</c> operation goes either to the next element or next attribute within
            the current element. <c>TestExpression()</c> is used to match the current event
            to an xpath expression. The general pattern looks like this:
            <code>
            UnmarshallerContext context = new UnmarshallerContext(...);
            while (context.Read())
            {
                if (context.TestExpresion("path/to/element"))
                {
                    myObject.stringMember = stringUnmarshaller.GetInstance().Unmarshall(context);
                    continue;
                }
                if (context.TestExpression("path/to/@attribute"))
                    myObject.MyComplexTypeMember = MyComplexTypeUnmarshaller.GetInstance().Unmarshall(context);
            }
            </code>
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap an XmlTextReader with state for event-based parsing of an XML stream.
            </summary>
            <param name="responseStream"><c>Stream</c> with the XML from a service response.</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.Read">
            <summary>
            Reads to the next node in the XML document, and updates the context accordingly.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read./
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current element being parsed.
            </summary>
            <returns>
                The text contents of the current element being parsed.
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.CurrentPath">
            <summary>
            The current XML path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.CurrentDepth">
            <summary>
                Returns the element depth of the parser's current position in the XML
                document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsStartElement">
            <summary>
            True if <c>NodeType</c> is <c>Element</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsEndElement">
            <summary>
            True if <c>NodeType</c> is <c>EndElement</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsStartOfDocument">
            <summary>
            True if the context is at the start of the document.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsAttribute">
            <summary>
            True if <c>NodeType</c> is <c>Attribute</c>.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap an XmlTextReader with state for event-based parsing of an XML stream.
            </summary>
            <param name="responseStream"><c>Stream</c> with the XML from a service response.</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.Read">
            <summary>
            Reads to the next node in the XML document, and updates the context accordingly.
            If node is RequestId, reads the contents and stores in RequestId property.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read./
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.RequestId">
            <summary>
            RequestId value, if found in response
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.CachingWrapperStream">
            <summary>
            A stream which caches the contents of the underlying stream as it reads it.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.WrapperStream">
            <summary>
            A wrapper stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes WrapperStream with a base stream.
            </summary>
            <param name="baseStream"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.GetNonWrapperBaseStream">
            <summary>
            Returns the first base non-WrapperStream.
            </summary>
            <returns>First base stream that is non-WrapperStream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.GetNonWrapperBaseStream(System.IO.Stream)">
            <summary>
            Returns the first base non-WrapperStream.
            </summary>
            <param name="stream">Potential WrapperStream</param>
            <returns>Base non-WrapperStream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and
            file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written
            to the underlying device.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">
            An array of bytes. This method copies count bytes from buffer to the current stream.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin copying bytes to the
            current stream.
            </param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.BaseStream">
            <summary>
            Base stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            True if the stream supports reading; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            True if the stream supports seeking; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            True if the stream supports writing; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.ReadTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.WriteTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream
            will attempt to write before timing out.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes the CachingWrapperStream with a base stream.
            </summary>
            <param name="baseStream"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            CachingWrapperStream does not support seeking, attempting to call Seek
            will throw NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.AllReadBytes">
            <summary>
            All the bytes read by the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            CachingWrapperStream does not support seeking, this will always be false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            CachingWrapperStream does not support seeking, attempting to set Position
            will throw NotSupportedException.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream">
            <summary>
            Stream wrapper that double-buffers from a wrapped stream and
            returns the buffered content as a series of signed 'chunks'
            for the AWS4 ('Signature V4') protocol.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads some or all of the processed chunk to the consumer, constructing
            and streaming a new chunk if more input data is available.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.ConstructOutputBufferChunk(System.Int32)">
            <summary>
            Computes the derived signature for a chunk of data of given length in the input buffer, 
            placing a formatted chunk with headers, signature and data into the output buffer
            ready for streaming back to the consumer.
            </summary>
            <param name="dataLen"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.ComputeChunkedContentLength(System.Int64)">
            <summary>
            Computes the total size of the data payload, including the chunk metadata.
            Called externally so as to be able to set the correct Content-Length header
            value.
            </summary>
            <param name="originalLength"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.CalculateChunkHeaderLength(System.Int64)">
            <summary>
            Computes the size of the header data for each chunk.
            </summary>
            <param name="chunkDataSize"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.FillInputBuffer">
            <summary>
            Attempt to read sufficient data for a whole chunk from the wrapped stream,
            returning the number of bytes successfully read to be processed into a chunk
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.HeaderSigningResult">
            <summary>
            Results of the header-signing portion of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.PreviousChunkSignature">
            <summary>
            Computed signature of the chunk prior to the one in-flight, in
            hex
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.Length">
            <summary>
            Length override to return the true length of the payload plus the metainfo
            supplied with each chunk
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.DecryptStream">
            <summary>
            A wrapper stream that decrypts the base stream as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.DecryptStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes an DecryptStream with an decryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.DecryptStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.DecryptStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            DecryptStream does not support seeking, attempting to call Seek
            will throw NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.DecryptStream.ValidateBaseStream">
            <summary>
            Validates the underlying stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.DecryptStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            DecryptStream does not support seeking, this will always be false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.DecryptStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            DecryptStream does not support seeking, attempting to set Position
            will throw NotSupportedException.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.DecryptStream`1">
            <summary>
            A wrapper stream that decrypts the base stream as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.DecryptStream`1.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an DecryptStream with an decryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
            <param name="envelopeKey">Symmetric key to perform decryption</param>
            <param name="IV">Initialization vector to perform decryption</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.AESDecryptionStream">
            <summary>
            A wrapper stream that decrypts the base stream using AES algorithm as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.AESDecryptionStream.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an AESDecryptionStream with a base stream.
            </summary>
            <param name="baseStream">Stream to perform decryption on..</param>
            <param name="key">Symmetric key to perform decryption</param>
            <param name="IV">Initialization vector to perform decryption</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1">
            <summary>
            Class to perform actions on a background thread.
            Uses a single background thread and performs actions
            on it in the order the data was sent through the instance.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.BackgroundInvoker">
            <summary>
            Class to invoke actions on a background thread.
            Uses a single background thread and invokes actions
            on it in the order they were invoked through the instance.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.EncryptStream">
            <summary>
            A wrapper stream that encrypts the base stream as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes an EncryptStream with an encryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptStream.ValidateBaseStream">
            <summary>
            Validates the underlying stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptStream.Length">
            <summary>
            Returns encrypted content length.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.EncryptStream`1">
            <summary>
            A wrapper stream that encrypts the base stream as it
            is being read.
            </summary>   
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptStream`1.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an EncryptStream with an encryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
            <param name="key">Symmetric key to perform encryption</param>
            <param name="IV">Initialization vector to perform encryption</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.AESEncryptionPutObjectStream">
            <summary>
            A wrapper stream that encrypts the base stream using AES algorithm as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.AESEncryptionPutObjectStream.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an AESEncryptionStream with a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
            <param name="key">Symmetric key to perform encryption</param>
            <param name="IV">Initialization vector to perform encryption</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.EncryptUploadPartStream">
            <summary>
            A wrapper stream that encrypts the base stream as it
            is being read.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes an EncryptStream for Multipart uploads with an encryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.ValidateBaseStream">
            <summary>
            Validates the underlying stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.Length">
            <summary>
            Returns encrypted content length.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.EncryptUploadPartStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.EncryptUploadPartStream`1">
            <summary>
            A wrapper stream that encrypts the base stream as it
            is being read.
            </summary>   
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.EncryptUploadPartStream`1.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an EncryptStream with an encryption algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
            <param name="key">Symmetric key to perform encryption</param>
            <param name="IV">Initialization vector to perform encryption</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.AESEncryptionUploadPartStream">
            <summary>
            A wrapper stream that encrypts the base stream as it
            is being read.
            </summary>   
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.AESEncryptionUploadPartStream.#ctor(System.IO.Stream,System.Byte[],System.Byte[])">
            <summary>
            Initializes an AESEncryptionStream with a base stream.
            </summary>
            <param name="baseStream">Stream to perform encryption on..</param>
            <param name="key">Symmetric key to perform encryption</param>
            <param name="IV">Initialization vector to perform encryption</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.Hash(System.Object[])">
            <summary>
            Hashes a set of objects.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.CombineHashes(System.Int32[])">
            <summary>
            Combines a set of hashses.
            </summary>
            <param name="hashes"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.CombineHashesInternal(System.Int32,System.Int32)">
            <summary>
            Combines two hashes.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.HashStream">
            <summary>
            A wrapper stream that calculates a hash of the base stream as it
            is being read.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If CalculatedHash is calculated for only the portion of the stream that
            is read.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an HashStream with a hash algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Close">
            <summary>
            Closes the underlying stream and finishes calculating the hash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            this method will throw an AmazonClientException.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            If ExpectedHash is set and is different from CalculateHash that the stream calculates.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            HashStream does not support seeking, attempting to call Seek
            will throw NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.CalculateHash">
            <summary>
            Calculates the hash for the stream so far and disables any further
            hashing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Reset">
            <summary>
            Resets the hash stream to starting state.
            Use this if the underlying stream has been modified and needs
            to be rehashed without reconstructing the hierarchy.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.ValidateBaseStream">
            <summary>
            Validates the underlying stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.CompareHashes(System.Byte[],System.Byte[])">
            <summary>
            Compares two hashes (arrays of bytes).
            </summary>
            <param name="expected">Expected hash.</param>
            <param name="actual">Actual hash.</param>
            <returns>
            True if the hashes are identical; otherwise false.
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Algorithm">
            <summary>
            Algorithm to use to calculate hash.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.FinishedHashing">
            <summary>
            True if hashing is finished and no more hashing should be done;
            otherwise false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CurrentPosition">
            <summary>
            Current position in the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CalculatedHash">
            <summary>
            Calculated hash for the stream.
            This value is set only after the stream is closed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.ExpectedHash">
            <summary>
            Expected hash value. Compared against CalculatedHash upon Close().
            If the hashes are different, an AmazonClientException is thrown.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.ExpectedLength">
            <summary>
            Expected length of stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            HashStream does not support seeking, this will always be false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            HashStream does not support seeking, attempting to set Position
            will throw NotSupportedException.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Length">
            <summary>
            Gets the overridden length used to construct the HashStream
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.HashStream`1">
            <summary>
            A wrapper stream that calculates a hash of the base stream as it
            is being read or written.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If base stream's position is not 0 or HashOnReads is true and the entire stream is
            not read, the CalculatedHash will be set to an empty byte array and
            comparison to ExpectedHash will not be made.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream`1.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an HashStream with a hash algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.MD5Stream">
            <summary>
            A wrapper stream that calculates an MD5 hash of the base stream as it
            is being read or written.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If base stream's position is not 0 or HashOnReads is true and the entire stream is
            not read, the CalculatedHash will be set to an empty byte array and
            comparison to ExpectedHash will not be made.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.MD5Stream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an MD5Stream with a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.LogMessage">
            <summary>
            A single logged message
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.Logger">
            <summary>
            This is a dynamic wrapper around log4net so we can avoid log4net being required
            to be distributed with the SDK.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.InternalLogger">
            <summary>
            Abstract logger class, base for any custom/specific loggers.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Flush">
            <summary>
            Flushes the logger contents.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Error method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Debug method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net DebugFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net InfoFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsErrorEnabled">
            <summary>
            Simple wrapper around the log4net IsErrorEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsDebugEnabled">
            <summary>
            Simple wrapper around the log4net IsDebugEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsInfoEnabled">
            <summary>
            Simple wrapper around the log4net IsInfoEnabled property.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.InternalSystemDiagnosticsLogger">
            <summary>
            Logger wrapper for System.Diagnostics.TraceSource logger.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.TraceSourceUtil">
            <summary>
            Creates TraceRoute for a given Type or the closest "parent" that has a listener configured.
            Example: if type is Amazon.DynamoDB.AmazonDynamoDBClient, listeners can be configured for:
            -Amazon.DynamoDB.AmazonDynamoDBClient
            -Amazon.DynamoDB
            -Amazon
            The first matching TraceSource with listeners will be used.
            If no listeners are configured for type or one of its "parents", will return null.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TraceSourceUtil.GetTraceSource(System.Type)">
            <summary>
            Gets a TraceSource for given Type with SourceLevels.All.
            If there are no listeners configured for targetType or one of its "parents", returns null.
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TraceSourceUtil.GetTraceSource(System.Type,System.Diagnostics.SourceLevels)">
            <summary>
            Gets a TraceSource for given Type and SourceLevels.
            If there are no listeners configured for targetType or one of its "parents", returns null.
            </summary>
            <param name="targetType"></param>
            <param name="sourceLevels"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.InternalLog4netLogger">
            <summary>
            Logger wrapper for reflected log4net logging methods.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.loadStatics">
            <summary>
            This should be a one time call to use reflection to find all the types and methods
            needed for the logging API.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Error method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Debug method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net DebugFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net InfoFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsErrorEnabled">
            <summary>
            Simple wrapper around the log4net IsErrorEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsDebugEnabled">
            <summary>
            Simple wrapper around the log4net IsDebugEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsInfoEnabled">
            <summary>
            Simple wrapper around the log4net IsInfoEnabled property.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.#ctor">
            <summary>
            Constructs an empty, disabled metrics object
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.StartEvent(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Starts timing an event. Logs an exception if an event
            of the same type was started but not stopped.
            </summary>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.StopEvent(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Stops timing an event. Logs an exception if the event wasn't started.
            </summary>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.AddProperty(Amazon.Runtime.Internal.Util.Metric,System.Object)">
            <summary>
            Adds a property for a metric. If there are multiple, the
            object is added as a new item in a list.
            </summary>
            <param name="metric"></param>
            <param name="property"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.SetCounter(Amazon.Runtime.Internal.Util.Metric,System.Int64)">
            <summary>
            Sets a counter for a specific metric.
            </summary>
            <param name="metric"></param>
            <param name="value"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.IncrementCounter(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Increments a specific metric counter.
            If counter doesn't exist yet, it is set to 1.
            </summary>
            <param name="metric"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.GetErrors">
            <summary>
            Returns errors associated with the metric, including
            if there are still any timing events in-flight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.ToString">
            <summary>
            Returns a string representation of the current metrics.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Properties">
            <summary>
            Collection of properties being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Timings">
            <summary>
            Timings for metrics being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Counters">
            <summary>
            Counters being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.IsEnabled">
            <summary>
            Whether metrics are enabled for the request
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.Timing">
            <summary>
            Timing information for a metric
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.#ctor">
            <summary>
            Empty, stopped timing object
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.#ctor(System.Int64)">
            <summary>
            Timing object in a started state
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.Stop(System.Int64)">
            <summary>
            Stops timing
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.IsFinished">
            <summary>
            Whether the timing has been stopped
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.ElapsedTicks">
            <summary>
            Elapsed ticks from start to stop.
            If timing hasn't been stopped yet, returns 0.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.ElapsedTime">
            <summary>
            Elapsed time from start to stop.
            If timing hasn't been stopped yet, returns TimeSpan.Zero
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.TimingEvent">
            <summary>
            Timing event, stops timing of a metric when disposed
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.PartialWrapperStream">
            <summary>
            This class is used to wrap a stream for a particular segment of a stream.  It 
            makes that segment look like you are reading from beginning to end of the stream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.ReadOnlyWrapperStream">
            <summary>
            Wrapper stream that only supports reading
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.PartialReadOnlyWrapperStream">
            <summary>
            Partial wrapper stream that only supports reading
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.StringUtils">
            <summary>
            Utilities for converting objects to strings. Used by the marshaller classes.
            </summary>
        </member>
        <member name="T:ThirdParty.BouncyCastle.Asn1.Asn1InputStream">
            a general purpose ASN.1 decoder - note: this class differs from the
            others in that it returns null after it has read the last object in
            the stream. If an ASN.1 Null is encountered a Der/BER Null object is
            returned.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.IO.Stream,System.Int32)">
             Create an ASN1InputStream where no DER object will be longer than limit.
            
             @param input stream containing ASN.1 encoded data.
             @param limit maximum size of a DER encoded object.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.Byte[])">
             Create an ASN1InputStream based on the input byte array. The length of DER objects in
             the stream is automatically limited to the length of the input array.
            
             @param input array containing ASN.1 encoded data.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.Asn1InputStream.BuildObject(System.Int32,System.Int32,System.Int32)">
            build an object given its tag and the number of bytes to construct it from.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.Asn1Object.FromByteArray(System.Byte[])">
            <summary>Create a base ASN.1 object from a byte array.</summary>
            <param name="data">The byte array to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception cref="T:System.IO.IOException">If there is a problem parsing the data.</exception>
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.Asn1Object.FromStream(System.IO.Stream)">
            <summary>Read a base ASN.1 object from a stream.</summary>
            <param name="inStr">The stream to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception cref="T:System.IO.IOException">If there is a problem parsing the data.</exception>
        </member>
        <member name="P:ThirdParty.BouncyCastle.Asn1.Asn1Sequence.Item(System.Int32)">
             return the object at the sequence position indicated by index.
            
             @param index the sequence number (starting at zero) of the object
             @return the object at the sequence position indicated by index.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.DerSequence.#ctor">
            create an empty sequence
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.DerSequence.#ctor(ThirdParty.BouncyCastle.Asn1.Asn1Encodable)">
            create a sequence containing one object
        </member>
        <member name="M:ThirdParty.BouncyCastle.Asn1.DerSequence.#ctor(ThirdParty.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a sequence containing a vector of objects.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Math.BigInteger.AddMagnitudes(System.Int32[],System.Int32[])">
            return a = a + b - b preserved.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Math.BigInteger.CompareTo(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            unsigned comparison on two arrays - note the arrays may
            start with leading zeros.
        </member>
        <member name="M:ThirdParty.BouncyCastle.Math.BigInteger.Subtract(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            returns x = x - y - we assume x is >= y
        </member>
        <member name="M:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemReader.ReadPemObject">
            <returns>
            A <see cref="T:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </returns>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="M:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator.Generate">
            <returns>
            A <see cref="T:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </returns>
            <exception cref="T:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemGenerationException"></exception>
        </member>
        <member name="M:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObjectParser.ParseObject(ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObject)">
            <param name="obj">
            A <see cref="T:ThirdParty.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </param>
            <returns>
            A <see cref="T:System.Object"/>
            </returns>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="T:ThirdParty.Ionic.Zlib.CRC32">
            <summary>
            Calculates a 32bit Cyclic Redundancy Checksum (CRC) using the
            same polynomial used by Zip. This type is used internally by DotNetZip; it is generally not used directly
            by applications wishing to create, read, or manipulate zip archive files.
            </summary>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.GetCrc32(System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.GetCrc32AndCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream, and writes the input into the output stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <param name="output">The stream into which to deflate the input</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.ComputeCrc32(System.Int32,System.Byte)">
            <summary>
            Get the CRC32 for the given (word,byte) combo. 
            This is a computation defined by PKzip.
            </summary>
            <param name="W">The word to start with.</param>
            <param name="B">The byte to combine it with.</param>
            <returns>The CRC-ized result.</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.SlurpBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the value for the running CRC32 using the given block of bytes.
            This is useful when using the CRC32() class in a Stream.
            </summary>
            <param name="block">block of bytes to slurp</param>
            <param name="offset">starting point in the block</param>
            <param name="count">how many bytes within the block to slurp</param>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CRC32.TotalBytesRead">
            <summary>
            indicates the total number of bytes read on the CRC stream.
            This is used when writing the ZipDirEntry when compressing files.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CRC32.Crc32Result">
            <summary>
            Indicates the current CRC for all blocks slurped in.
            </summary>
        </member>
        <member name="T:ThirdParty.Ionic.Zlib.CrcCalculatorStream">
             <summary>
             A Stream that calculates a CRC32 (a checksum) on all bytes read, 
             or on all bytes written.
             </summary>
            
             <remarks>
             <para>
             This class can be used to verify the CRC of a ZipEntry when reading from a stream, 
             or to calculate a CRC when writing to a stream.  The stream should be used to either 
             read, or write, but not both.  If you intermix reads and writes, the results are
             not defined. 
             </para>
             <para>This class is intended primarily for use internally by the DotNetZip library.</para>
             </remarks>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.#ctor(System.IO.Stream)">
            <summary>
            The constructor.
            </summary>
            <param name="stream">The underlying stream</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            The constructor.
            </summary>
            <param name="stream">The underlying stream</param>
            <param name="length">The length of the stream to slurp</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from the stream
            </summary>
            <param name="buffer">the buffer to read</param>
            <param name="offset">the offset at which to start</param>
            <param name="count">the number of bytes to read</param>
            <returns>the number of bytes actually read</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write to the stream. 
            </summary>
            <param name="buffer">the buffer from which to write</param>
            <param name="offset">the offset at which to start writing</param>
            <param name="count">the number of bytes to write</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not implemented.
            </summary>
            <param name="offset">N/A</param>
            <param name="origin">N/A</param>
            <returns>N/A</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.SetLength(System.Int64)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">N/A</param>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.TotalBytesSlurped">
             <summary>
             Gets the total number of bytes run through the CRC32 calculator.
             </summary>
            
             <remarks>
             This is either the total number of bytes read, or the total number
             of bytes written, depending on the direction of this stream.
             </remarks>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Crc32">
            <summary>
            Provides the current CRC for all blocks slurped in.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanRead">
            <summary>
            Indicates whether the stream supports reading. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanSeek">
            <summary>
            Indicates whether the stream supports seeking. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanWrite">
            <summary>
            Indicates whether the stream supports writing. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Length">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Position">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifier">
            <summary>
            An access control policy action identifies a specific action in a service
            that can be performed on a resource. For example, sending a message to a
            queue.
            <para>
            ActionIdentifiers allow you to limit what your access control policy statement affects.
            For example, you could create a policy statement that enables a certain group
            of users to send messages to your queue, but not allow them to perform any
            other actions on your queue.
            </para>
            <para>
            The action is B in the statement
            "A has permission to do B to C where D applies."
            </para>
            <para>Free form access control policy actions may include a wildcard (*) to match
            multiple actions.
            </para>
            <para>
            Constants for known actions can be found in the Amazon.Auth.AccessControlPolicy.ActionIdentifiers namespace.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ActionIdentifier.#ctor(System.String)">
            <summary>
            Constructs an Actionidentifer with the given action name.
            </summary>
            <param name="actionName">The name of the action</param>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.ActionIdentifier.ActionName">
            <summary>
            Gets and sets the name of this action. For example, 'sqs:SendMessage' is the
            name corresponding to the SQS action that enables users to send a message
            to an SQS queue.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Condition">
            <summary>
            AWS access control policy conditions are contained in <see cref="T:Amazon.Auth.AccessControlPolicy.Statement"/>
            objects, and affect when a statement is applied. For example, a statement
            that allows access to an Amazon SQS queue could use a condition to only apply
            the effect of that statement for requests that are made before a certain
            date, or that originate from a range of IP addresses.
            <para>
            Multiple conditions can be included in a single statement, and all conditions
            must evaluate to true in order for the statement to take effect.
            </para>
            <para>
            The set of conditions is D in the statement
            "A has permission to do B to C where D applies."
            </para>
            <para>
            A condition is composed of three parts:
            <list type="definition">
                <item>
                    <term>Condition Key</term>
                    <description>The condition key declares which value of a
            request to pull in and compare against when a policy is evaluated by AWS. For
            example, using <see cref="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SOURCE_IP_CONDITION_KEY"/> will cause
            AWS to pull in the current request's source IP as the first value to compare
            against every time your policy is evaluated.
                    </description>
                </item>
                <item>
                    <term>Comparison Type</term>
                    <description>This is a static value used as the second value
            in the comparison when your policy is evaluated. Depending on the comparison
            type, this value can optionally use wildcards. See the documentation for
            individual comparison types for more information.
                    </description>
                </item>
                <item>
                    <term>Comparison Value</term>
                    <description>This is a static value used as the second value
            in the comparison when your policy is evaluated. Depending on the comparison
            type, this value can optionally use wildcards. See the documentation for
            individual comparison types for more information.
                    </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Condition.Type">
            <summary>
            Gets the type of this condition.
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Condition.ConditionKey">
            <summary>
            Gets and Sets the name of the condition key involved in this condition.
            Condition keys are predefined values supported by AWS that provide input
            to a condition's evaluation, such as the current time, or the IP address
            of the incoming request.
            <para>
            Your policy is evaluated for each incoming request, and condition keys
            specify what information to pull out of those incoming requests and plug
            into the conditions in your policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Condition.Values">
            <summary>
            Gets and Sets the values specified for this access control policy condition.
            For example, in a condition that compares the incoming IP address of a
            request to a specified range of IP addresses, the range of IP addresses
            is the single value in the condition.
            <para>
            Most conditions accept only one value, but multiple values are possible.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory">
            <summary>
            A factory for creating conditions to be used in the policy.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.CURRENT_TIME_CONDITION_KEY">
            <summary>
            Condition key for the current time.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.DateComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SECURE_TRANSPORT_CONDITION_KEY">
            <summary>
            Condition key for whether or not an incoming request is using a secure
            transport to make the request (i.e. HTTPS instead of HTTP).
            <para>
            This condition key should only be used with the boolean overload of NewCondition.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SOURCE_IP_CONDITION_KEY">
            <summary>
            Condition key for the source IP from which a request originates.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.IpAddressComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.USER_AGENT_CONDITION_KEY">
            <summary>
            Condition key for the user agent included in a request.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/>
            enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.EPOCH_TIME_CONDITION_KEY">
            <summary>
            Condition key for the current time, in epoch seconds.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.NumericComparisonType"/> enum.
            objects.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.REFERRER_CONDITION_KEY">
            <summary>
            Condition key for the referrer specified by a request.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/>
            objects.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SOURCE_ARN_CONDITION_KEY">
            <summary>
            Condition key for the Amazon Resource Name (ARN) of the source specified
            in a request. The source ARN indicates which resource is affecting the
            resource listed in your policy. For example, an SNS topic is the source
            ARN when publishing messages from the topic to an SQS queue.
            <para>
            This condition key should only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_CANNED_ACL_CONDITION_KEY">
            <summary>
            Condition key for the canned ACL specified by a request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_LOCATION_CONSTRAINT_CONDITION_KEY">
            <summary>
            Condition key for the location constraint specified by a request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_PREFIX_CONDITION_KEY">
            <summary>
            Condition key for the prefix specified by a request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_DELIMITER_CONDITION_KEY">
            <summary>
            Condition key for the delimiter specified by a request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_MAX_KEYS_CONDITION_KEY">
            <summary>
            Condition key for the max keys specified by a request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_COPY_SOURCE_CONDITION_KEY">
            <summary>
            Condition key for the source object specified by a request to copy an
            object.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_METADATA_DIRECTIVE_CONDITION_KEY">
            <summary>
            Condition key for the metadata directive specified by a request to copy
            an object.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.S3_VERSION_ID_CONDITION_KEY">
            <summary>
            Condition key for the version ID of an object version specified by a
            request.
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SNS_ENDPOINT_CONDITION_KEY">
            <summary>
            Condition key for The URL, e-mail address, or ARN from a Subscribe
            request or a previously confirmed subscription. Use with string
            conditions to restrict access to specific endpoints (e.g.,
            *@mycompany.com).
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.SNS_PROTOCOL_CONDITION_KEY">
            <summary>
            Condition key for the protocol value from a Subscribe request or a
            previously confirmed subscription. Use with string conditions to restrict
            publication to specific delivery protocols (e.g., HTTPS).
            <para>
            This condition key may only be used with <see cref="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType"/> enum.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType,System.String,System.String)">
            <summary>
            Constructs a new access control policy condition that compares ARNs (Amazon Resource Names).
            </summary>
            <param name="key"> The access policy condition key specifying where to get the first ARN for the comparison</param>
            <param name="type">The type of comparison to perform.</param>
            <param name="value">The second ARN to compare against. When using ArnLike or ArnNotLike this may contain the
                multi-character wildcard (*) or the single-character wildcard</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(System.String,System.Boolean)">
            <summary>
            Constructs a new access policy condition that performs a boolean
            comparison.
            </summary>
            <param name="key">The access policy condition key specifying where to get the
                       first boolean value for the comparison (ex: aws:SecureTransport).</param>
            <param name="value">The boolean to compare against.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(Amazon.Auth.AccessControlPolicy.ConditionFactory.DateComparisonType,System.DateTime)">
            <summary>
            Constructs a new access policy condition that compares the current time
            (on the AWS servers) to the specified date.
            </summary>
            <param name="type">The type of comparison to perform. For example,
                       DateComparisonType.DateLessThan will cause this policy
                       condition to evaluate to true if the current date is less than
                       the date specified in the second argument.</param>
            <param name="date">The date to compare against.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewIpAddressCondition(System.String)">
            <summary>
            Constructs a new access policy condition that compares the source IP
            address of the incoming request to an AWS service against the specified
            CIDR range. The condition evaluates to true (meaning the policy statement
            containing it will be applied) if the incoming source IP address is
            within that range.
            <para>
            To achieve the opposite effect (i.e. cause the condition to evaluate to
            true when the incoming source IP is <b>not</b> in the specified CIDR
            range) use the alternate constructor form and specify
            IpAddressComparisonType.NotIpAddress.
            </para>
            </summary>
            <param name="ipAddressRange">The CIDR IP range involved in the policy condition.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(Amazon.Auth.AccessControlPolicy.ConditionFactory.IpAddressComparisonType,System.String)">
            <summary>
            Constructs a new access policy condition that compares the source IP
            address of the incoming request to an AWS service against the specified
            CIDR range. When the condition evaluates to true (i.e. when the incoming
            source IP address is within the CIDR range or not) depends on the
            specified IpAddressComparisonType.
            </summary>
            <param name="type">The type of comparison to to perform.</param>
            <param name="ipAddressRange">The CIDR IP range involved in the policy condition.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(Amazon.Auth.AccessControlPolicy.ConditionFactory.NumericComparisonType,System.String,System.String)">
            <summary>
            Constructs a new access policy condition that compares two numbers.
            </summary>
            <param name="type">The type of comparison to perform.</param>
            <param name="key">The access policy condition key specifying where to get the
                      first number for the comparison.</param>
            <param name="value">The second number to compare against.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCondition(Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType,System.String,System.String)">
            <summary>
            Constructs a new access control policy condition that compares two
            strings.
            </summary>
            <param name="type">The type of comparison to perform</param>
            <param name="key">The access policy condition key specifying where to get the
                       first string for the comparison (ex: aws:UserAgent). 
            </param>
            <param name="value">The second string to compare against. When using
                       StringComparisonType.StringLike or
                       StringComparisonType.StringNotLike this may contain
                       the multi-character wildcard (*) or the single-character
                       wildcard (?).
            </param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewSourceArnCondition(System.String)">
             <summary>
             Constructs a new access policy condition that compares the Amazon
             Resource Name (ARN) of the source of an AWS resource that is modifying
             another AWS resource with the specified pattern.
             <para>
             For example, the source ARN could be an Amazon SNS topic ARN that is
             sending messages to an Amazon SQS queue. In that case, the SNS topic ARN
             would be compared the ARN pattern specified here.
             </para>
             <para>
             The endpoint pattern may optionally contain the multi-character wildcard
            * (*) or the single-character wildcard (?). Each of the six colon-delimited
             components of the ARN is checked separately and each can include a
             wildcard.
             </para>
             <code>
             Policy policy = new Policy("MyQueuePolicy");
             policy.WithStatements(new Statement(Statement.StatementEffect.Allow)
                 .WithPrincipals(new Principal("*")).WithActionIdentifiers(SQSActionIdentifiers.SendMessage)
                 .WithResources(new Resource(myQueueArn))
                 .WithConditions(ConditionFactory.NewSourceArnCondition(myTopicArn)));
             </code>
             </summary>
             <param name="arnPattern">The ARN pattern against which the source ARN will be compared.
                 Each of the six colon-delimited components of the ARN is
                 checked separately and each can include a wildcard.</param>
             <returns>A new access control policy condition that compares the ARN of
                    the source specified in an incoming request with the ARN pattern
                    specified here.</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewSecureTransportCondition">
            <summary>
            Constructs a new access control policy condition that tests if the
            incoming request was sent over a secure transport (HTTPS).
            </summary>
            <returns>A new access control policy condition that tests if the incoming
                            request was sent over a secure transport (HTTPS).</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewCannedACLCondition(Amazon.S3.S3CannedACL)">
            <summary>
            Constructs a new access policy condition that compares an Amazon S3
            canned ACL with the canned ACL specified by an incoming request.
            <para>
            You can use this condition to ensure that any objects uploaded to an
            Amazon S3 bucket have a specific canned ACL set.
            </para>
            </summary>
            <param name="cannedAcl">The Amazon S3 canned ACL to compare against.</param>
            <returns>A new access control policy condition that compares the Amazon S3
                    canned ACL specified in incoming requests against the value
                    specified.</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewEndpointCondition(System.String)">
            <summary>
            Constructs a new access policy condition that compares the requested
            endpoint used to subscribe to an Amazon SNS topic with the specified
            endpoint pattern. The endpoint pattern may optionally contain the
            multi-character wildcard (*) or the single-character wildcard (?).
            <para>
            For example, this condition can restrict subscriptions to a topic to
            email addresses in a certain domain ("*@my-company.com").
            </para>
            <code>
            Policy policy = new Policy("MyTopicPolicy");
            policy.WithStatements(new Statement(Statement.StatementEffect.Allow)
                   .WithPrincipals(new Principal("*")).WithActionIdentifiers(SNSActionIdentifiers.Subscribe)
                   .WithResources(new Resource(myTopicArn))
                   .WithConditions(ConditionFactory.NewEndpointCondition("*@my-company.com")));
            </code>
            </summary>
            <param name="endpointPattern">The endpoint pattern against which to compare the requested
                       endpoint for an Amazon SNS topic subscription.</param>
            <returns>A new access control policy condition that compares the endpoint
                    used in a request to subscribe to an Amazon SNS topic with the
                    endpoint pattern specified.</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ConditionFactory.NewProtocolCondition(System.String)">
            <summary>
            Constructs a new AWS access control policy condition that allows an
            access control statement to restrict subscriptions to an Amazon SNS topic
            based on the protocol being used for the subscription. For example, this
            condition can restrict subscriptions to a topic to endpoints using HTTPS
            to ensure that messages are securely delivered.
            </summary>
            <param name="protocol">The protocol against which to compare the requested protocol
                       for an Amazon SNS topic subscription.</param>
            <returns>A new access control policy condition that compares the
                    notification protocol requested in a request to subscribe to an
                    Amazon SNS topic with the protocol value specified.</returns>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType">
            <summary>
            Enumeration of the supported ways an ARN comparison can be evaluated.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType.ArnEquals">
            <summary>Exact matching</summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType.ArnLike">
            <summary>
            Loose case-insensitive matching of the ARN. Each of the six
            colon-delimited components of the ARN is checked separately and each
            can include a multi-character match wildcard (*) or a
            single-character match wildcard (?).
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType.ArnNotEquals">
            <summary>Negated form of ArnEquals</summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.ArnComparisonType.ArnNotLike">
            <summary>Negated form of ArnLike</summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.DateComparisonType">
            <summary>
            Enumeration of the supported ways a date comparison can be evaluated.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.IpAddressComparisonType">
            <summary>
            Enumeration of the supported ways an IP address comparison can be evaluated.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.IpAddressComparisonType.IpAddress">
            <summary>
            Matches an IP address against a CIDR IP range, evaluating to true if
            the IP address being tested is in the condition's specified CIDR IP
            range.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.IpAddressComparisonType.NotIpAddress">
            <summary>
            Negated form of IpAddress
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.NumericComparisonType">
            <summary>
            Enumeration of the supported ways a numeric comparison can be evaluated
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType">
            <summary>
            Enumeration of the supported ways a string comparison can be evaluated.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringEquals">
            <summary>
            Case-sensitive exact string matching
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringEqualsIgnoreCase">
            <summary>
            Case-insensitive string matching
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringLike">
            <summary>
            Loose case-insensitive matching. The values can include a
            multi-character match wildcard (*) or a single-character match
            wildcard (?) anywhere in the string.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringNotEquals">
            <summary>
            Negated form of StringEquals.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringNotEqualsIgnoreCase">
            <summary>
            Negated form of StringEqualsIgnorecase.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.ConditionFactory.StringComparisonType.StringNotLike">
            <summary>
            Negated form of StringLike.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Policy">
            <summary>
            An AWS access control policy is a object that acts as a container for one or
            more statements, which specify fine grained rules for allowing or denying
            various types of actions from being performed on your AWS resources.
            <para>
            By default, all requests to use your resource coming from anyone but you are
            denied. Access control polices can override that by allowing different types
            of access to your resources, or by explicitly denying different types of
            access.
            </para>
            <para>
            Each statement in an AWS access control policy takes the form:
            "A has permission to do B to C where D applies".
            <list type="definition">
                <item>
                    <term>A is the prinicpal</term>
                    <description>The AWS account that is making a request to
                        access or modify one of your AWS resources.
                    </description>
                </item>
                <item>
                    <term>B is the action</term>
                    <description>the way in which your AWS resource is being accessed or modified, such
                        as sending a message to an Amazon SQS queue, or storing an object in an Amazon S3 bucket.
                    </description>
                </item>
                <item>
                    <term>C is the resource</term>
                    <description>your AWS entity that the principal wants to access, such
                        as an Amazon SQS queue, or an object stored in Amazon S3.
                    </description>
                </item>
                <item>
                    <term>D is the set of conditions</term>
                    <description>optional constraints that specify when to allow or deny
                        access for the principal to access your resource.  Many expressive conditions are available,
                        some specific to each service.  For example you can use date conditions to allow access to
                        your resources only after or before a specific time.
                    </description>
                </item>
            </list>
            </para>
            <para>
            Note that an AWS access control policy should not be confused with the
            similarly named "POST form policy" concept used in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.Policy.DEFAULT_POLICY_VERSION">
            <summary>
            The default policy version
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.#ctor">
            <summary>
            Constructs an empty AWS access control policy ready to be populated with
            statements.
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.#ctor(System.String)">
            <summary>
            Constructs a new AWS access control policy with the specified policy ID.
            The policy ID is a user specified string that serves to help developers
            keep track of multiple polices. Policy IDs are often used as a human
            readable name for a policy.
            </summary>
            <param name="id">The policy ID for the new policy object. Policy IDs serve to
                       help developers keep track of multiple policies, and are often
                       used to give the policy a meaningful, human readable name.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.#ctor(System.String,System.Collections.Generic.IList{Amazon.Auth.AccessControlPolicy.Statement})">
            <summary>
            Constructs a new AWS access control policy with the specified policy ID
            and collection of statements. The policy ID is a user specified string
            that serves to help developers keep track of multiple polices. Policy IDs
            are often used as a human readable name for a policy.
            </summary>
            <param name="id">The policy ID for the new policy object. Policy IDs serve to
                       help developers keep track of multiple policies, and are often
                       used to give the policy a meaningful, human readable name.</param>
            <param name="statements">The statements to include in the new policy.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.WithId(System.String)">
            <summary>
            Sets the policy ID for this policy and returns the updated policy so that
            multiple calls can be chained together.
            <para>
            Policy IDs serve to help developers keep track of multiple policies, and
            are often used as human readable name for a policy.
            </para>
            </summary>
            <paraparam name="id">The polich ID for this policy</paraparam>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.WithStatements(Amazon.Auth.AccessControlPolicy.Statement[])">
            <summary>
            Sets the collection of statements contained by this policy and returns
            this policy object so that additional method calls can be chained
            together.
            <para>
            Individual statements in a policy are what specify the rules that enable
            or disable access to your AWS resources.
            </para>
            </summary>
            <param name="statements">The collection of statements included in this policy.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.ToJson">
            <summary>
            Returns a JSON string representation of this AWS access control policy,
            suitable to be sent to an AWS service as part of a request to set an
            access control policy.
            </summary>
            <returns>A JSON string representation of this AWS access control policy.</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.ToJson(System.Boolean)">
            <summary>
            Returns a JSON string representation of this AWS access control policy,
            suitable to be sent to an AWS service as part of a request to set an
            access control policy.
            </summary>
            <param name="prettyPrint">Toggle pretty print for the generated JSON document</param>
            <returns>A JSON string representation of this AWS access control policy.</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Policy.FromJson(System.String)">
            <summary>
            Parses a JSON document of a policy and creates a Policy object.
            </summary>
            <param name="json">JSON document of a policy.</param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Policy.Id">
            <summary>
            Gets and Sets the policy ID for this policy. Policy IDs serve to help
            developers keep track of multiple policies, and are often used as human
            readable name for a policy.
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Policy.Version">
            <summary>
            Gets and sets the version of this AWS policy.
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Policy.Statements">
            <summary>
            Gets and Sets the collection of statements contained by this policy. Individual
            statements in a policy are what specify the rules that enable or disable
            access to your AWS resources.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Principal">
            <summary>
            A principal is an AWS account which is being allowed or denied access to a
            resource through an access control policy. The principal is a property of the
            Statement object, not directly the <see cref="T:Amazon.Auth.AccessControlPolicy.Policy"/> object.
            <para>
            The principal is A in the statement
            "A has permission to do B to C where D applies."
            </para>
            <para>
            In an access control policy statement, you can set the principal to all
            authenticated AWS users through the <see cref="F:Amazon.Auth.AccessControlPolicy.Principal.AllUsers"/> member. This
            is useful when you don't want to restrict access based on the identity of the
            requester, but instead on other identifying characteristics such as the
            requester's IP address.
            </para>
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.Principal.AWS_PROVIDER">
            <summary>
            The default Principal provider for AWS accounts.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.Principal.CANONICAL_USER_PROVIDER">
            <summary>
            Principal provider for Canonical User IDs.
            </summary>
        </member>
        <member name="F:Amazon.Auth.AccessControlPolicy.Principal.AllUsers">
            <summary>
            Principal instance that includes all users, including anonymous users.
            <para>
            This is useful when you don't want to restrict access based on the
            identity of the requester, but instead on other identifying
            characteristics such as the requester's IP address.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Principal.#ctor(System.String)">
            <summary>
            Constructs a new principal with the specified AWS account ID.
            </summary>
            <param name="accountId">An AWS account ID.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Principal.#ctor(System.String,System.String)">
            <summary>
            Constructs a new principal with the specified provider and id
            </summary>
            <param name="provider">The provider of the principal</param>
            <param name="id">The unique ID of the Principal within the provider</param>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Principal.Provider">
            <summary>
            Gets and sets the provider for this principal, which indicates in what group of
            users this principal resides.
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Principal.Id">
            <summary>
            Gets the unique ID for this principal.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Resource">
            <summary>
            Represents a resource involved in an AWS access control policy statement.
            Resources are the service specific AWS entities owned by your account. Amazon
            SQS queues, Amazon S3 buckets and objects, and Amazon SNS topics are all
            examples of AWS resources.
            <para>
            The standard way of specifying an AWS resource is with an Amazon Resource
            Name (ARN).
            </para>
            <para>
            The resource is C in the statement
            "A has permission to do B to C where D applies."
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Resource.#ctor(System.String)">
            <summary>
            Constructs a new AWS access control policy resource. Resources are
            typically specified as Amazon Resource Names (ARNs).
            <para>
            You specify the resource using the following Amazon Resource Name (ARN)
            format: arn:aws:&lt;vendor>:&lt;region>:&lt;namespace>:&lt;relative-id>
            <list type="bullet">
                <item>
                    <description>>vendor identifies the AWS product (e.g., sns)</description>
                </item>
                <item>
                    <description>region is the AWS Region the resource resides in (e.g., us-east-1), if any</description>
                </item>
                <item>
                    <description>namespace is the AWS account ID with no hyphens (e.g., 123456789012)</description>
                </item>
                <item>
                    <description>relative-id is the service specific portion that identifies the specific resource</description>
                </item>
            </list>
            </para>
            <para>
            For example, an Amazon SQS queue might be addressed with the following
            ARN: arn:aws:sqs:us-east-1:987654321000:MyQueue
            </para>
            <para>
            Some resources may not use every field in an ARN. For example, resources
            in Amazon S3 are global, so they omit the region field:
            arn:aws:s3:::bucket/*
            </para>
            </summary>
            <param name="resource">The Amazon Resource Name (ARN) uniquely identifying the desired AWS resource.</param>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Resource.Id">
            <summary>
            Gets the resource ID, typically an Amazon Resource Name (ARN),
            identifying this resource.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ResourceFactory">
            <summary>
            A factory for creating resources to be used in the policy.
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ResourceFactory.NewS3BucketResource(System.String)">
            <summary>
            Constructs a new bucket resource that represents the the specified bucket
            but <b>not any of the contained objects</b>.
            </summary>
            <param name="bucketName">The name of the bucket represented by this AWS access control
                       policy resource.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ResourceFactory.NewS3ObjectResource(System.String,System.String)">
            <summary>
            Constructs a new object resource that represents the specified objects.
            The keyPattern argument may contain the '*' wildcard to match multiple
            objects. For example, an object resource created for bucket 'mybucket'
            and key pattern 'foo*' will match any object stored in 'mybucket' with a
            key that starts with 'foo'.
            </summary>
            <param name="bucketName">The name of the bucket containing the object or objects
                       represented by this resource.</param>
            <param name="keyPattern">The key or key pattern, which can optionally contain the '*'
                       wildcard to include multiple objects in the resource.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.ResourceFactory.NewSQSQueueResource(System.String,System.String)">
            <summary>
            Constructs a new SQS queue resource for an access control policy. A
            policy statement using this resource will allow or deny actions on the
            specified queue.
            </summary>
            <param name="accountId">The AWS account ID of the queue owner.</param>
            <param name="queueName">The name of the Amazon SQS queue.</param>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Statement">
            <summary>
            A statement is the formal description of a single permission, and is always
            contained within a policy object.
            <para>
            A statement describes a rule for allowing or denying access to a specific AWS
            resource based on how the resource is being accessed, and who is attempting
            to access the resource. Statements can also optionally contain a list of
            conditions that specify when a statement is to be honored.
            </para>
            <para>
            For example, consider a statement that:
            <list type="definition">
                <item>
                    <term>A is the prinicpal</term>
                    <description>The AWS account that is making a request to
                        access or modify one of your AWS resources.
                    </description>
                </item>
                <item>
                    <term>B is the action</term>
                    <description>the way in which your AWS resource is being accessed or modified, such
                        as sending a message to an Amazon SQS queue, or storing an object in an Amazon S3 bucket.
                    </description>
                </item>
                <item>
                    <term>C is the resource</term>
                    <description>your AWS entity that the principal wants to access, such
                        as an Amazon SQS queue, or an object stored in Amazon S3.
                    </description>
                </item>
                <item>
                    <term>D is the set of conditions</term>
                    <description>optional constraints that specify when to allow or deny
                        access for the principal to access your resource.  Many expressive conditions are available,
                        some specific to each service.  For example you can use date conditions to allow access to
                        your resources only after or before a specific time.
                    </description>
                </item>
            </list>
            </para>
            <para>
            There are many resources and conditions available for use in statements, and
            you can combine them to form fine grained custom access control polices.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.#ctor(Amazon.Auth.AccessControlPolicy.Statement.StatementEffect)">
            <summary>
            Constructs a new access control policy statement with the specified
            effect.
            <para>
            Before a statement is valid and can be sent to AWS, callers must set the
            principals, resources, and actions (as well as any optional conditions)
            involved in the statement.
            </para>
            </summary>
            <param name="effect">The effect this statement has (allowing access or denying
                       access) when all conditions, resources, principals, and
                       actions are matched.</param>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.WithId(System.String)">
            <summary>
            Sets the ID for this statement and returns the updated statement so
            multiple calls can be chained together.
            <para>
            Statement IDs serve to help keep track of multiple statements, and are
            often used to give the statement a meaningful, human readable name.
            </para>
            <para>
            Developers should be careful to not use the same statement ID for
            multiple statements in the same policy. Reusing the same statement ID in
            different policies is not a problem.
            </para>
            </summary>
            <param name="id">The new statement ID for this statement.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.WithActionIdentifiers(Amazon.Auth.AccessControlPolicy.ActionIdentifier[])">
            <summary>
            Sets the list of actions to which this policy statement applies and
            returns this updated Statement object so that additional method calls can
            be chained together.
            <para>
            Actions limit a policy statement to specific service operations that are
            being allowed or denied by the policy statement. For example, you might
            want to allow any AWS user to post messages to your SQS queue using the
            SendMessage action, but you don't want to allow those users other actions
            such as ReceiveMessage or DeleteQueue.
            </para>
            </summary>
            <param name="actions">The list of actions to which this statement applies.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.WithResources(Amazon.Auth.AccessControlPolicy.Resource[])">
            <summary>
            Sets the resources associated with this policy statement and returns this
            updated Statement object so that additional method calls can be chained
            together.
            <para>
            Resources are what a policy statement is allowing or denying access to,
            such as an Amazon SQS queue or an Amazon SNS topic.
            </para>
            <para>
            Note that some services allow only one resource to be specified per
            policy statement.
            </para>
            </summary>
            <param name="resources">The resources associated with this policy statement.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.WithConditions(Amazon.Auth.AccessControlPolicy.Condition[])">
            <summary>
            Sets the conditions associated with this policy statement, and returns
            this updated Statement object so that additional method calls can be
            chained together.
            <para>
            Conditions allow policy statements to be conditionally evaluated based on
            the many available condition types.
            </para>
            <para>
            For example, a statement that allows access to an Amazon SQS queue could
            use a condition to only apply the effect of that statement for requests
            that are made before a certain date, or that originate from a range of IP
            addresses.
            </para>
            <para>
            Multiple conditions can be included in a single statement, and all
            conditions must evaluate to true in order for the statement to take
            effect.
            </para>
            </summary>
            <param name="conditions">The conditions associated with this policy statement.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Statement.WithPrincipals(Amazon.Auth.AccessControlPolicy.Principal[])">
            <summary>
            Sets the principals associated with this policy statement, and returns
            this updated Statement object. Principals control which AWS accounts are
            affected by this policy statement.
            <para>
            If you don't want to restrict your policy to specific users, you can use
            <see cref="F:Amazon.Auth.AccessControlPolicy.Principal.AllUsers"/> to apply the policy to any user trying to
            access your resource.
            </para>
            </summary>
            <param name="principals">The list of principals associated with this policy statement.</param>
            <returns>this instance</returns>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Id">
            <summary>
            Gets and Sets the ID for this statement. Statement IDs serve to help keep track
            of multiple statements, and are often used to give the statement a
            meaningful, human readable name.
            <para>
            Developers should be careful to not use the same statement ID for
            multiple statements in the same policy. Reusing the same statement ID in
            different policies is not a problem.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Effect">
            <summary>
            Gets and Sets the result effect of this policy statement when it is evaluated.
            A policy statement can either allow access or explicitly
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Actions">
            <summary>
            Gets and Sets the list of actions to which this policy statement applies.
            Actions limit a policy statement to specific service operations that are
            being allowed or denied by the policy statement. For example, you might
            want to allow any AWS user to post messages to your SQS queue using the
            SendMessage action, but you don't want to allow those users other actions
            such as ReceiveMessage or DeleteQueue.
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Resources">
            <summary>
            Gets and Sets the resources associated with this policy statement. Resources
            are what a policy statement is allowing or denying access to, such as an
            Amazon SQS queue or an Amazon SNS topic.
            <para>
            Note that some services allow only one resource to be specified per
            policy statement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Conditions">
            <summary>
            Gets and Sets the conditions associated with this policy statement. Conditions
            allow policy statements to be conditionally evaluated based on the many
            available condition types.
            <para>
            For example, a statement that allows access to an Amazon SQS queue could
            use a condition to only apply the effect of that statement for requests
            that are made before a certain date, or that originate from a range of IP
            addresses.
            </para>
            <para>
            When multiple conditions are included in a single statement, all
            conditions must evaluate to true in order for the statement to take
            effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Auth.AccessControlPolicy.Statement.Principals">
            <summary>
            Gets and Sets the principals associated with this policy statement, indicating
            which AWS accounts are affected by this policy statement.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Statement.StatementEffect">
            <summary>
            The effect is the result that you want a policy statement to return at
            evaluation time. A policy statement can either allow access or explicitly
            deny access.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.AutoScalingActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Auto Scaling.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.CloudFormationActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS CloudFormation.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.CloudFrontActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon CloudFront.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.CloudWatchActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon CloudWatch.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.DirectConnectActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS Direct Connect.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.DynamoDBActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon DynamoDB.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.EC2ActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon EC2.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.ElastiCacheActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS ElastiCache.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.ElasticBeanstalkActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS Elastic Beanstalk.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.ElasticLoadBalancingActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Elastic Load Balancing.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.ElasticMapReduceActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon Elastic MapReduce.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.GlacierActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon Glacier.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.IdentityandAccessManagementActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS Identity and Access Management.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.MarketplaceActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS Marketplace.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.RDSActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon RDS.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.RedshiftActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon Redshift.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.Route53ActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon Route 53.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.S3ActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon S3.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.SecurityTokenServiceActionIdentifiers">
            <summary>
            The available AWS access control policy actions for AWS Security Token Service.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.SESActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon SES.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.SimpleDBActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon SimpleDB.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.SNSActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon SNS.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.ActionIdentifiers.SQSActionIdentifiers">
            <summary>
            The available AWS access control policy actions for Amazon SQS.
            </summary>
            <see cref="P:Amazon.Auth.AccessControlPolicy.Statement.Actions"/>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Internal.JsonPolicyReader">
            <summary>
            Deserializes a JSON string into a AWS policy object.
            </summary>
        </member>
        <member name="T:Amazon.Auth.AccessControlPolicy.Internal.JsonPolicyWriter">
            <summary>
            Serializes an AWS policy object to a JSON string, suitable for sending to an
            AWS service.
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Internal.JsonPolicyWriter.WritePolicyToString(System.Boolean,Amazon.Auth.AccessControlPolicy.Policy)">
             Converts the specified AWS policy object to a JSON string, suitable for
             passing to an AWS service.
            
             @param policy
                        The AWS policy object to convert to a JSON string.
            
             @return The JSON string representation of the specified policy object.
            
             @throws IllegalArgumentException
                         If the specified policy is null or invalid and cannot be
                         serialized to a JSON string.
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Internal.JsonPolicyWriter.writePrincipals(Amazon.Auth.AccessControlPolicy.Statement,ThirdParty.Json.LitJson.JsonWriter)">
            <summary>
            Uses the specified generator to write the JSON data for the principals in
            the specified policy statement.
            </summary>
        </member>
        <member name="M:Amazon.Auth.AccessControlPolicy.Internal.JsonPolicyWriter.sortConditionsByTypeAndKey(System.Collections.Generic.IList{Amazon.Auth.AccessControlPolicy.Condition})">
            <summary>
            This sorts the conditions by condition type and key with the list of values for that combination.
            </summary>
            <param name="conditions">The list of conditions to be sorted.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBClient">
            <summary>
            Implementation for accessing AmazonDynamoDBv2.
             
            Amazon DynamoDB <b>Overview</b> <para>This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples of the Amazon
            DynamoDB API. </para>
            </summary>
            <summary>
            Implementation for accessing AmazonDynamoDBv2.
            
            Amazon DynamoDB <b>Overview</b> <para>This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples of the
            low-level DynamoDB API. For information about DynamoDB application development, go to the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/">Amazon DynamoDB Developer Guide</a> .</para> <para>Instead of
            making the requests to the low-level DynamoDB API directly from your application, we recommend that you use the AWS Software Development
            Kits (SDKs). The easy-to-use libraries in the AWS SDKs make it unnecessary to call the low-level DynamoDB API directly from your
            application. The libraries take care of request authentication, serialization, and connection management. For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingAWSSDK.html">Using the AWS SDKs with DynamoDB</a> in the
            <i>Amazon DynamoDB Developer Guide</i> .</para> <para>If you decide to code against the low-level DynamoDB API directly, you will need to
            write the necessary code to authenticate your requests. For more information on signing your requests, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html">Using the DynamoDB API</a> in the <i>Amazon DynamoDB
            Developer Guide</i> .</para> <para>The following are short descriptions of each low-level API action, organized by function.</para> <para>
            <b>Managing Tables</b> </para> <para>
            <ul>
            <li> <para> <i>CreateTable</i> - Creates a table with user-specified provisioned throughput settings. You must designate one attribute as
            the hash primary key for the table; you can optionally designate a second attribute as the range primary key. DynamoDB creates indexes on
            these key attributes for fast data access. Optionally, you can create one or more secondary indexes, which provide fast data access using
            non-key attributes.</para> </li>
            <li> <para> <i>DescribeTable</i> - Returns metadata for a table, such as table size, status, and index information.</para> </li>
            <li> <para> <i>UpdateTable</i> - Modifies the provisioned throughput settings for a table. Optionally, you can modify the provisioned
            throughput settings for global secondary indexes on the table.</para> </li>
            <li> <para> <i>ListTables</i> - Returns a list of all tables associated with the current AWS account and endpoint.</para> </li>
            <li> <para> <i>DeleteTable</i> - Deletes a table and all of its indexes.</para> </li>
            
            </ul>
            </para> <para>For conceptual information about managing tables, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html">Working with Tables</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para> <para> <b>Reading Data</b> </para> <para>
            <ul>
            <li> <para> <i>GetItem</i> - Returns a set of attributes for the item that has a given primary key. By default, <i>GetItem</i> performs an
            eventually consistent read; however, applications can specify a strongly consistent read instead.</para> </li>
            <li> <para> <i>BatchGetItem</i> - Performs multiple <i>GetItem</i> requests for data items using their primary keys, from one table or
            multiple tables. The response from <i>BatchGetItem</i> has a size limit of 1 MB and returns a maximum of 100 items. Both eventually
            consistent and strongly consistent reads can be used.</para> </li>
            <li> <para> <i>Query</i> - Returns one or more items from a table or a secondary index. You must provide a specific hash key value. You can
            narrow the scope of the query using comparison operators against a range key value, or on the index key. <i>Query</i> supports either
            eventual or strong consistency. A single response has a size limit of 1 MB.</para> </li>
            <li> <para> <i>Scan</i> - Reads every item in a table; the result set is eventually consistent. You can limit the number of items returned
            by filtering the data attributes, using conditional expressions. <i>Scan</i> can be used to enable ad-hoc querying of a table against
            non-key attributes; however, since this is a full table scan without using an index, <i>Scan</i> should not be used for any application
            query use case that requires predictable performance.</para> </li>
            
            </ul>
            </para> <para>For conceptual information about reading data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan Operations</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para> <para> <b>Modifying Data</b> </para> <para>
            <ul>
            <li> <para> <i>PutItem</i> - Creates a new item, or replaces an existing item with a new item (including all the attributes). By default,
            if an item in the table already exists with the same primary key, the new item completely replaces the existing item. You can use
            conditional operators to replace an item only if its attribute values match certain conditions, or to insert a new item only if that item
            doesn't already exist.</para> </li>
            <li> <para> <i>UpdateItem</i> - Modifies the attributes of an existing item. You can also use conditional operators to perform an update
            only if the item's attribute values match certain conditions.</para> </li>
            <li> <para> <i>DeleteItem</i> - Deletes an item in a table by primary key. You can use conditional operators to perform a delete an item
            only if the item's attribute values match certain conditions.</para> </li>
            <li> <para> <i>BatchWriteItem</i> - Performs multiple <i>PutItem</i> and <i>DeleteItem</i> requests across multiple tables in a single
            request. A failure of any request(s) in the batch will not cause the entire <i>BatchWriteItem</i> operation to fail. Supports batches of up
            to 25 items to put or delete, with a maximum total request size of 1 MB. </para> </li>
            
            </ul>
            </para> <para>For conceptual information about modifying data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan Operations</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para>
            </summary>
            <summary>
            Implementation for accessing AmazonDynamoDBv2.
            
            Amazon DynamoDB <b>Overview</b> <para>This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples of the Amazon
            DynamoDB API. </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.IAmazonDynamoDB">
            <summary>
            Interface for accessing AmazonDynamoDBv2.
            
            Amazon DynamoDB <b>Overview</b> <para>This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples of the
            low-level DynamoDB API. For information about DynamoDB application development, go to the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/">Amazon DynamoDB Developer Guide</a> .</para> <para>Instead of
            making the requests to the low-level DynamoDB API directly from your application, we recommend that you use the AWS Software Development
            Kits (SDKs). The easy-to-use libraries in the AWS SDKs make it unnecessary to call the low-level DynamoDB API directly from your
            application. The libraries take care of request authentication, serialization, and connection management. For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingAWSSDK.html">Using the AWS SDKs with DynamoDB</a> in the
            <i>Amazon DynamoDB Developer Guide</i> .</para> <para>If you decide to code against the low-level DynamoDB API directly, you will need to
            write the necessary code to authenticate your requests. For more information on signing your requests, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html">Using the DynamoDB API</a> in the <i>Amazon DynamoDB
            Developer Guide</i> .</para> <para>The following are short descriptions of each low-level API action, organized by function.</para> <para>
            <b>Managing Tables</b> </para> <para>
            <ul>
            <li> <para> <i>CreateTable</i> - Creates a table with user-specified provisioned throughput settings. You must designate one attribute as
            the hash primary key for the table; you can optionally designate a second attribute as the range primary key. DynamoDB creates indexes on
            these key attributes for fast data access. Optionally, you can create one or more secondary indexes, which provide fast data access using
            non-key attributes.</para> </li>
            <li> <para> <i>DescribeTable</i> - Returns metadata for a table, such as table size, status, and index information.</para> </li>
            <li> <para> <i>UpdateTable</i> - Modifies the provisioned throughput settings for a table. Optionally, you can modify the provisioned
            throughput settings for global secondary indexes on the table.</para> </li>
            <li> <para> <i>ListTables</i> - Returns a list of all tables associated with the current AWS account and endpoint.</para> </li>
            <li> <para> <i>DeleteTable</i> - Deletes a table and all of its indexes.</para> </li>
            
            </ul>
            </para> <para>For conceptual information about managing tables, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html">Working with Tables</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para> <para> <b>Reading Data</b> </para> <para>
            <ul>
            <li> <para> <i>GetItem</i> - Returns a set of attributes for the item that has a given primary key. By default, <i>GetItem</i> performs an
            eventually consistent read; however, applications can specify a strongly consistent read instead.</para> </li>
            <li> <para> <i>BatchGetItem</i> - Performs multiple <i>GetItem</i> requests for data items using their primary keys, from one table or
            multiple tables. The response from <i>BatchGetItem</i> has a size limit of 1 MB and returns a maximum of 100 items. Both eventually
            consistent and strongly consistent reads can be used.</para> </li>
            <li> <para> <i>Query</i> - Returns one or more items from a table or a secondary index. You must provide a specific hash key value. You can
            narrow the scope of the query using comparison operators against a range key value, or on the index key. <i>Query</i> supports either
            eventual or strong consistency. A single response has a size limit of 1 MB.</para> </li>
            <li> <para> <i>Scan</i> - Reads every item in a table; the result set is eventually consistent. You can limit the number of items returned
            by filtering the data attributes, using conditional expressions. <i>Scan</i> can be used to enable ad-hoc querying of a table against
            non-key attributes; however, since this is a full table scan without using an index, <i>Scan</i> should not be used for any application
            query use case that requires predictable performance.</para> </li>
            
            </ul>
            </para> <para>For conceptual information about reading data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan Operations</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para> <para> <b>Modifying Data</b> </para> <para>
            <ul>
            <li> <para> <i>PutItem</i> - Creates a new item, or replaces an existing item with a new item (including all the attributes). By default,
            if an item in the table already exists with the same primary key, the new item completely replaces the existing item. You can use
            conditional operators to replace an item only if its attribute values match certain conditions, or to insert a new item only if that item
            doesn't already exist.</para> </li>
            <li> <para> <i>UpdateItem</i> - Modifies the attributes of an existing item. You can also use conditional operators to perform an update
            only if the item's attribute values match certain conditions.</para> </li>
            <li> <para> <i>DeleteItem</i> - Deletes an item in a table by primary key. You can use conditional operators to perform a delete an item
            only if the item's attribute values match certain conditions.</para> </li>
            <li> <para> <i>BatchWriteItem</i> - Performs multiple <i>PutItem</i> and <i>DeleteItem</i> requests across multiple tables in a single
            request. A failure of any request(s) in the batch will not cause the entire <i>BatchWriteItem</i> operation to fail. Supports batches of up
            to 25 items to put or delete, with a maximum total request size of 1 MB. </para> </li>
            
            </ul>
            </para> <para>For conceptual information about modifying data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan Operations</a> in the <i>Amazon
            DynamoDB Developer Guide</i> .</para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchGetItem(Amazon.DynamoDBv2.Model.BatchGetItemRequest)">
            <summary>
            <para>The <i>BatchGetItem</i> operation returns the attributes of one or more items from one or more tables. You identify requested items by
            primary key.</para> <para>A single operation can retrieve up to 1 MB of data, which can contain as many as 100 items. <i>BatchGetItem</i>
            will return a partial result if the response size limit is exceeded, the table's provisioned throughput is exceeded, or an internal
            processing failure occurs. If a partial result is returned, the operation returns a value for <i>UnprocessedKeys</i> . You can use this
            value to retry the operation starting with the next item to get.</para> <para>For example, if you ask to retrieve 100 items, but each
            individual item is 50 KB in size, the system returns 20 items (1 MB) and an appropriate <i>UnprocessedKeys</i> value so you can get the next
            page of results. If desired, your application can include its own logic to assemble the pages of results into one dataset.</para> <para>If
            <i>none</i> of the items can be processed due to insufficient provisioned throughput on all of the tables in the request, then
            <i>BatchGetItem</i> will throw a <i>ProvisionedThroughputExceededException</i> . If <i>at least one</i> of the items is successfully
            processed, then <i>BatchGetItem</i> completes successfully, while returning the keys of the unread items in <i>UnprocessedKeys</i> .</para>
            <para>By default, <i>BatchGetItem</i> performs eventually consistent reads on every table in the request. If you want strongly consistent
            reads instead, you can set <i>ConsistentRead</i> to <c>true</c> for any or all tables.</para> <para>In order to minimize response latency,
            <i>BatchGetItem</i> retrieves items in parallel.</para> <para>When designing your application, keep in mind that DynamoDB does not return
            attributes in any particular order. To help parse the response by item, include the primary key values for the items in your request in the
            <i>AttributesToGet</i> parameter.</para> <para>If a requested item does not exist, it is not returned in the result. Requests for
            nonexistent items consume the minimum read capacity units according to the type of read. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations">Capacity Units
            Calculations</a> in the Amazon DynamoDB Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the BatchGetItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchGetItemAsync(Amazon.DynamoDBv2.Model.BatchGetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchGetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchGetItem(Amazon.DynamoDBv2.Model.BatchGetItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchWriteItem(Amazon.DynamoDBv2.Model.BatchWriteItemRequest)">
            <summary>
            <para>The <i>BatchWriteItem</i> operation puts or deletes multiple items in one or more tables. A single call to <i>BatchWriteItem</i> can
            write up to 1 MB of data, which can comprise as many as 25 put or delete requests. Individual items to be written can be as large as 64
            KB.</para> <para><b>NOTE:</b> BatchWriteItem cannot update items. To update items, use the UpdateItem API. </para> <para>The individual
            <i>PutItem</i> and <i>DeleteItem</i> operations specified in <i>BatchWriteItem</i> are atomic; however <i>BatchWriteItem</i> as a whole is
            not. If any requested operations fail because the table's provisioned throughput is exceeded or an internal processing failure occurs, the
            failed operations are returned in the <i>UnprocessedItems</i> response parameter. You can investigate and optionally resend the requests.
            Typically, you would call <i>BatchWriteItem</i> in a loop. Each iteration would check for unprocessed items and submit a new
            <i>BatchWriteItem</i> request with those unprocessed items until all items have been processed.</para> <para>Note that if <i>none</i> of the
            items can be processed due to insufficient provisioned throughput on all of the tables in the request, then <i>BatchGetItem</i> will throw a
            <i>ProvisionedThroughputExceededException</i> .</para> <para>To write one item, you can use the <i>PutItem</i> operation; to delete one
            item, you can use the <i>DeleteItem</i> operation.</para> <para>With <i>BatchWriteItem</i> , you can efficiently write or delete large
            amounts of data, such as from Amazon Elastic MapReduce (EMR), or copy data from another database into DynamoDB. In order to improve
            performance with these large-scale operations, <i>BatchWriteItem</i> does not behave in the same way as individual <i>PutItem</i> and
            <i>DeleteItem</i> calls would For example, you cannot specify conditions on individual put and delete requests, and <i>BatchWriteItem</i>
            does not return deleted items in the response.</para> <para>If you use a programming language that supports concurrency, such as Java, you
            can use threads to write items in parallel. Your application must include the necessary logic to manage the threads. With languages that
            don't support threading, such as PHP, you must update or delete the specified items one at a time. In both situations, <i>BatchWriteItem</i>
            provides an alternative where the API performs the specified put and delete operations in parallel, giving you the power of the thread pool
            approach without having to introduce complexity into your application.</para> <para>Parallel processing reduces latency, but each specified
            put and delete request consumes the same number of write capacity units whether it is processed in parallel or not. Delete operations on
            nonexistent items consume one write capacity unit.</para> <para>If one or more of the following is true, DynamoDB rejects the entire batch
            write operation:</para>
            <ul>
            <li> <para>One or more tables specified in the <i>BatchWriteItem</i> request does not exist.</para> </li>
            <li> <para>Primary key attributes specified on an item in the request do not match those in the corresponding table's primary key
            schema.</para> </li>
            <li> <para>You try to perform multiple operations on the same item in the same <i>BatchWriteItem</i> request. For example, you cannot put
            and delete the same item in the same <i>BatchWriteItem</i> request. </para> </li>
            <li> <para>The total request size exceeds 1 MB.</para> </li>
            <li> <para>Any individual item in a batch exceeds 64 KB.</para> </li>
            
            </ul>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the BatchWriteItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchWriteItemAsync(Amazon.DynamoDBv2.Model.BatchWriteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchWriteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchWriteItem(Amazon.DynamoDBv2.Model.BatchWriteItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.CreateTable(Amazon.DynamoDBv2.Model.CreateTableRequest)">
            <summary>
            <para>The <i>CreateTable</i> operation adds a new table to your account. In an AWS account, table names must be unique within each region.
            That is, you can have two tables with same name if you create the tables in different regions.</para> <para> <i>CreateTable</i> is an
            asynchronous operation. Upon receiving a <i>CreateTable</i> request, DynamoDB immediately returns a response with a <i>TableStatus</i> of
            <c>CREATING</c> . After the table is created, DynamoDB sets the <i>TableStatus</i> to <c>ACTIVE</c> . You can perform read and write
            operations only on an <c>ACTIVE</c> table. </para> <para>If you want to create multiple tables with secondary indexes on them, you must
            create them sequentially. Only one table with secondary indexes can be in the <c>CREATING</c> state at any given time.</para> <para>You can
            use the <i>DescribeTable</i> API to check the table status.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the CreateTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.CreateTableAsync(Amazon.DynamoDBv2.Model.CreateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.CreateTable(Amazon.DynamoDBv2.Model.CreateTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteItem(Amazon.DynamoDBv2.Model.DeleteItemRequest)">
            <summary>
            <para>Deletes a single item in a table by primary key. You can perform a conditional delete operation that deletes the item if it exists, or
            if it has an expected attribute value.</para> <para>In addition to deleting an item, you can also return the item's attribute values in the
            same operation, using the <i>ReturnValues</i> parameter.</para> <para>Unless you specify conditions, the <i>DeleteItem</i> is an idempotent
            operation; running it multiple times on the same item or attribute does <i>not</i> result in an error response.</para> <para>Conditional
            deletes are useful for only deleting items if specific conditions are met. If those conditions are met, DynamoDB performs the delete.
            Otherwise, the item is not deleted. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the DeleteItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteItemAsync(Amazon.DynamoDBv2.Model.DeleteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteItem(Amazon.DynamoDBv2.Model.DeleteItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteTable(Amazon.DynamoDBv2.Model.DeleteTableRequest)">
            <summary>
            <para>The <i>DeleteTable</i> operation deletes a table and all of its items. After a <i>DeleteTable</i> request, the specified table is in
            the <c>DELETING</c> state until DynamoDB completes the deletion. If the table is in the <c>ACTIVE</c> state, you can delete it. If a table
            is in <c>CREATING</c> or <c>UPDATING</c> states, then DynamoDB returns a
            <i>ResourceInUseException</i> . If the specified table does not exist, DynamoDB returns a
            <i>ResourceNotFoundException</i> . If table is already in the <c>DELETING</c> state, no error is returned. </para> <para><b>NOTE:</b>
            DynamoDB might continue to accept data read and write operations, such as GetItem and PutItem, on a table in the DELETING state until the
            table deletion is complete. </para> <para>When you delete a table, any indexes on that table are also deleted.</para> <para>Use the
            <i>DescribeTable</i> API to check the status of the table. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the DeleteTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteTableAsync(Amazon.DynamoDBv2.Model.DeleteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteTable(Amazon.DynamoDBv2.Model.DeleteTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DescribeTable(Amazon.DynamoDBv2.Model.DescribeTableRequest)">
            <summary>
            <para>Returns information about the table, including the current status of the table, when it was created, the primary key schema, and any
            indexes on the table.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the DescribeTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DescribeTableAsync(Amazon.DynamoDBv2.Model.DescribeTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DescribeTable(Amazon.DynamoDBv2.Model.DescribeTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.GetItem(Amazon.DynamoDBv2.Model.GetItemRequest)">
            <summary>
            <para>The <i>GetItem</i> operation returns a set of attributes for the item with the given primary key. If there is no matching item,
            <i>GetItem</i> does not return any data.</para> <para> <i>GetItem</i> provides an eventually consistent read by default. If your application
            requires a strongly consistent read, set <i>ConsistentRead</i> to <c>true</c> . Although a strongly consistent read might take more time
            than an eventually consistent read, it always returns the last updated value.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the GetItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.GetItemAsync(Amazon.DynamoDBv2.Model.GetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.GetItem(Amazon.DynamoDBv2.Model.GetItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTables(Amazon.DynamoDBv2.Model.ListTablesRequest)">
            <summary>
            <para>Returns an array of table names associated with the current account and endpoint. The output from <i>ListTables</i> is paginated, with
            each page returning a maximum of 100 table names.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the ListTables service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTablesAsync(Amazon.DynamoDBv2.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTables operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTables(Amazon.DynamoDBv2.Model.ListTablesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTables">
            <summary>
            <para>Returns an array of table names associated with the current account and endpoint. The output from <i>ListTables</i> is paginated, with
            each page returning a maximum of 100 table names.</para>
            </summary>
            
            
            <returns>The response from the ListTables service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.PutItem(Amazon.DynamoDBv2.Model.PutItemRequest)">
            <summary>
            <para>Creates a new item, or replaces an old item with a new item. If an item already exists in the specified table with the same primary
            key, the new item completely replaces the existing item. You can perform a conditional put (insert a new item if one with the specified
            primary key doesn't exist), or replace an existing item if it has certain attribute values. </para> <para>In addition to putting an item,
            you can also return the item's attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para> <para>When you add an
            item, the primary key attribute(s) are the only required attributes. Attribute values cannot be null. String and binary type attributes must
            have lengths greater than zero. Set type attributes cannot be empty. Requests with empty values will be rejected with a
            <i>ValidationException</i> .</para> <para>You can request that <i>PutItem</i> return either a copy of the old item (before the update) or a
            copy of the new item (after the update). For more information, see the <i>ReturnValues</i> description.</para> <para><b>NOTE:</b> To prevent
            a new item from replacing an existing item, use a conditional put operation with Exists set to false for the primary key attribute, or
            attributes. </para> <para>For more information about using this API, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> in the Amazon DynamoDB
            Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the PutItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.PutItemAsync(Amazon.DynamoDBv2.Model.PutItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.PutItem(Amazon.DynamoDBv2.Model.PutItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Query(Amazon.DynamoDBv2.Model.QueryRequest)">
            <summary>
            <para>A <i>Query</i> operation directly accesses items from a table using the table primary key, or from an index using the index key. You
            must provide a specific hash key value. You can narrow the scope of the query by using comparison operators on the range key value, or on
            the index key. You can use the <i>ScanIndexForward</i> parameter to get results in forward or reverse order, by range key or by index key.
            </para> <para>Queries that do not return results consume the minimum read capacity units according to the type of read.</para> <para>If the
            total number of items meeting the query criteria exceeds the result set size limit of 1 MB, the query stops and results are returned to the
            user with a <i>LastEvaluatedKey</i> to continue the query in a subsequent operation. Unlike a <i>Scan</i> operation, a <i>Query</i>
            operation never returns an empty result set <i>and</i> a
            <i>LastEvaluatedKey</i> . The <i>LastEvaluatedKey</i> is only provided if the results exceed 1 MB, or if you have used
            <i>Limit</i> . </para> <para>You can query a table, a local secondary index, or a global secondary index. For a query on a table or on a
            local secondary index, you can set <i>ConsistentRead</i> to true and obtain a strongly consistent result. Global secondary indexes support
            eventually consistent reads only, so do not specify <i>ConsistentRead</i> when querying a global secondary index.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the Query service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.QueryAsync(Amazon.DynamoDBv2.Model.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Query operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Query(Amazon.DynamoDBv2.Model.QueryRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Scan(Amazon.DynamoDBv2.Model.ScanRequest)">
            <summary>
            <para>The <i>Scan</i> operation returns one or more items and item attributes by accessing every item in the table. To have DynamoDB return
            fewer items, you can provide a <i>ScanFilter</i> .</para> <para>If the total number of scanned items exceeds the maximum data set size limit
            of 1 MB, the scan stops and results are returned to the user with a <i>LastEvaluatedKey</i> to continue the scan in a subsequent operation.
            The results also include the number of items exceeding the limit. A scan can result in no table data meeting the filter criteria. </para>
            <para>The result set is eventually consistent. </para> <para>By default, <i>Scan</i> operations proceed sequentially; however, for faster
            performance on large tables, applications can request a parallel <i>Scan</i> by specifying the <i>Segment</i> and <i>TotalSegments</i>
            parameters. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScanParallelScan">Parallel Scan</a> in the
            Amazon DynamoDB Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the Scan service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ScanAsync(Amazon.DynamoDBv2.Model.ScanRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Scan operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Scan(Amazon.DynamoDBv2.Model.ScanRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateItem(Amazon.DynamoDBv2.Model.UpdateItemRequest)">
            <summary>
            <para> Edits an existing item's attributes, or inserts a new item if it does not already exist. You can put, delete, or add attribute
            values. You can also perform a conditional update (insert a new attribute name-value pair if it doesn't exist, or replace an existing
            name-value pair if it has certain expected attribute values).</para> <para>In addition to updating an item, you can also return the item's
            attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the UpdateItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateItemAsync(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateItem(Amazon.DynamoDBv2.Model.UpdateItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateTable(Amazon.DynamoDBv2.Model.UpdateTableRequest)">
            <summary>
            <para>Updates the provisioned throughput for the given table. Setting the throughput for a table helps you manage performance and is part of
            the provisioned throughput feature of DynamoDB.</para> <para>The provisioned throughput values can be upgraded or downgraded based on the
            maximums and minimums listed in the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a>
            section in the Amazon DynamoDB Developer Guide.</para> <para>The table must be in the <c>ACTIVE</c> state for this operation to succeed.
            <i>UpdateTable</i> is an asynchronous operation; while executing the operation, the table is in the <c>UPDATING</c> state. While the table
            is in the <c>UPDATING</c> state, the table still has the provisioned throughput from before the call. The new provisioned throughput setting
            is in effect only when the table returns to the <c>ACTIVE</c> state after the <i>UpdateTable</i> operation. </para> <para>You cannot add,
            modify or delete indexes using <i>UpdateTable</i> . Indexes can only be defined at table creation time.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the UpdateTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateTableAsync(Amazon.DynamoDBv2.Model.UpdateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateTable(Amazon.DynamoDBv2.Model.UpdateTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.pauseExponentially(System.Int32)">
            <summary>
            Override the pausing function so retries would happen more frequent then the default operation.
            </summary>
            <param name="retries">Current number of retries.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor">
             <summary>
             Constructs AmazonDynamoDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDynamoDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
             <summary>
             Constructs AmazonDynamoDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDynamoDB Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials and an
            AmazonDynamoDBClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDynamoDBClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDynamoDBClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchGetItem(Amazon.DynamoDBv2.Model.BatchGetItemRequest)">
            <summary>
            <para>The <i>BatchGetItem</i> operation returns the attributes of one or more items from one or more tables. You identify requested items by
            primary key.</para> <para>A single operation can retrieve up to 1 MB of data, which can contain as many as 100 items. <i>BatchGetItem</i>
            will return a partial result if the response size limit is exceeded, the table's provisioned throughput is exceeded, or an internal
            processing failure occurs. If a partial result is returned, the operation returns a value for <i>UnprocessedKeys</i> . You can use this
            value to retry the operation starting with the next item to get.</para> <para>For example, if you ask to retrieve 100 items, but each
            individual item is 50 KB in size, the system returns 20 items (1 MB) and an appropriate <i>UnprocessedKeys</i> value so you can get the next
            page of results. If desired, your application can include its own logic to assemble the pages of results into one dataset.</para> <para>If
            <i>none</i> of the items can be processed due to insufficient provisioned throughput on all of the tables in the request, then
            <i>BatchGetItem</i> will throw a <i>ProvisionedThroughputExceededException</i> . If <i>at least one</i> of the items is successfully
            processed, then <i>BatchGetItem</i> completes successfully, while returning the keys of the unread items in <i>UnprocessedKeys</i> .</para>
            <para>By default, <i>BatchGetItem</i> performs eventually consistent reads on every table in the request. If you want strongly consistent
            reads instead, you can set <i>ConsistentRead</i> to <c>true</c> for any or all tables.</para> <para>In order to minimize response latency,
            <i>BatchGetItem</i> retrieves items in parallel.</para> <para>When designing your application, keep in mind that DynamoDB does not return
            attributes in any particular order. To help parse the response by item, include the primary key values for the items in your request in the
            <i>AttributesToGet</i> parameter.</para> <para>If a requested item does not exist, it is not returned in the result. Requests for
            nonexistent items consume the minimum read capacity units according to the type of read. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations">Capacity Units
            Calculations</a> in the Amazon DynamoDB Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the BatchGetItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchGetItemAsync(Amazon.DynamoDBv2.Model.BatchGetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchGetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchGetItem(Amazon.DynamoDBv2.Model.BatchGetItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchWriteItem(Amazon.DynamoDBv2.Model.BatchWriteItemRequest)">
            <summary>
            <para>The <i>BatchWriteItem</i> operation puts or deletes multiple items in one or more tables. A single call to <i>BatchWriteItem</i> can
            write up to 1 MB of data, which can comprise as many as 25 put or delete requests. Individual items to be written can be as large as 64
            KB.</para> <para><b>NOTE:</b> BatchWriteItem cannot update items. To update items, use the UpdateItem API. </para> <para>The individual
            <i>PutItem</i> and <i>DeleteItem</i> operations specified in <i>BatchWriteItem</i> are atomic; however <i>BatchWriteItem</i> as a whole is
            not. If any requested operations fail because the table's provisioned throughput is exceeded or an internal processing failure occurs, the
            failed operations are returned in the <i>UnprocessedItems</i> response parameter. You can investigate and optionally resend the requests.
            Typically, you would call <i>BatchWriteItem</i> in a loop. Each iteration would check for unprocessed items and submit a new
            <i>BatchWriteItem</i> request with those unprocessed items until all items have been processed.</para> <para>Note that if <i>none</i> of the
            items can be processed due to insufficient provisioned throughput on all of the tables in the request, then <i>BatchGetItem</i> will throw a
            <i>ProvisionedThroughputExceededException</i> .</para> <para>To write one item, you can use the <i>PutItem</i> operation; to delete one
            item, you can use the <i>DeleteItem</i> operation.</para> <para>With <i>BatchWriteItem</i> , you can efficiently write or delete large
            amounts of data, such as from Amazon Elastic MapReduce (EMR), or copy data from another database into DynamoDB. In order to improve
            performance with these large-scale operations, <i>BatchWriteItem</i> does not behave in the same way as individual <i>PutItem</i> and
            <i>DeleteItem</i> calls would For example, you cannot specify conditions on individual put and delete requests, and <i>BatchWriteItem</i>
            does not return deleted items in the response.</para> <para>If you use a programming language that supports concurrency, such as Java, you
            can use threads to write items in parallel. Your application must include the necessary logic to manage the threads. With languages that
            don't support threading, such as PHP, you must update or delete the specified items one at a time. In both situations, <i>BatchWriteItem</i>
            provides an alternative where the API performs the specified put and delete operations in parallel, giving you the power of the thread pool
            approach without having to introduce complexity into your application.</para> <para>Parallel processing reduces latency, but each specified
            put and delete request consumes the same number of write capacity units whether it is processed in parallel or not. Delete operations on
            nonexistent items consume one write capacity unit.</para> <para>If one or more of the following is true, DynamoDB rejects the entire batch
            write operation:</para>
            <ul>
            <li> <para>One or more tables specified in the <i>BatchWriteItem</i> request does not exist.</para> </li>
            <li> <para>Primary key attributes specified on an item in the request do not match those in the corresponding table's primary key
            schema.</para> </li>
            <li> <para>You try to perform multiple operations on the same item in the same <i>BatchWriteItem</i> request. For example, you cannot put
            and delete the same item in the same <i>BatchWriteItem</i> request. </para> </li>
            <li> <para>The total request size exceeds 1 MB.</para> </li>
            <li> <para>Any individual item in a batch exceeds 64 KB.</para> </li>
            
            </ul>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the BatchWriteItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchWriteItemAsync(Amazon.DynamoDBv2.Model.BatchWriteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchWriteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchWriteItem(Amazon.DynamoDBv2.Model.BatchWriteItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.CreateTable(Amazon.DynamoDBv2.Model.CreateTableRequest)">
            <summary>
            <para>The <i>CreateTable</i> operation adds a new table to your account. In an AWS account, table names must be unique within each region.
            That is, you can have two tables with same name if you create the tables in different regions.</para> <para> <i>CreateTable</i> is an
            asynchronous operation. Upon receiving a <i>CreateTable</i> request, DynamoDB immediately returns a response with a <i>TableStatus</i> of
            <c>CREATING</c> . After the table is created, DynamoDB sets the <i>TableStatus</i> to <c>ACTIVE</c> . You can perform read and write
            operations only on an <c>ACTIVE</c> table. </para> <para>If you want to create multiple tables with secondary indexes on them, you must
            create them sequentially. Only one table with secondary indexes can be in the <c>CREATING</c> state at any given time.</para> <para>You can
            use the <i>DescribeTable</i> API to check the table status.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the CreateTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.CreateTableAsync(Amazon.DynamoDBv2.Model.CreateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.CreateTable(Amazon.DynamoDBv2.Model.CreateTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteItem(Amazon.DynamoDBv2.Model.DeleteItemRequest)">
            <summary>
            <para>Deletes a single item in a table by primary key. You can perform a conditional delete operation that deletes the item if it exists, or
            if it has an expected attribute value.</para> <para>In addition to deleting an item, you can also return the item's attribute values in the
            same operation, using the <i>ReturnValues</i> parameter.</para> <para>Unless you specify conditions, the <i>DeleteItem</i> is an idempotent
            operation; running it multiple times on the same item or attribute does <i>not</i> result in an error response.</para> <para>Conditional
            deletes are useful for only deleting items if specific conditions are met. If those conditions are met, DynamoDB performs the delete.
            Otherwise, the item is not deleted. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the DeleteItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteItemAsync(Amazon.DynamoDBv2.Model.DeleteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteItem(Amazon.DynamoDBv2.Model.DeleteItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteTable(Amazon.DynamoDBv2.Model.DeleteTableRequest)">
            <summary>
            <para>The <i>DeleteTable</i> operation deletes a table and all of its items. After a <i>DeleteTable</i> request, the specified table is in
            the <c>DELETING</c> state until DynamoDB completes the deletion. If the table is in the <c>ACTIVE</c> state, you can delete it. If a table
            is in <c>CREATING</c> or <c>UPDATING</c> states, then DynamoDB returns a
            <i>ResourceInUseException</i> . If the specified table does not exist, DynamoDB returns a
            <i>ResourceNotFoundException</i> . If table is already in the <c>DELETING</c> state, no error is returned. </para> <para><b>NOTE:</b>
            DynamoDB might continue to accept data read and write operations, such as GetItem and PutItem, on a table in the DELETING state until the
            table deletion is complete. </para> <para>When you delete a table, any indexes on that table are also deleted.</para> <para>Use the
            <i>DescribeTable</i> API to check the status of the table. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the DeleteTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteTableAsync(Amazon.DynamoDBv2.Model.DeleteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteTable(Amazon.DynamoDBv2.Model.DeleteTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DescribeTable(Amazon.DynamoDBv2.Model.DescribeTableRequest)">
            <summary>
            <para>Returns information about the table, including the current status of the table, when it was created, the primary key schema, and any
            indexes on the table.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the DescribeTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DescribeTableAsync(Amazon.DynamoDBv2.Model.DescribeTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DescribeTable(Amazon.DynamoDBv2.Model.DescribeTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.GetItem(Amazon.DynamoDBv2.Model.GetItemRequest)">
            <summary>
            <para>The <i>GetItem</i> operation returns a set of attributes for the item with the given primary key. If there is no matching item,
            <i>GetItem</i> does not return any data.</para> <para> <i>GetItem</i> provides an eventually consistent read by default. If your application
            requires a strongly consistent read, set <i>ConsistentRead</i> to <c>true</c> . Although a strongly consistent read might take more time
            than an eventually consistent read, it always returns the last updated value.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the GetItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.GetItemAsync(Amazon.DynamoDBv2.Model.GetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.GetItem(Amazon.DynamoDBv2.Model.GetItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ListTables(Amazon.DynamoDBv2.Model.ListTablesRequest)">
            <summary>
            <para>Returns an array of table names associated with the current account and endpoint. The output from <i>ListTables</i> is paginated, with
            each page returning a maximum of 100 table names.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the ListTables service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ListTablesAsync(Amazon.DynamoDBv2.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTables operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTables(Amazon.DynamoDBv2.Model.ListTablesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ListTables">
            <summary>
            <para>Returns an array of table names associated with the current account and endpoint. The output from <i>ListTables</i> is paginated, with
            each page returning a maximum of 100 table names.</para>
            </summary>
            
            
            <returns>The response from the ListTables service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.PutItem(Amazon.DynamoDBv2.Model.PutItemRequest)">
            <summary>
            <para>Creates a new item, or replaces an old item with a new item. If an item already exists in the specified table with the same primary
            key, the new item completely replaces the existing item. You can perform a conditional put (insert a new item if one with the specified
            primary key doesn't exist), or replace an existing item if it has certain attribute values. </para> <para>In addition to putting an item,
            you can also return the item's attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para> <para>When you add an
            item, the primary key attribute(s) are the only required attributes. Attribute values cannot be null. String and binary type attributes must
            have lengths greater than zero. Set type attributes cannot be empty. Requests with empty values will be rejected with a
            <i>ValidationException</i> .</para> <para>You can request that <i>PutItem</i> return either a copy of the old item (before the update) or a
            copy of the new item (after the update). For more information, see the <i>ReturnValues</i> description.</para> <para><b>NOTE:</b> To prevent
            a new item from replacing an existing item, use a conditional put operation with Exists set to false for the primary key attribute, or
            attributes. </para> <para>For more information about using this API, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working with Items</a> in the Amazon DynamoDB
            Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the PutItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.PutItemAsync(Amazon.DynamoDBv2.Model.PutItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.PutItem(Amazon.DynamoDBv2.Model.PutItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.Query(Amazon.DynamoDBv2.Model.QueryRequest)">
            <summary>
            <para>A <i>Query</i> operation directly accesses items from a table using the table primary key, or from an index using the index key. You
            must provide a specific hash key value. You can narrow the scope of the query by using comparison operators on the range key value, or on
            the index key. You can use the <i>ScanIndexForward</i> parameter to get results in forward or reverse order, by range key or by index key.
            </para> <para>Queries that do not return results consume the minimum read capacity units according to the type of read.</para> <para>If the
            total number of items meeting the query criteria exceeds the result set size limit of 1 MB, the query stops and results are returned to the
            user with a <i>LastEvaluatedKey</i> to continue the query in a subsequent operation. Unlike a <i>Scan</i> operation, a <i>Query</i>
            operation never returns an empty result set <i>and</i> a
            <i>LastEvaluatedKey</i> . The <i>LastEvaluatedKey</i> is only provided if the results exceed 1 MB, or if you have used
            <i>Limit</i> . </para> <para>You can query a table, a local secondary index, or a global secondary index. For a query on a table or on a
            local secondary index, you can set <i>ConsistentRead</i> to true and obtain a strongly consistent result. Global secondary indexes support
            eventually consistent reads only, so do not specify <i>ConsistentRead</i> when querying a global secondary index.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the Query service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.QueryAsync(Amazon.DynamoDBv2.Model.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Query operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Query(Amazon.DynamoDBv2.Model.QueryRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.Scan(Amazon.DynamoDBv2.Model.ScanRequest)">
            <summary>
            <para>The <i>Scan</i> operation returns one or more items and item attributes by accessing every item in the table. To have DynamoDB return
            fewer items, you can provide a <i>ScanFilter</i> .</para> <para>If the total number of scanned items exceeds the maximum data set size limit
            of 1 MB, the scan stops and results are returned to the user with a <i>LastEvaluatedKey</i> to continue the scan in a subsequent operation.
            The results also include the number of items exceeding the limit. A scan can result in no table data meeting the filter criteria. </para>
            <para>The result set is eventually consistent. </para> <para>By default, <i>Scan</i> operations proceed sequentially; however, for faster
            performance on large tables, applications can request a parallel <i>Scan</i> by specifying the <i>Segment</i> and <i>TotalSegments</i>
            parameters. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScanParallelScan">Parallel Scan</a> in the
            Amazon DynamoDB Developer Guide.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the Scan service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ScanAsync(Amazon.DynamoDBv2.Model.ScanRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Scan operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.Scan(Amazon.DynamoDBv2.Model.ScanRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateItem(Amazon.DynamoDBv2.Model.UpdateItemRequest)">
            <summary>
            <para> Edits an existing item's attributes, or inserts a new item if it does not already exist. You can put, delete, or add attribute
            values. You can also perform a conditional update (insert a new attribute name-value pair if it doesn't exist, or replace an existing
            name-value pair if it has certain expected attribute values).</para> <para>In addition to updating an item, you can also return the item's
            attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem service method on AmazonDynamoDBv2.</param>
            
            <returns>The response from the UpdateItem service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateItemAsync(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateItem(Amazon.DynamoDBv2.Model.UpdateItemRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateTable(Amazon.DynamoDBv2.Model.UpdateTableRequest)">
            <summary>
            <para>Updates the provisioned throughput for the given table. Setting the throughput for a table helps you manage performance and is part of
            the provisioned throughput feature of DynamoDB.</para> <para>The provisioned throughput values can be upgraded or downgraded based on the
            maximums and minimums listed in the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a>
            section in the Amazon DynamoDB Developer Guide.</para> <para>The table must be in the <c>ACTIVE</c> state for this operation to succeed.
            <i>UpdateTable</i> is an asynchronous operation; while executing the operation, the table is in the <c>UPDATING</c> state. While the table
            is in the <c>UPDATING</c> state, the table still has the provisioned throughput from before the call. The new provisioned throughput setting
            is in effect only when the table returns to the <c>ACTIVE</c> state after the <i>UpdateTable</i> operation. </para> <para>You cannot add,
            modify or delete indexes using <i>UpdateTable</i> . Indexes can only be defined at table creation time.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable service method on
            AmazonDynamoDBv2.</param>
            
            <returns>The response from the UpdateTable service method, as returned by AmazonDynamoDBv2.</returns>
            
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceInUseException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.LimitExceededException" />
            <exception cref="T:Amazon.DynamoDBv2.Model.InternalServerErrorException" />
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateTableAsync(Amazon.DynamoDBv2.Model.UpdateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateTable operation.
            <seealso cref="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateTable(Amazon.DynamoDBv2.Model.UpdateTableRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBConfig">
            <summary>
            Configuration for accessing Amazon DynamoDB service
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.AmazonDynamoDBConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.AmazonDynamoDBConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.AttributeAction">
            <summary>Attribute Action
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.ADD">
            <summary>Constant ADD for AttributeAction
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.DELETE">
            <summary>Constant DELETE for AttributeAction
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.PUT">
            <summary>Constant PUT for AttributeAction
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AttributeAction.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AttributeAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ComparisonOperator">
            <summary>Comparison Operator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.BEGINS_WITH">
            <summary>Constant BEGINS_WITH for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.BETWEEN">
            <summary>Constant BETWEEN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.CONTAINS">
            <summary>Constant CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.EQ">
            <summary>Constant EQ for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.GE">
            <summary>Constant GE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.GT">
            <summary>Constant GT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.IN">
            <summary>Constant IN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.LE">
            <summary>Constant LE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.LT">
            <summary>Constant LT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NE">
            <summary>Constant NE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NOT_CONTAINS">
            <summary>Constant NOT_CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NOT_NULL">
            <summary>Constant NOT_NULL for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NULL">
            <summary>Constant NULL for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ComparisonOperator.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ConditionalOperator">
            <summary>Conditional Operator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ConditionalOperator.AND">
            <summary>Constant AND for ConditionalOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ConditionalOperator.OR">
            <summary>Constant OR for ConditionalOperator
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ConditionalOperator.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ConditionalOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.IndexStatus">
            <summary>Index Status
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.ACTIVE">
            <summary>Constant ACTIVE for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.CREATING">
            <summary>Constant CREATING for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.DELETING">
            <summary>Constant DELETING for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.UPDATING">
            <summary>Constant UPDATING for IndexStatus
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IndexStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IndexStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.KeyType">
            <summary>Key Type
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.KeyType.HASH">
            <summary>Constant HASH for KeyType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.KeyType.RANGE">
            <summary>Constant RANGE for KeyType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.KeyType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.KeyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ProjectionType">
            <summary>Projection Type
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.ALL">
            <summary>Constant ALL for ProjectionType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.INCLUDE">
            <summary>Constant INCLUDE for ProjectionType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.KEYS_ONLY">
            <summary>Constant KEYS_ONLY for ProjectionType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ProjectionType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ProjectionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnConsumedCapacity">
            <summary>Return Consumed Capacity
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.INDEXES">
            <summary>Constant INDEXES for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.NONE">
            <summary>Constant NONE for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.TOTAL">
            <summary>Constant TOTAL for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnConsumedCapacity.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnConsumedCapacity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnItemCollectionMetrics">
            <summary>Return Item Collection Metrics
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.NONE">
            <summary>Constant NONE for ReturnItemCollectionMetrics
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.SIZE">
            <summary>Constant SIZE for ReturnItemCollectionMetrics
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnValue">
            <summary>Return Value
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.ALL_NEW">
            <summary>Constant ALL_NEW for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.ALL_OLD">
            <summary>Constant ALL_OLD for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.NONE">
            <summary>Constant NONE for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.UPDATED_NEW">
            <summary>Constant UPDATED_NEW for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.UPDATED_OLD">
            <summary>Constant UPDATED_OLD for ReturnValue
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnValue.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ScalarAttributeType">
            <summary>Scalar Attribute Type
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.B">
            <summary>Constant B for ScalarAttributeType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.N">
            <summary>Constant N for ScalarAttributeType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.S">
            <summary>Constant S for ScalarAttributeType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ScalarAttributeType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ScalarAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.Select">
            <summary>Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.ALL_ATTRIBUTES">
            <summary>Constant ALL_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.ALL_PROJECTED_ATTRIBUTES">
            <summary>Constant ALL_PROJECTED_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.COUNT">
            <summary>Constant COUNT for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.SPECIFIC_ATTRIBUTES">
            <summary>Constant SPECIFIC_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Select.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Select.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.TableStatus">
            <summary>Table Status
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.ACTIVE">
            <summary>Constant ACTIVE for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.CREATING">
            <summary>Constant CREATING for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.DELETING">
            <summary>Constant DELETING for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.UPDATING">
            <summary>Constant UPDATING for TableStatus
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.TableStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.TableStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBv2Request">
            <summary>
            Base class for AmazonDynamoDBv2 operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeDefinition">
            <summary>
            <para>Represents an attribute for describing the key schema for the table and indexes.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeDefinition.AttributeName">
            <summary>
            A name for the attribute.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 255</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeDefinition.AttributeType">
            <summary>
            The data type for the attribute.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>S, N, B</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeValue">
            <summary>
            <para>Represents the data for an attribute. You can set one, and only one, of the elements.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.S">
            <summary>
            A String data type
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.N">
            <summary>
            A Number data type
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.B">
            <summary>
            A Binary data type
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.SS">
            <summary>
            A String set data type
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.NS">
            <summary>
            Number set data type
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.BS">
            <summary>
            A Binary set data type
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeValueUpdate">
            <summary>
            <para>For the <i>UpdateItem</i> operation, represents the attributes to be modified, the action to perform on each, and the new value for
            each.</para> <para><b>NOTE:</b> You cannot use UpdateItem to update any primary key attributes. Instead, you will need to delete the item,
            and then use PutItem to create a new item with new attributes. </para> <para>Attribute values cannot be null; string and binary type
            attributes must have lengths greater than zero; and set type attributes must not be empty. Requests with empty values will be rejected with
            a <i>ValidationException</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValueUpdate.Value">
            <summary>
            Represents the data for an attribute. You can set one, and only one, of the elements.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValueUpdate.Action">
            <summary>
            Specifies how to perform the update. Valid values are <c>PUT</c>, <c>DELETE</c>, and <c>ADD</c>. The behavior depends on whether the
            specified primary key already exists in the table. <b>If an item with the specified <i>Key</i> is found in the table:</b> <ul> <li>
            <c>PUT</c> - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. </li> <li>
            <c>DELETE</c> - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must
            match the existing value's data type. If a <i>set</i> of values is specified, then those values are subtracted from the old set. For
            example, if the attribute value was the set <c>[a,b,c]</c> and the <i>DELETE</i> action specified <c>[a,c]</c>, then the final attribute
            value would be <c>[b]</c>. Specifying an empty set is an error. </li> <li> <c>ADD</c> - If the attribute does not already exist, then the
            attribute and its values are added to the item. If the attribute does exist, then the behavior of <c>ADD</c> depends on the data type of the
            attribute: <ul> <li> If the existing attribute is a number, and if <i>Value</i> is also a number, then the <i>Value</i> is mathematically
            added to the existing attribute. If <i>Value</i> is a negative number, then it is subtracted from the existing attribute. <note> If you use
            <c>ADD</c> to increment or decrement a number value for an item that doesn't exist before the update, DynamoDB uses 0 as the initial value.
            In addition, if you use <c>ADD</c> to update an existing item, and intend to increment or decrement an attribute value which does not yet
            exist, DynamoDB uses <c>0</c> as the initial value. For example, suppose that the item you want to update does not yet have an attribute
            named <i>itemcount</i>, but you decide to <c>ADD</c> the number <c>3</c> to this attribute anyway, even though it currently does not exist.
            DynamoDB will create the <i>itemcount</i> attribute, set its initial value to <c>0</c>, and finally add <c>3</c> to it. The result will be a
            new <i>itemcount</i> attribute in the item, with a value of <c>3</c>. </note> </li> <li> If the existing data type is a set, and if the
            <i>Value</i> is also a set, then the <i>Value</i> is added to the existing set. (This is a <i>set</i> operation, not mathematical addition.)
            For example, if the attribute value was the set <c>[1,2]</c>, and the <c>ADD</c> action specified <c>[3]</c>, then the final attribute value
            would be <c>[1,2,3]</c>. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match
            the existing set type. Both sets must have the same primitive data type. For example, if the existing data type is a set of strings, the
            <i>Value</i> must also be a set of strings. The same holds true for number sets and binary sets. </li> </ul> This action is only valid for
            an existing attribute whose data type is number or is a set. Do not use <c>ADD</c> for any other data types. </li> </ul> <b>If no item with
            the specified <i>Key</i> is found:</b> <ul> <li> <c>PUT</c> - DynamoDB creates a new item with the specified primary key, and then adds the
            attribute. </li> <li> <c>DELETE</c> - Nothing happens; there is no attribute to delete. </li> <li> <c>ADD</c> - DynamoDB creates an item
            with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set;
            no other data types can be specified. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>ADD, PUT, DELETE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemRequest">
            <summary>
            Container for the parameters to the BatchGetItem operation.
            <para>The <i>BatchGetItem</i> operation returns the attributes of one or more items from one or more tables. You identify requested items by
            primary key.</para> <para>A single operation can retrieve up to 1 MB of data, which can contain as many as 100 items. <i>BatchGetItem</i>
            will return a partial result if the response size limit is exceeded, the table's provisioned throughput is exceeded, or an internal
            processing failure occurs. If a partial result is returned, the operation returns a value for <i>UnprocessedKeys</i> . You can use this
            value to retry the operation starting with the next item to get.</para> <para>For example, if you ask to retrieve 100 items, but each
            individual item is 50 KB in size, the system returns 20 items (1 MB) and an appropriate <i>UnprocessedKeys</i> value so you can get the next
            page of results. If desired, your application can include its own logic to assemble the pages of results into one dataset.</para> <para>If
            <i>none</i> of the items can be processed due to insufficient provisioned throughput on all of the tables in the request, then
            <i>BatchGetItem</i> will throw a <i>ProvisionedThroughputExceededException</i> . If <i>at least one</i> of the items is successfully
            processed, then <i>BatchGetItem</i> completes successfully, while returning the keys of the unread items in <i>UnprocessedKeys</i> .</para>
            <para>By default, <i>BatchGetItem</i> performs eventually consistent reads on every table in the request. If you want strongly consistent
            reads instead, you can set <i>ConsistentRead</i> to <c>true</c> for any or all tables.</para> <para>In order to minimize response latency,
            <i>BatchGetItem</i> retrieves items in parallel.</para> <para>When designing your application, keep in mind that DynamoDB does not return
            attributes in any particular order. To help parse the response by item, include the primary key values for the items in your request in the
            <i>AttributesToGet</i> parameter.</para> <para>If a requested item does not exist, it is not returned in the result. Requests for
            nonexistent items consume the minimum read capacity units according to the type of read. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations" >Capacity Units
            Calculations</a> in the Amazon DynamoDB Developer Guide.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemRequest.RequestItems">
            <summary>
            A map of one or more table names and, for each table, the corresponding primary keys for the items to retrieve. Each table name can be
            invoked only once. Each element in the map consists of the following: <ul> <li> <i>Keys</i> - An array of primary key attribute values that
            define specific items in the table. </li> <li> <i>AttributesToGet</i> - One or more attributes to be retrieved from the table. By default,
            all attributes are returned. If a specified attribute is not found, it does not appear in the result. Note that <i>AttributesToGet</i> has
            no effect on provisioned throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data
            that is returned to an application. </li> <li> <i>ConsistentRead</i> - If <c>true</c>, a strongly consistent read is used; if <c>false</c>
            (the default), an eventually consistent read is used. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 100</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemResponse">
            <summary>
            Returns information about the  BatchGetItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemResult">
            <summary>
            <para>Represents the output of a <i>BatchGetItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.Responses">
            <summary>
            A map of table name to a list of items. Each object in <i>Responses</i> consists of a table name, along with a map of attribute data
            consisting of the data type and attribute value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.UnprocessedKeys">
            <summary>
            A map of tables and their respective keys that were not processed with the current response. The <i>UnprocessedKeys</i> value is in the same
            form as <i>RequestItems</i>, so the value can be provided directly to a subsequent <i>BatchGetItem</i> operation. For more information, see
            <i>RequestItems</i> in the Request Parameters section. Each element consists of: <ul> <li> <i>Keys</i> - An array of primary key attribute
            values that define specific items in the table. </li> <li> <i>AttributesToGet</i> - One or more attributes to be retrieved from the table or
            index. By default, all attributes are returned. If a specified attribute is not found, it does not appear in the result. </li> <li>
            <i>ConsistentRead</i> - The consistency of a read operation. If set to <c>true</c>, then a strongly consistent read is used; otherwise, an
            eventually consistent read is used. </li> </ul> If there are no unprocessed keys remaining, the response contains an empty
            <i>UnprocessedKeys</i> map.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 100</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.ConsumedCapacity">
            <summary>
            The write capacity units consumed by the operation. Each element consists of: <ul> <li> <i>TableName</i> - The table that consumed the
            provisioned throughput. </li> <li> <i>CapacityUnits</i> - The total number of capacity units consumed. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResponse.BatchGetItemResult">
            <summary>
            Gets and sets the BatchGetItemResult property.
            Represents the output of a BatchGetItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemRequest">
            <summary>
            Container for the parameters to the BatchWriteItem operation.
            <para>The <i>BatchWriteItem</i> operation puts or deletes multiple items in one or more tables. A single call to <i>BatchWriteItem</i> can
            write up to 1 MB of data, which can comprise as many as 25 put or delete requests. Individual items to be written can be as large as 64
            KB.</para> <para><b>NOTE:</b> BatchWriteItem cannot update items. To update items, use the UpdateItem API. </para> <para>The individual
            <i>PutItem</i> and <i>DeleteItem</i> operations specified in <i>BatchWriteItem</i> are atomic; however <i>BatchWriteItem</i> as a whole is
            not. If any requested operations fail because the table's provisioned throughput is exceeded or an internal processing failure occurs, the
            failed operations are returned in the <i>UnprocessedItems</i> response parameter. You can investigate and optionally resend the requests.
            Typically, you would call <i>BatchWriteItem</i> in a loop. Each iteration would check for unprocessed items and submit a new
            <i>BatchWriteItem</i> request with those unprocessed items until all items have been processed.</para> <para>Note that if <i>none</i> of the
            items can be processed due to insufficient provisioned throughput on all of the tables in the request, then <i>BatchGetItem</i> will throw a
            <i>ProvisionedThroughputExceededException</i> .</para> <para>To write one item, you can use the <i>PutItem</i> operation; to delete one
            item, you can use the <i>DeleteItem</i> operation.</para> <para>With <i>BatchWriteItem</i> , you can efficiently write or delete large
            amounts of data, such as from Amazon Elastic MapReduce (EMR), or copy data from another database into DynamoDB. In order to improve
            performance with these large-scale operations, <i>BatchWriteItem</i> does not behave in the same way as individual <i>PutItem</i> and
            <i>DeleteItem</i> calls would For example, you cannot specify conditions on individual put and delete requests, and <i>BatchWriteItem</i>
            does not return deleted items in the response.</para> <para>If you use a programming language that supports concurrency, such as Java, you
            can use threads to write items in parallel. Your application must include the necessary logic to manage the threads. With languages that
            don't support threading, such as PHP, you must update or delete the specified items one at a time. In both situations, <i>BatchWriteItem</i>
            provides an alternative where the API performs the specified put and delete operations in parallel, giving you the power of the thread pool
            approach without having to introduce complexity into your application.</para> <para>Parallel processing reduces latency, but each specified
            put and delete request consumes the same number of write capacity units whether it is processed in parallel or not. Delete operations on
            nonexistent items consume one write capacity unit.</para> <para>If one or more of the following is true, DynamoDB rejects the entire batch
            write operation:</para>
            <ul>
            <li> <para>One or more tables specified in the <i>BatchWriteItem</i> request does not exist.</para> </li>
            <li> <para>Primary key attributes specified on an item in the request do not match those in the corresponding table's primary key
            schema.</para> </li>
            <li> <para>You try to perform multiple operations on the same item in the same <i>BatchWriteItem</i> request. For example, you cannot put
            and delete the same item in the same <i>BatchWriteItem</i> request. </para> </li>
            <li> <para>The total request size exceeds 1 MB.</para> </li>
            <li> <para>Any individual item in a batch exceeds 64 KB.</para> </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.RequestItems">
            <summary>
            A map of one or more table names and, for each table, a list of operations to be performed (<i>DeleteRequest</i> or <i>PutRequest</i>). Each
            element in the map consists of the following: <ul> <li> <i>DeleteRequest</i> - Perform a <i>DeleteItem</i> operation on the specified item.
            The item to be deleted is identified by a <i>Key</i> subelement: <ul> <li> <i>Key</i> - A map of primary key attribute values that uniquely
            identify the item. Each entry in this map consists of an attribute name and an attribute value. </li> </ul> </li> <li> <i>PutRequest</i> -
            Perform a <i>PutItem</i> operation on the specified item. The item to be put is identified by an <i>Item</i> subelement: <ul> <li>
            <i>Item</i> - A map of attributes and their values. Each entry in this map consists of an attribute name and an attribute value. Attribute
            values must not be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty.
            Requests that contain empty values will be rejected with a <i>ValidationException</i>. If you specify any attributes that are part of an
            index key, then the data types for those attributes must match those of the schema in the table's attribute definition. </li> </ul> </li>
            </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 25</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.ReturnItemCollectionMetrics">
            <summary>
            If set to <c>SIZE</c>, statistics about item collections, if any, that were modified during the operation are returned in the response. If
            set to <c>NONE</c> (the default), no statistics are returned.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>SIZE, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemResponse">
            <summary>
            Returns information about the  BatchWriteItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemResult">
            <summary>
            <para>Represents the output of a <i>BatchWriteItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.UnprocessedItems">
            <summary>
            A map of tables and requests against those tables that were not processed. The <i>UnprocessedItems</i> value is in the same form as
            <i>RequestItems</i>, so you can provide this value directly to a subsequent <i>BatchGetItem</i> operation. For more information, see
            <i>RequestItems</i> in the Request Parameters section. Each <i>UnprocessedItems</i> entry consists of a table name and, for that table, a
            list of operations to perform (<i>DeleteRequest</i> or <i>PutRequest</i>). <ul> <li> <i>DeleteRequest</i> - Perform a <i>DeleteItem</i>
            operation on the specified item. The item to be deleted is identified by a <i>Key</i> subelement: <ul> <li> <i>Key</i> - A map of primary
            key attribute values that uniquely identify the item. Each entry in this map consists of an attribute name and an attribute value. </li>
            </ul> </li> <li> <i>PutRequest</i> - Perform a <i>PutItem</i> operation on the specified item. The item to be put is identified by an
            <i>Item</i> subelement: <ul> <li> <i>Item</i> - A map of attributes and their values. Each entry in this map consists of an attribute name
            and an attribute value. Attribute values must not be null; string and binary type attributes must have lengths greater than zero; and set
            type attributes must not be empty. Requests that contain empty values will be rejected with a <i>ValidationException</i>. If you specify any
            attributes that are part of an index key, then the data types for those attributes must match those of the schema in the table's attribute
            definition. </li> </ul> </li> </ul> If there are no unprocessed items remaining, the response contains an empty <i>UnprocessedItems</i> map.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 25</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.ItemCollectionMetrics">
            <summary>
            A list of tables that were processed by <i>BatchWriteItem</i> and, for each table, information about any item collections that were affected
            by individual <i>DeleteItem</i> or <i>PutItem</i> operations. Each entry consists of the following subelements: <ul> <li>
            <i>ItemCollectionKey</i> - The hash key value of the item collection. This is the same as the hash key of the item. </li> <li>
            <i>SizeEstimateRange</i> - An estimate of item collection size, expressed in GB. This is a two-element array containing a lower bound and an
            upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into
            all of the local secondary indexes on the table. Use this estimate to measure whether a local secondary index is approaching its size limit.
            The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.ConsumedCapacity">
            <summary>
            The capacity units consumed by the operation. Each element consists of: <ul> <li> <i>TableName</i> - The table that consumed the provisioned
            throughput. </li> <li> <i>CapacityUnits</i> - The total number of capacity units consumed. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResponse.BatchWriteItemResult">
            <summary>
            Gets and sets the BatchWriteItemResult property.
            Represents the output of a BatchWriteItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Capacity">
            <summary>
            <para>Represents the amount of provisioned throughput capacity consumed on a table or an index. </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Capacity.CapacityUnits">
            <summary>
            The total number of capacity units consumed on a table or an index.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Condition">
            <summary>
            <para>Represents the selection criteria for a <i>Query</i> or <i>Scan</i> operation:</para>
            <ul>
            <li> <para>For a <i>Query</i> operation, <i>Condition</i> is used for specifying the <i>KeyConditions</i> to use when querying a table or
            an index. For <i>KeyConditions</i> ,
            the following comparison operators are supported:</para> <para> <c>EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN</c> </para>
            <para> <i>Condition</i> is also used in a <i>QueryFilter</i> , which evaluates the query results and returns only the desired values.</para>
            </li>
            <li> <para>For a <i>Scan</i> operation, <i>Condition</i> is used in a <i>ScanFilter</i> , which evalues the scan results and returns only
            the desired values.</para> </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Condition.AttributeValueList">
            <summary>
            One or more values to evaluate against the supplied attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
            being used. For type Number, value comparisons are numeric. String value comparisons for greater than, equals, or less than are based on
            ASCII character code values. For example, <c>a</c> is greater than <c>A</c>, and <c>aa</c> is greater than <c>B</c>. For a list of code
            values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>. For
            Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values, for example when evaluating query
            expressions. For information on specifying data types in JSON, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON Data Format</a> in the Amazon DynamoDB Developer
            Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Condition.ComparisonOperator">
            <summary>
            A comparator for evaluating attributes. For example, equals, greater than, less than, etc. The following comparison operators are available:
            <c>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN | BETWEEN</c> The following are descriptions
            of each comparison operator. <ul> <li> <c>EQ</c> : Equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type
            String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in the
            request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not equal
            <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>NE</c> : Not equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i>
            of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in
            the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not equal
            <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>LE</c> : Less than or equal. <i>AttributeValueList</i> can contain only one
            <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than
            the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also,
            <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>LT</c> : Less than. <i>AttributeValueList</i> can
            contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a
            different type than the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal
            <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>GE</c> : Greater than or
            equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item
            contains an <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For example,
            <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li>
            <c>GT</c> : Greater than. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a
            set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For
            example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/>
            </li> <li> <c>NOT_NULL</c> : The attribute exists. </li> <li> <c>NULL</c> : The attribute does not exist. </li> <li> <c>CONTAINS</c> :
            checks for a subsequence, or value in a set. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or
            Binary (not a set). If the target attribute of the comparison is a String, then the operation checks for a substring match. If the target
            attribute of the comparison is Binary, then the operation looks for a subsequence of the target that matches the input. If the target
            attribute of the comparison is a set ("SS", "NS", or "BS"), then the operation checks for a member of the set (not as a substring). </li>
            <li> <c>NOT_CONTAINS</c> : checks for absence of a subsequence, or absence of a value in a set. <i>AttributeValueList</i> can contain only
            one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If the target attribute of the comparison is a String, then the
            operation checks for the absence of a substring match. If the target attribute of the comparison is Binary, then the operation checks for
            the absence of a subsequence of the target that matches the input. If the target attribute of the comparison is a set ("SS", "NS", or "BS"),
            then the operation checks for the absence of a member of the set (not as a substring). </li> <li> <c>BEGINS_WITH</c> : checks for a prefix.
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String or Binary (not a Number or a set). The target attribute
            of the comparison must be a String or Binary (not a Number or a set). <p/> </li> <li> <c>IN</c> : checks for exact matches.
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type String, Number, or Binary (not a set). The target
            attribute of the comparison must be of the same type and exact value to match. A String never matches a String set. </li> <li>
            <c>BETWEEN</c> : Greater than or equal to the first value, and less than or equal to the second value. <i>AttributeValueList</i> must
            contain two <i>AttributeValue</i> elements of the same type, either String, Number, or Binary (not a set). A target attribute matches if the
            target value is greater than, or equal to, the first element and less than, or equal to, the second element. If an item contains an
            <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c>
            does not compare to <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c> </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException.#ctor(System.String)">
            <summary>
            Constructs a new ConditionalCheckFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ConsumedCapacity">
            <summary>
            <para>Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along
            with statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html"
            >Provisioned Throughput</a> in the Amazon DynamoDB Developer Guide.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.TableName">
            <summary>
            The name of the table that was affected by the operation.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.CapacityUnits">
            <summary>
            The total number of capacity units consumed by the operation.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.Table">
            <summary>
            The amount of throughput consumed on the table affected by the operation.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.LocalSecondaryIndexes">
            <summary>
            The amount of throughput consumed on each local index affected by the operation.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.GlobalSecondaryIndexes">
            <summary>
            The amount of throughput consumed on each global index affected by the operation.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableRequest">
            <summary>
            Container for the parameters to the CreateTable operation.
            <para>The <i>CreateTable</i> operation adds a new table to your account. In an AWS account, table names must be unique within each region.
            That is, you can have two tables with same name if you create the tables in different regions.</para> <para> <i>CreateTable</i> is an
            asynchronous operation. Upon receiving a <i>CreateTable</i> request, DynamoDB immediately returns a response with a <i>TableStatus</i> of
            <c>CREATING</c> . After the table is created, DynamoDB sets the <i>TableStatus</i> to <c>ACTIVE</c> . You can perform read and write
            operations only on an <c>ACTIVE</c> table. </para> <para>If you want to create multiple tables with secondary indexes on them, you must
            create them sequentially. Only one table with secondary indexes can be in the <c>CREATING</c> state at any given time.</para> <para>You can
            use the <i>DescribeTable</i> API to check the table status.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.AttributeDefinitions">
            <summary>
            An array of attributes that describe the key schema for the table and indexes.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.TableName">
            <summary>
            The name of the table to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.KeySchema">
            <summary>
            Specifies the attributes that make up the primary key for a table or an index. The attributes in <i>KeySchema</i> must also be defined in
            the <i>AttributeDefinitions</i> array. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html">Data Model</a> in the Amazon DynamoDB Developer Guide.
            Each <i>KeySchemaElement</i> in the array is composed of: <ul> <li> <i>AttributeName</i> - The name of this key attribute. </li> <li>
            <i>KeyType</i> - Determines whether the key attribute is <c>HASH</c> or <c>RANGE</c>. </li> </ul> For a primary key that consists of a hash
            attribute, you must specify exactly one element with a <i>KeyType</i> of <c>HASH</c>. For a primary key that consists of hash and range
            attributes, you must specify exactly two elements, in this order: The first element must have a <i>KeyType</i> of <c>HASH</c>, and the
            second element must have a <i>KeyType</i> of <c>RANGE</c>. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key">Specifying the
            Primary Key</a> in the Amazon DynamoDB Developer Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.LocalSecondaryIndexes">
            <summary>
            One or more local secondary indexes (the maximum is five) to be created on the table. Each index is scoped to a given hash key value. There
            is a 10 GB size limit per hash key; otherwise, the size of a local secondary index is unconstrained. Each local secondary index in the array
            includes the following: <ul> <li> <i>IndexName</i> - The name of the local secondary index. Must be unique only for this table. <p/> </li>
            <li> <i>KeySchema</i> - Specifies the key schema for the local secondary index. The key schema must begin with the same hash key attribute
            as the table. </li> <li> <i>Projection</i> - Specifies attributes that are copied (projected) from the table into the index. These are in
            addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed
            of: <ul> <li> <i>ProjectionType</i> - One of the following: <ul> <li> <c>KEYS_ONLY</c> - Only the index and primary keys are projected into
            the index. </li> <li> <c>INCLUDE</c> - Only the specified table attributes are projected into the index. The list of projected attributes
            are in <i>NonKeyAttributes</i>. </li> <li> <c>ALL</c> - All of the table attributes are projected into the index. </li> </ul> </li> <li>
            <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are projected into the secondary index. The total count of
            attributes specified in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed 20. If you project the same
            attribute into two different indexes, this counts as two distinct attributes when determining the total. </li> </ul> </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.GlobalSecondaryIndexes">
            <summary>
            One or more global secondary indexes (the maximum is five) to be created on the table. Each global secondary index in the array includes the
            following: <ul> <li> <i>IndexName</i> - The name of the global secondary index. Must be unique only for this table. <p/> </li> <li>
            <i>KeySchema</i> - Specifies the key schema for the global secondary index. </li> <li> <i>Projection</i> - Specifies attributes that are
            copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are
            automatically projected. Each attribute specification is composed of: <ul> <li> <i>ProjectionType</i> - One of the following: <ul> <li>
            <c>KEYS_ONLY</c> - Only the index and primary keys are projected into the index. </li> <li> <c>INCLUDE</c> - Only the specified table
            attributes are projected into the index. The list of projected attributes are in <i>NonKeyAttributes</i>. </li> <li> <c>ALL</c> - All of the
            table attributes are projected into the index. </li> </ul> </li> <li> <i>NonKeyAttributes</i> - A list of one or more non-key attribute
            names that are projected into the secondary index. The total count of attributes specified in <i>NonKeyAttributes</i>, summed across all of
            the secondary indexes, must not exceed 20. If you project the same attribute into two different indexes, this counts as two distinct
            attributes when determining the total. </li> </ul> </li> <li> <i>ProvisionedThroughput</i> - The provisioned throughput settings for the
            global secondary index, consisting of read and write capacity units. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the <i>UpdateTable</i>
            operation. For current minimum and maximum provisioned throughput values, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a> in the Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableResponse">
            <summary>
            Returns information about the  CreateTable response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableResult">
            <summary>
            <para>Represents the output of a <i>CreateTable</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableResult.TableDescription">
            <summary>
            Represents the properties of a table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableResponse.CreateTableResult">
            <summary>
            Gets and sets the CreateTableResult property.
            Represents the output of a CreateTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemRequest">
            <summary>
            Container for the parameters to the DeleteItem operation.
            <para>Deletes a single item in a table by primary key. You can perform a conditional delete operation that deletes the item if it exists, or
            if it has an expected attribute value.</para> <para>In addition to deleting an item, you can also return the item's attribute values in the
            same operation, using the <i>ReturnValues</i> parameter.</para> <para>Unless you specify conditions, the <i>DeleteItem</i> is an idempotent
            operation; running it multiple times on the same item or attribute does <i>not</i> result in an error response.</para> <para>Conditional
            deletes are useful for only deleting items if specific conditions are met. If those conditions are met, DynamoDB performs the delete.
            Otherwise, the item is not deleted. </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.TableName">
            <summary>
            The name of the table from which to delete the item.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.Key">
            <summary>
            A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of the item to delete.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.Expected">
            <summary>
            A map of attribute/condition pairs. This is the conditional block for the <i>DeleteItem</i> operation. <i>Expected</i> allows you to provide
            an attribute name, and whether or not DynamoDB should check to see if the attribute value already exists; or if the attribute value exists
            and has a particular value before changing it. Each item in <i>Expected</i> represents an attribute name for DynamoDB to check, along with
            the following: <ul> <li> <i>Value</i> - A value for DynamoDB to compare with an attribute. When performing the comparison, strongly
            consistent reads are used. </li> <li> <i>Exists</i> - Causes DynamoDB to evaluate the value before attempting a conditional operation: <ul>
            <li> If <i>Exists</i> is <c>true</c>, DynamoDB will check to see if that attribute value already exists in the table. If it is found, then
            the operation succeeds. If it is not found, the operation fails with a <i>ConditionalCheckFailedException</i>. </li> <li> If <i>Exists</i>
            is <c>false</c>, DynamoDB assumes that the attribute value does <i>not</i> exist in the table. If in fact the value does not exist, then the
            assumption is valid and the operation succeeds. If the value is found, despite the assumption that it does not exist, the operation fails
            with a <i>ConditionalCheckFailedException</i>. </li> </ul> The default setting for <i>Exists</i> is <c>true</c>. If you supply a
            <i>Value</i> all by itself, DynamoDB assumes the attribute exists: You don't have to set <i>Exists</i> to <c>true</c>, because it is
            implied. DynamoDB returns a <i>ValidationException</i> if: <ul> <li> <i>Exists</i> is <c>true</c> but there is no <i>Value</i> to check.
            (You expect a value to exist, but don't specify what that value is.) </li> <li> <i>Exists</i> is <c>false</c> but you also specify a
            <i>Value</i>. (You cannot expect an attribute to have a value, while also expecting it not to exist.) </li> </ul> </li> </ul> If you specify
            more than one condition in the <i>Expected</i> map, then by default all of the conditions must evaluate to true. In other words, the
            conditions are ANDed together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions instead. If you do this, then at
            least one of the conditions must evaluate to true, rather than all of them.) If <i>Expected</i> evaluates to true, then the conditional
            operation succeeds; otherwise, it fails.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the <i>Expected</i> map: <ul> <li><c>AND</c> - If <i>all</i> of the conditions evaluate to
            true, then the entire map evaluates to true.</li> <li><c>OR</c> - If <i>at least one</i> of the conditions evaluate to true, then the entire
            map evaluates to true.</li> </ul> If you omit <i>ConditionalOperator</i>, then <c>AND</c> is used as the default. The operation will succeed
            only if the entire map evaluates to true.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>AND, OR</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnValues">
            <summary>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before they were deleted. For <i>DeleteItem</i>, the valid
            values are: <ul> <li> <c>NONE</c> - If <i>ReturnValues</i> is not specified, or if its value is <c>NONE</c>, then nothing is returned. (This
            is the default for <i>ReturnValues</i>.) </li> <li> <c>ALL_OLD</c> - The content of the old item is returned. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnItemCollectionMetrics">
            <summary>
            If set to <c>SIZE</c>, statistics about item collections, if any, that were modified during the operation are returned in the response. If
            set to <c>NONE</c> (the default), no statistics are returned.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>SIZE, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemResponse">
            <summary>
            Returns information about the  DeleteItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemResult">
            <summary>
            <para>Represents the output of a <i>DeleteItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.Attributes">
            <summary>
            A map of attribute names to <i>AttributeValue</i> objects, representing the item as it appeared before the <i>DeleteItem</i> operation. This
            map appears in the response only if <i>ReturnValues</i> was specified as <c>ALL_OLD</c> in the request.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.ItemCollectionMetrics">
            <summary>
            Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i> is only returned if it was
            asked for in the request. If the table does not have any local secondary indexes, this information is not returned in the response. Each
            <i>ItemCollectionMetrics</i> element consists of: <ul> <li><i>ItemCollectionKey</i> - The hash key value of the item collection. This is the
            same as the hash key of the item.</li> <li><i>SizeEstimateRange</i> - An estimate of item collection size, measured in gigabytes. This is a
            two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the
            table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether
            a local secondary index is approaching its size limit. The estimate is subject to change over time; therefore, do not rely on the precision
            or accuracy of the estimate. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResponse.DeleteItemResult">
            <summary>
            Gets and sets the DeleteItemResult property.
            Represents the output of a DeleteItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteRequest">
            <summary>
            <para>Represents a request to perform a <i>DeleteItem</i> operation on an item.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteRequest.Key">
            <summary>
            A map of attribute name to attribute values, representing the primary key of the item to delete. All of the table's primary key attributes
            must be specified, and their data types must match those of the table's key schema.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableRequest">
            <summary>
            Container for the parameters to the DeleteTable operation.
            <para>The <i>DeleteTable</i> operation deletes a table and all of its items. After a <i>DeleteTable</i> request, the specified table is in
            the <c>DELETING</c> state until DynamoDB completes the deletion. If the table is in the <c>ACTIVE</c> state, you can delete it. If a table
            is in <c>CREATING</c> or <c>UPDATING</c> states, then DynamoDB returns a
            <i>ResourceInUseException</i> . If the specified table does not exist, DynamoDB returns a
            <i>ResourceNotFoundException</i> . If table is already in the <c>DELETING</c> state, no error is returned. </para> <para><b>NOTE:</b>
            DynamoDB might continue to accept data read and write operations, such as GetItem and PutItem, on a table in the DELETING state until the
            table deletion is complete. </para> <para>When you delete a table, any indexes on that table are also deleted.</para> <para>Use the
            <i>DescribeTable</i> API to check the status of the table. </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableRequest.TableName">
            <summary>
            The name of the table to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableResponse">
            <summary>
            Returns information about the  DeleteTable response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableResult">
            <summary>
            <para>Represents the output of a <i>DeleteTable</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableResult.TableDescription">
            <summary>
            Represents the properties of a table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableResponse.DeleteTableResult">
            <summary>
            Gets and sets the DeleteTableResult property.
            Represents the output of a DeleteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableRequest">
            <summary>
            Container for the parameters to the DescribeTable operation.
            <para>Returns information about the table, including the current status of the table, when it was created, the primary key schema, and any
            indexes on the table.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableRequest.TableName">
            <summary>
            The name of the table to describe.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableResponse">
            <summary>
            Returns information about the  DescribeTable response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableResult">
            <summary>
            <para>Represents the output of a <i>DescribeTable</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableResult.Table">
            <summary>
            Represents the properties of a table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableResponse.DescribeTableResult">
            <summary>
            Gets and sets the DescribeTableResult property.
            Represents the output of a DescribeTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ExpectedAttributeValue">
            <summary>
            <para>Represents an attribute value used with conditional <i>DeleteItem</i> ,
            <i>PutItem</i> or <i>UpdateItem</i> operations. DynamoDB will check to see if the attribute value already exists; or if
            the attribute exists and has a particular value before updating it.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.Value">
            <summary>
            Represents the data for an attribute. You can set one, and only one, of the elements.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.Exists">
            <summary>
            Causes DynamoDB to evaluate the value before attempting a conditional operation: <ul> <li> If <i>Exists</i> is <c>true</c>, DynamoDB will
            check to see if that attribute value already exists in the table. If it is found, then the operation succeeds. If it is not found, the
            operation fails with a <i>ConditionalCheckFailedException</i>. </li> <li> If <i>Exists</i> is <c>false</c>, DynamoDB assumes that the
            attribute value does <i>not</i> exist in the table. If in fact the value does not exist, then the assumption is valid and the operation
            succeeds. If the value is found, despite the assumption that it does not exist, the operation fails with a
            <i>ConditionalCheckFailedException</i>. </li> </ul> The default setting for <i>Exists</i> is <c>true</c>. If you supply a <i>Value</i> all
            by itself, DynamoDB assumes the attribute exists: You don't have to set <i>Exists</i> to <c>true</c>, because it is implied. DynamoDB
            returns a <i>ValidationException</i> if: <ul> <li> <i>Exists</i> is <c>true</c> but there is no <i>Value</i> to check. (You expect a value
            to exist, but don't specify what that value is.) </li> <li> <i>Exists</i> is <c>false</c> but you also specify a <i>Value</i>. (You cannot
            expect an attribute to have a value, while also expecting it not to exist.) </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.ComparisonOperator">
            <summary>
            A comparator for evaluating attributes in the <i>AttributeValueList</i>. For example, equals, greater than, less than, etc. The following
            comparison operators are available: <c>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN |
            BETWEEN</c> <note>You cannot specify <i>ComparisonOperator</i> if <i>Exists</i> or <i>Value</i> are also present.</note> The following are
            descriptions of each comparison operator. <ul> <li> <c>EQ</c> : Equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i>
            of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in
            the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not equal
            <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>NE</c> : Not equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i>
            of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in
            the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not equal
            <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>LE</c> : Less than or equal. <i>AttributeValueList</i> can contain only one
            <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a different type than
            the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also,
            <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>LT</c> : Less than. <i>AttributeValueList</i> can
            contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item contains an <i>AttributeValue</i> of a
            different type than the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c> does not equal
            <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li> <c>GE</c> : Greater than or
            equal. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If an item
            contains an <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For example,
            <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/> </li> <li>
            <c>GT</c> : Greater than. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or Binary (not a
            set). If an item contains an <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For
            example, <c>{"S":"6"}</c> does not equal <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c>. <p/>
            </li> <li> <c>NOT_NULL</c> : The attribute exists. </li> <li> <c>NULL</c> : The attribute does not exist. </li> <li> <c>CONTAINS</c> :
            checks for a subsequence, or value in a set. <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String, Number, or
            Binary (not a set). If the target attribute of the comparison is a String, then the operation checks for a substring match. If the target
            attribute of the comparison is Binary, then the operation looks for a subsequence of the target that matches the input. If the target
            attribute of the comparison is a set ("SS", "NS", or "BS"), then the operation checks for a member of the set (not as a substring). </li>
            <li> <c>NOT_CONTAINS</c> : checks for absence of a subsequence, or absence of a value in a set. <i>AttributeValueList</i> can contain only
            one <i>AttributeValue</i> of type String, Number, or Binary (not a set). If the target attribute of the comparison is a String, then the
            operation checks for the absence of a substring match. If the target attribute of the comparison is Binary, then the operation checks for
            the absence of a subsequence of the target that matches the input. If the target attribute of the comparison is a set ("SS", "NS", or "BS"),
            then the operation checks for the absence of a member of the set (not as a substring). </li> <li> <c>BEGINS_WITH</c> : checks for a prefix.
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String or Binary (not a Number or a set). The target attribute
            of the comparison must be a String or Binary (not a Number or a set). <p/> </li> <li> <c>IN</c> : checks for exact matches.
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type String, Number, or Binary (not a set). The target
            attribute of the comparison must be of the same type and exact value to match. A String never matches a String set. </li> <li>
            <c>BETWEEN</c> : Greater than or equal to the first value, and less than or equal to the second value. <i>AttributeValueList</i> must
            contain two <i>AttributeValue</i> elements of the same type, either String, Number, or Binary (not a set). A target attribute matches if the
            target value is greater than, or equal to, the first element and less than, or equal to, the second element. If an item contains an
            <i>AttributeValue</i> of a different type than the one specified in the request, the value does not match. For example, <c>{"S":"6"}</c>
            does not compare to <c>{"N":"6"}</c>. Also, <c>{"N":"6"}</c> does not compare to <c>{"NS":["6", "2", "1"]}</c> </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.AttributeValueList">
            <summary>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied attribute. The number of values in the list depends on the
            <i>ComparisonOperator</i> being used. For type Number, value comparisons are numeric. String value comparisons for greater than, equals, or
            less than are based on ASCII character code values. For example, <c>a</c> is greater than <c>A</c>, and <c>aa</c> is greater than <c>B</c>.
            For a list of code values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>. For
            Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values, for example when evaluating query
            expressions. For information on specifying data types in JSON, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON Data Format</a> in the Amazon DynamoDB Developer
            Guide. <note>You cannot specify <i>AttributeValueList</i> if <i>Exists</i> or <i>Value</i> are also present.</note>
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemRequest">
            <summary>
            Container for the parameters to the GetItem operation.
            <para>The <i>GetItem</i> operation returns a set of attributes for the item with the given primary key. If there is no matching item,
            <i>GetItem</i> does not return any data.</para> <para> <i>GetItem</i> provides an eventually consistent read by default. If your application
            requires a strongly consistent read, set <i>ConsistentRead</i> to <c>true</c> . Although a strongly consistent read might take more time
            than an eventually consistent read, it always returns the last updated value.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.TableName">
            <summary>
            The name of the table containing the requested item.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.Key">
            <summary>
            A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of the item to retrieve.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.AttributesToGet">
            <summary>
            The names of one or more attributes to retrieve. If no attribute names are specified, then all attributes will be returned. If any of the
            requested attributes are not found, they will not appear in the result. Note that <i>AttributesToGet</i> has no effect on provisioned
            throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an
            application.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.ConsistentRead">
            <summary>
            If set to <c>true</c>, then the operation uses strongly consistent reads; otherwise, eventually consistent reads are used.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemResponse">
            <summary>
            Returns information about the  GetItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemResult">
            <summary>
            <para>Represents the output of a <i>GetItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResult.Item">
            <summary>
            A map of attribute names to <i>AttributeValue</i> objects, as specified by <i>AttributesToGet</i>.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResponse.GetItemResult">
            <summary>
            Gets and sets the GetItemResult property.
            Represents the output of a GetItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex">
            <summary>
            <para>Represents a global secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.IndexName">
            <summary>
            The name of the global secondary index. The name must be unique among all other indexes on this table.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.KeySchema">
            <summary>
            The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types (<c>HASH</c> or
            <c>RANGE</c>).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.Projection">
            <summary>
            Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and
            index key attributes, which are automatically projected.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the <i>UpdateTable</i>
            operation. For current minimum and maximum provisioned throughput values, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a> in the Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription">
            <summary>
            <para>Represents the properties of a global secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexName">
            <summary>
            The name of the global secondary index.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.KeySchema">
            <summary>
            The complete key schema for the global secondary index, consisting of one or more pairs of attribute names and key types (<c>HASH</c> or
            <c>RANGE</c>).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.Projection">
            <summary>
            Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and
            index key attributes, which are automatically projected.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexStatus">
            <summary>
            The current state of the global secondary index: <ul> <li> <i>CREATING</i> - The index is being created, as the result of a
            <i>CreateTable</i> or <i>UpdateTable</i> operation. </li> <li> <i>UPDATING</i> - The index is being updated, as the result of a
            <i>CreateTable</i> or <i>UpdateTable</i> operation. </li> <li> <i>DELETING</i> - The index is being deleted, as the result of a
            <i>DeleteTable</i> operation. </li> <li> <i>ACTIVE</i> - The index is ready for use. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>CREATING, UPDATING, DELETING, ACTIVE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases
            and decreases.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexSizeBytes">
            <summary>
            The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be
            reflected in this value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.ItemCount">
            <summary>
            The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected
            in this value.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate">
            <summary>
            <para>Represents the new provisioned throughput settings to apply to a global secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate.Update">
            <summary>
            The name of a global secondary index, along with the updated provisioned throughput settings that are to be applied to that index.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.InternalServerErrorException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ItemCollectionMetrics">
            <summary>
            <para>Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i> is only returned if it
            was asked for in the request. If the table does not have any local secondary indexes, this information is not returned in the
            response.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ItemCollectionMetrics.ItemCollectionKey">
            <summary>
            The hash key value of the item collection. This is the same as the hash key of the item.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ItemCollectionMetrics.SizeEstimateRangeGB">
            <summary>
            An estimate of item collection size, measured in gigabytes. This is a two-element array containing a lower bound and an upper bound for the
            estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local
            secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit. The estimate is
            subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ItemCollectionSizeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.KeysAndAttributes">
            <summary>
            <para>Represents a set of primary keys and, for each key, the attributes to retrieve from the table.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.Keys">
            <summary>
            The primary key attribute values that define the items and the attributes associated with the items.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 100</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.AttributesToGet">
            <summary>
            One or more attributes to retrieve from the table or index. If no attribute names are specified then all attributes will be returned. If any
            of the specified attributes are not found, they will not appear in the result.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.ConsistentRead">
            <summary>
            The consistency of a read operation. If set to <c>true</c>, then a strongly consistent read is used; otherwise, an eventually consistent
            read is used.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.KeySchemaElement">
            <summary>
            <para>Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key
            attributes of an index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeySchemaElement.AttributeName">
            <summary>
            The name of a key attribute.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 255</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeySchemaElement.KeyType">
            <summary>
            The attribute data, consisting of the data type and the attribute value itself.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>HASH, RANGE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LimitExceededException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesRequest">
            <summary>
            Container for the parameters to the ListTables operation.
            <para>Returns an array of table names associated with the current account and endpoint. The output from <i>ListTables</i> is paginated, with
            each page returning a maximum of 100 table names.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesRequest.ExclusiveStartTableName">
            <summary>
            The first table name that this operation will evaluate. Use the value that was returned for <i>LastEvaluatedTableName</i> in a previous
            operation, so that you can obtain the next page of results.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesRequest.Limit">
            <summary>
            A maximum number of table names to return. If this parameter is not specified, the limit is 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 100</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesResponse">
            <summary>
            Returns information about the  ListTables response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesResult">
            <summary>
            <para>Represents the output of a <i>ListTables</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResult.TableNames">
            <summary>
            The names of the tables associated with the current account at the current endpoint. The maximum size of this array is 100. If
            <i>LastEvaluatedTableName</i> also appears in the output, you can use this value as the <i>ExclusiveStartTableName</i> parameter in a
            subsequent <i>ListTables</i> request and obtain the next page of results.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResult.LastEvaluatedTableName">
            <summary>
            The name of the last table in the current page of results. Use this value as the <i>ExclusiveStartTableName</i> in a new request to obtain
            the next page of results, until all the table names are returned. If you do not receive a <i>LastEvaluatedTableName</i> value in the
            response, this means that there are no more table names to be retrieved.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResponse.ListTablesResult">
            <summary>
            Gets and sets the ListTablesResult property.
            Represents the output of a ListTables operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LocalSecondaryIndex">
            <summary>
            <para>Represents a local secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.IndexName">
            <summary>
            The name of the local secondary index. The name must be unique among all other indexes on this table.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.KeySchema">
            <summary>
            The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types (<c>HASH</c> or
            <c>RANGE</c>).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.Projection">
            <summary>
            Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and
            index key attributes, which are automatically projected.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription">
            <summary>
            <para>Represents the properties of a local secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.IndexName">
            <summary>
            Represents the name of the local secondary index.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.KeySchema">
            <summary>
            The complete index key schema, which consists of one or more pairs of attribute names and key types (<c>HASH</c> or <c>RANGE</c>).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.Projection">
            <summary>
            Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and
            index key attributes, which are automatically projected.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.IndexSizeBytes">
            <summary>
            The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be
            reflected in this value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.ItemCount">
            <summary>
            The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected
            in this value.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Projection">
            <summary>
            <para>Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes
            and index key attributes, which are automatically projected.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Projection.ProjectionType">
            <summary>
            The set of attributes that are projected into the index: <ul> <li> <c>KEYS_ONLY</c> - Only the index and primary keys are projected into the
            index. </li> <li> <c>INCLUDE</c> - Only the specified table attributes are projected into the index. The list of projected attributes are in
            <i>NonKeyAttributes</i>. </li> <li> <c>ALL</c> - All of the table attributes are projected into the index. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>ALL, KEYS_ONLY, INCLUDE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Projection.NonKeyAttributes">
            <summary>
            Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of
            <i>NonKeyAttributes</i> summed across all of the local secondary indexes, must not exceed 20. If you project the same attribute into two
            different indexes, this counts as two distinct attributes when determining the total.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 20</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughput">
            <summary>
            <para>Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the
            <i>UpdateTable</i> operation.</para> <para>For current minimum and maximum provisioned throughput values, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html" >Limits</a> in the Amazon DynamoDB Developer
            Guide.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughput.ReadCapacityUnits">
            <summary>
            The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <i>ThrottlingException</i>. For more
            information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and
            Write Requirements</a> in the Amazon DynamoDB Developer Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughput.WriteCapacityUnits">
            <summary>
            The maximum number of writes consumed per second before DynamoDB returns a <i>ThrottlingException</i>. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and
            Write Requirements</a> in the Amazon DynamoDB Developer Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription">
            <summary>
            <para>Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about
            increases and decreases.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.LastIncreaseDateTime">
            <summary>
            The date and time of the last provisioned throughput increase for this table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.LastDecreaseDateTime">
            <summary>
            The date and time of the last provisioned throughput decrease for this table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.NumberOfDecreasesToday">
            <summary>
            The number of provisioned throughput decreases for this table during this UTC calendar day. For current maximums on provisioned throughput
            decreases, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a> in the Amazon DynamoDB
            Developer Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.ReadCapacityUnits">
            <summary>
            The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <i>ThrottlingException</i>. Eventually
            consistent reads require less effort than strongly consistent reads, so a setting of 50 <i>ReadCapacityUnits</i> per second provides 100
            eventually consistent <i>ReadCapacityUnits</i> per second.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.WriteCapacityUnits">
            <summary>
            The maximum number of writes consumed per second before DynamoDB returns a <i>ThrottlingException</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemRequest">
            <summary>
            Container for the parameters to the PutItem operation.
            <para>Creates a new item, or replaces an old item with a new item. If an item already exists in the specified table with the same primary
            key, the new item completely replaces the existing item. You can perform a conditional put (insert a new item if one with the specified
            primary key doesn't exist), or replace an existing item if it has certain attribute values. </para> <para>In addition to putting an item,
            you can also return the item's attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para> <para>When you add an
            item, the primary key attribute(s) are the only required attributes. Attribute values cannot be null. String and binary type attributes must
            have lengths greater than zero. Set type attributes cannot be empty. Requests with empty values will be rejected with a
            <i>ValidationException</i> .</para> <para>You can request that <i>PutItem</i> return either a copy of the old item (before the update) or a
            copy of the new item (after the update). For more information, see the <i>ReturnValues</i> description.</para> <para><b>NOTE:</b> To prevent
            a new item from replacing an existing item, use a conditional put operation with Exists set to false for the primary key attribute, or
            attributes. </para> <para>For more information about using this API, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html" >Working with Items</a> in the Amazon DynamoDB
            Developer Guide.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.TableName">
            <summary>
            The name of the table to contain the item.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.Item">
            <summary>
            A map of attribute name/value pairs, one for each attribute. Only the primary key attributes are required; you can optionally provide other
            attribute name-value pairs for the item. If you specify any attributes that are part of an index key, then the data types for those
            attributes must match those of the schema in the table's attribute definition. For more information about primary keys, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary Key</a> in the Amazon
            DynamoDB Developer Guide. Each element in the <i>Item</i> map is an <i>AttributeValue</i> object.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.Expected">
            <summary>
            A map of attribute/condition pairs. This is the conditional block for the <i>PutItem</i> operation. <i>Expected</i> allows you to provide an
            attribute name, and whether or not DynamoDB should check to see if the attribute value already exists; or if the attribute value exists and
            has a particular value before changing it. Each item in <i>Expected</i> represents an attribute name for DynamoDB to check, along with the
            following: <ul> <li> <i>Value</i> - A value for DynamoDB to compare with an attribute. When performing the comparison, strongly consistent
            reads are used. </li> <li> <i>Exists</i> - Causes DynamoDB to evaluate the value before attempting a conditional operation: <ul> <li> If
            <i>Exists</i> is <c>true</c>, DynamoDB will check to see if that attribute value already exists in the table. If it is found, then the
            operation succeeds. If it is not found, the operation fails with a <i>ConditionalCheckFailedException</i>. </li> <li> If <i>Exists</i> is
            <c>false</c>, DynamoDB assumes that the attribute value does <i>not</i> exist in the table. If in fact the value does not exist, then the
            assumption is valid and the operation succeeds. If the value is found, despite the assumption that it does not exist, the operation fails
            with a <i>ConditionalCheckFailedException</i>. </li> </ul> The default setting for <i>Exists</i> is <c>true</c>. If you supply a
            <i>Value</i> all by itself, DynamoDB assumes the attribute exists: You don't have to set <i>Exists</i> to <c>true</c>, because it is
            implied. DynamoDB returns a <i>ValidationException</i> if: <ul> <li> <i>Exists</i> is <c>true</c> but there is no <i>Value</i> to check.
            (You expect a value to exist, but don't specify what that value is.) </li> <li> <i>Exists</i> is <c>false</c> but you also specify a
            <i>Value</i>. (You cannot expect an attribute to have a value, while also expecting it not to exist.) </li> </ul> </li> </ul> If you specify
            more than one condition in the <i>Expected</i> map, then by default all of the conditions must evaluate to true. In other words, the
            conditions are ANDed together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions instead. If you do this, then at
            least one of the conditions must evaluate to true, rather than all of them.) If <i>Expected</i> evaluates to true, then the conditional
            operation succeeds; otherwise, it fails.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnValues">
            <summary>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before they were updated with the <i>PutItem</i> request.
            For <i>PutItem</i>, the valid values are: <ul> <li> <c>NONE</c> - If <i>ReturnValues</i> is not specified, or if its value is <c>NONE</c>,
            then nothing is returned. (This is the default for <i>ReturnValues</i>.) </li> <li> <c>ALL_OLD</c> - If <i>PutItem</i> overwrote an
            attribute name-value pair, then the content of the old item is returned. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnItemCollectionMetrics">
            <summary>
            If set to <c>SIZE</c>, statistics about item collections, if any, that were modified during the operation are returned in the response. If
            set to <c>NONE</c> (the default), no statistics are returned.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>SIZE, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the <i>Expected</i> map: <ul> <li><c>AND</c> - If <i>all</i> of the conditions evaluate to
            true, then the entire map evaluates to true.</li> <li><c>OR</c> - If <i>at least one</i> of the conditions evaluate to true, then the entire
            map evaluates to true.</li> </ul> If you omit <i>ConditionalOperator</i>, then <c>AND</c> is used as the default. The operation will succeed
            only if the entire map evaluates to true.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>AND, OR</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemResponse">
            <summary>
            Returns information about the  PutItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemResult">
            <summary>
            <para>Represents the output of a <i>PutItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.Attributes">
            <summary>
            The attribute values as they appeared before the <i>PutItem</i> operation, but only if <i>ReturnValues</i> is specified as <c>ALL_OLD</c> in
            the request. Each element consists of an attribute name and an attribute value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.ItemCollectionMetrics">
            <summary>
            Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i> is only returned if it was
            asked for in the request. If the table does not have any local secondary indexes, this information is not returned in the response. Each
            <i>ItemCollectionMetrics</i> element consists of: <ul> <li><i>ItemCollectionKey</i> - The hash key value of the item collection. This is the
            same as the hash key of the item.</li> <li><i>SizeEstimateRange</i> - An estimate of item collection size, measured in gigabytes. This is a
            two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the
            table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether
            a local secondary index is approaching its size limit. The estimate is subject to change over time; therefore, do not rely on the precision
            or accuracy of the estimate. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResponse.PutItemResult">
            <summary>
            Gets and sets the PutItemResult property.
            Represents the output of a PutItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutRequest">
            <summary>
            <para>Represents a request to perform a <i>PutItem</i> operation on an item.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutRequest.Item">
            <summary>
            A map of attribute name to attribute values, representing the primary key of an item to be processed by <i>PutItem</i>. All of the table's
            primary key attributes must be specified, and their data types must match those of the table's key schema. If any attributes are present in
            the item which are part of an index key schema for the table, their types must match the index key schema.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryRequest">
            <summary>
            Container for the parameters to the Query operation.
            <para>A <i>Query</i> operation directly accesses items from a table using the table primary key, or from an index using the index key. You
            must provide a specific hash key value. You can narrow the scope of the query by using comparison operators on the range key value, or on
            the index key. You can use the <i>ScanIndexForward</i> parameter to get results in forward or reverse order, by range key or by index key.
            </para> <para>Queries that do not return results consume the minimum read capacity units according to the type of read.</para> <para>If the
            total number of items meeting the query criteria exceeds the result set size limit of 1 MB, the query stops and results are returned to the
            user with a <i>LastEvaluatedKey</i> to continue the query in a subsequent operation. Unlike a <i>Scan</i> operation, a <i>Query</i>
            operation never returns an empty result set <i>and</i> a
            <i>LastEvaluatedKey</i> . The <i>LastEvaluatedKey</i> is only provided if the results exceed 1 MB, or if you have used
            <i>Limit</i> . </para> <para>You can query a table, a local secondary index, or a global secondary index. For a query on a table or on a
            local secondary index, you can set <i>ConsistentRead</i> to true and obtain a strongly consistent result. Global secondary indexes support
            eventually consistent reads only, so do not specify <i>ConsistentRead</i> when querying a global secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.TableName">
            <summary>
            The name of the table containing the requested items.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.IndexName">
            <summary>
            The name of an index to query. This can be any local secondary index or global secondary index on the table.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.Select">
            <summary>
            The attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, the count of matching items, or
            in the case of an index, some or all of the attributes projected into the index. <ul> <li> <c>ALL_ATTRIBUTES</c>: Returns all of the item
            attributes from the specified table or index. If you are querying a local secondary index, then for each matching item in the index DynamoDB
            will fetch the entire item from the parent table. If the index is configured to project all item attributes, then all of the data can be
            obtained from the local secondary index, and no fetching is required.. </li> <li> <c>ALL_PROJECTED_ATTRIBUTES</c>: Allowed only when
            querying an index. Retrieves all attributes which have been projected into the index. If the index is configured to project all attributes,
            this is equivalent to specifying <c>ALL_ATTRIBUTES</c>. </li> <li> <c>COUNT</c>: Returns the number of matching items, rather than the
            matching items themselves. </li> <li> <c>SPECIFIC_ATTRIBUTES</c> : Returns only the attributes listed in <i>AttributesToGet</i>. This is
            equivalent to specifying <i>AttributesToGet</i> without specifying any value for <i>Select</i>. If you are querying a local secondary index
            and request only attributes that are projected into that index, the operation will read only the index and not the table. If any of the
            requested attributes are not projected into the local secondary index, DynamoDB will fetch each of these attributes from the parent table.
            This extra fetching incurs additional throughput cost and latency. If you are querying a global secondary index, you can only request
            attributes that are projected into the index. Global secondary index queries cannot fetch attributes from the parent table. </li> </ul> If
            neither <i>Select</i> nor <i>AttributesToGet</i> are specified, DynamoDB defaults to <c>ALL_ATTRIBUTES</c> when accessing a table, and
            <c>ALL_PROJECTED_ATTRIBUTES</c> when accessing an index. You cannot use both <i>Select</i> and <i>AttributesToGet</i> together in a single
            request, <i>unless</i> the value for <i>Select</i> is <c>SPECIFIC_ATTRIBUTES</c>. (This usage is equivalent to specifying
            <i>AttributesToGet</i> without any value for <i>Select</i>.)
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.AttributesToGet">
            <summary>
            The names of one or more attributes to retrieve. If no attribute names are specified, then all attributes will be returned. If any of the
            requested attributes are not found, they will not appear in the result. Note that <i>AttributesToGet</i> has no effect on provisioned
            throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an
            application. You cannot use both <i>AttributesToGet</i> and <i>Select</i> together in a <i>Query</i> request, <i>unless</i> the value for
            <i>Select</i> is <c>SPECIFIC_ATTRIBUTES</c>. (This usage is equivalent to specifying <i>AttributesToGet</i> without any value for
            <i>Select</i>.) If you are querying a local secondary index and request only attributes that are projected into that index, the operation
            will read only the index and not the table. If any of the requested attributes are not projected into the local secondary index, DynamoDB
            will fetch each of these attributes from the parent table. This extra fetching incurs additional throughput cost and latency. If you are
            querying a global secondary index, you can only request attributes that are projected into the index. Global secondary index queries cannot
            fetch attributes from the parent table.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.Limit">
            <summary>
            The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the
            limit while processing the results, it stops the operation and returns the matching values up to that point, and a <i>LastEvaluatedKey</i>
            to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed data set size exceeds 1 MB before
            DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a <i>LastEvaluatedKey</i> to apply
            in a subsequent operation to continue the operation. For more information see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan</a> in the Amazon DynamoDB Developer
            Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ConsistentRead">
            <summary>
            If set to <c>true</c>, then the operation uses strongly consistent reads; otherwise, eventually consistent reads are used. Strongly
            consistent reads are not supported on global secondary indexes. If you query a global secondary index with <i>ConsistentRead</i> set to
            <c>true</c>, you will receive an error message.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.KeyConditions">
            <summary>
            The selection criteria for the query. For a query on a table, you can only have conditions on the table primary key attributes. You must
            specify the hash key attribute name and value as an <c>EQ</c> condition. You can optionally specify a second condition, referring to the
            range key attribute. For a query on an index, you can only have conditions on the index key attributes. You must specify the index hash
            attribute name and value as an EQ condition. You can optionally specify a second condition, referring to the index key range attribute. If
            you specify more than one condition in the <i>KeyConditions</i> map, then by default all of the conditions must evaluate to true. In other
            words, the conditions are ANDed together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions instead. If you do
            this, then at least one of the conditions must evaluate to true, rather than all of them.) Each <i>KeyConditions</i> element consists of an
            attribute name to compare, along with the following: <ul> <li> <i>AttributeValueList</i> - One or more values to evaluate against the
            supplied attribute. The number of values in the list depends on the <i>ComparisonOperator</i> being used. For type Number, value comparisons
            are numeric. String value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, <c>a</c>
            is greater than <c>A</c>, and <c>aa</c> is greater than <c>B</c>. For a list of code values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>. For
            Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values, for example when evaluating query
            expressions. For information on specifying data types in JSON, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON Data Format</a> in the Amazon DynamoDB Developer
            Guide.</li> <li><i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, equals, greater than, less than, etc.
            <important>For <i>KeyConditions</i>, the following comparison operators are supported: <c>EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN</c>
            </important> For complete descriptions of comparison operators, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html">API_Condition.html</a>. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.QueryFilter">
            <summary>
            Evaluates the query results and returns only the desired values. If you specify more than one condition in the <i>QueryFilter</i> map, then
            by default all of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the
            <i>ConditionalOperator</i> parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to
            true, rather than all of them.) Each <i>QueryFilter</i> element consists of an attribute name to compare, along with the following: <ul>
            <li> <i>AttributeValueList</i> - One or more values to evaluate against the supplied attribute. The number of values in the list depends on
            the <i>ComparisonOperator</i> being used. For type Number, value comparisons are numeric. String value comparisons for greater than, equals,
            or less than are based on ASCII character code values. For example, <c>a</c> is greater than <c>A</c>, and <c>aa</c> is greater than
            <c>B</c>. For a list of code values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>. For
            Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values, for example when evaluating query
            expressions. For information on specifying data types in JSON, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON Data Format</a> in the Amazon DynamoDB Developer
            Guide. </li> <li><i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, equals, greater than, less than, etc. The
            following comparison operators are available: <c>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN
            | BETWEEN</c> For complete descriptions of all comparison operators, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html">API_Condition.html</a>. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the <i>QueryFilter</i> map: <ul> <li><c>AND</c> - If <i>all</i> of the conditions evaluate
            to true, then the entire map evaluates to true.</li> <li><c>OR</c> - If <i>at least one</i> of the conditions evaluate to true, then the
            entire map evaluates to true.</li> </ul> If you omit <i>ConditionalOperator</i>, then <c>AND</c> is used as the default. The operation will
            succeed only if the entire map evaluates to true.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>AND, OR</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ScanIndexForward">
            <summary>
            Specifies ascending (true) or descending (false) traversal of the index. DynamoDB returns results reflecting the requested order determined
            by the range key. If the data type is Number, the results are returned in numeric order. For String, the results are returned in order of
            ASCII character code values. For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values. If
            <i>ScanIndexForward</i> is not specified, the results are returned in ascending order.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ExclusiveStartKey">
            <summary>
            The primary key of the first item that this operation will evaluate. Use the value that was returned for <i>LastEvaluatedKey</i> in the
            previous operation. The data type for <i>ExclusiveStartKey</i> must be String, Number or Binary. No set data types are allowed.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryResponse">
            <summary>
            Returns information about the  Query response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryResult">
            <summary>
            <para>Represents the output of a <i>Query</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.Items">
            <summary>
            An array of item attributes that match the query criteria. Each element in this array consists of an attribute name and the value for that
            attribute.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.Count">
            <summary>
            The number of items in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.ScannedCount">
            <summary>
            The number of items in the complete query, before any filters are applied. A high <i>ScannedCount</i> value with few, or no, <i>Count</i>
            results indicates an inefficient <i>Query</i> operation. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count">Count and ScannedCount</a> in the Amazon
            DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.LastEvaluatedKey">
            <summary>
            The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation,
            excluding this value in the new request. If <i>LastEvaluatedKey</i> is null, then the "last page" of results has been processed and there is
            no more data to be retrieved. If <i>LastEvaluatedKey</i> is anything other than null, this does not necessarily mean that there is more data
            in the result set. The only way to know when you have reached the end of the result set is when <i>LastEvaluatedKey</i> is null.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResponse.QueryResult">
            <summary>
            Gets and sets the QueryResult property.
            Represents the output of a Query operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ResourceInUseException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException">
            <summary>
             AmazonDynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanRequest">
            <summary>
            Container for the parameters to the Scan operation.
            <para>The <i>Scan</i> operation returns one or more items and item attributes by accessing every item in the table. To have DynamoDB return
            fewer items, you can provide a <i>ScanFilter</i> .</para> <para>If the total number of scanned items exceeds the maximum data set size limit
            of 1 MB, the scan stops and results are returned to the user with a <i>LastEvaluatedKey</i> to continue the scan in a subsequent operation.
            The results also include the number of items exceeding the limit. A scan can result in no table data meeting the filter criteria. </para>
            <para>The result set is eventually consistent. </para> <para>By default, <i>Scan</i> operations proceed sequentially; however, for faster
            performance on large tables, applications can request a parallel <i>Scan</i> by specifying the <i>Segment</i> and <i>TotalSegments</i>
            parameters. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScanParallelScan" >Parallel Scan</a> in the
            Amazon DynamoDB Developer Guide.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.TableName">
            <summary>
            The name of the table containing the requested items.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.AttributesToGet">
            <summary>
            The names of one or more attributes to retrieve. If no attribute names are specified, then all attributes will be returned. If any of the
            requested attributes are not found, they will not appear in the result. Note that <i>AttributesToGet</i> has no effect on provisioned
            throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an
            application.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Limit">
            <summary>
            The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the
            limit while processing the results, it stops the operation and returns the matching values up to that point, and a <i>LastEvaluatedKey</i>
            to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed data set size exceeds 1 MB before
            DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a <i>LastEvaluatedKey</i> to apply
            in a subsequent operation to continue the operation. For more information see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query and Scan</a> in the Amazon DynamoDB Developer
            Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Select">
            <summary>
            The attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, or the count of matching items.
            <ul> <li> <c>ALL_ATTRIBUTES</c>: Returns all of the item attributes. </li> <li> <c>COUNT</c>: Returns the number of matching items, rather
            than the matching items themselves. </li> <li> <c>SPECIFIC_ATTRIBUTES</c> : Returns only the attributes listed in <i>AttributesToGet</i>.
            This is equivalent to specifying <i>AttributesToGet</i> without specifying any value for <i>Select</i>. </li> </ul> If neither <i>Select</i>
            nor <i>AttributesToGet</i> are specified, DynamoDB defaults to <c>ALL_ATTRIBUTES</c>. You cannot use both <i>Select</i> and
            <i>AttributesToGet</i> together in a single request, <i>unless</i> the value for <i>Select</i> is <c>SPECIFIC_ATTRIBUTES</c>. (This usage is
            equivalent to specifying <i>AttributesToGet</i> without any value for <i>Select</i>.)
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ScanFilter">
            <summary>
            Evaluates the scan results and returns only the desired values. If you specify more than one condition in the <i>ScanFilter</i> map, then by
            default all of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the
            <i>ConditionalOperator</i> parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to
            true, rather than all of them.) Each <i>ScanFilter</i> element consists of an attribute name to compare, along with the following: <ul> <li>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied attribute. The number of values in the list depends on the
            <i>ComparisonOperator</i> being used. For type Number, value comparisons are numeric. String value comparisons for greater than, equals, or
            less than are based on ASCII character code values. For example, <c>a</c> is greater than <c>A</c>, and <c>aa</c> is greater than <c>B</c>.
            For a list of code values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>. For
            Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values, for example when evaluating query
            expressions. For information on specifying data types in JSON, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON Data Format</a> in the Amazon DynamoDB Developer
            Guide. </li> <li><i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, equals, greater than, less than, etc. The
            following comparison operators are available: <c>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN
            | BETWEEN</c> For complete descriptions of all comparison operators, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html">API_Condition.html</a>. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the <i>ScanFilter</i> map: <ul> <li><c>AND</c> - If <i>all</i> of the conditions evaluate
            to true, then the entire map evaluates to true.</li> <li><c>OR</c> - If <i>at least one</i> of the conditions evaluate to true, then the
            entire map evaluates to true.</li> </ul> If you omit <i>ConditionalOperator</i>, then <c>AND</c> is used as the default. The operation will
            succeed only if the entire map evaluates to true.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>AND, OR</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ExclusiveStartKey">
            <summary>
            The primary key of the first item that this operation will evaluate. Use the value that was returned for <i>LastEvaluatedKey</i> in the
            previous operation. The data type for <i>ExclusiveStartKey</i> must be String, Number or Binary. No set data types are allowed. In a
            parallel scan, a <i>Scan</i> request that includes <i>ExclusiveStartKey</i> must specify the same segment whose previous <i>Scan</i>
            returned the corresponding value of <i>LastEvaluatedKey</i>.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.TotalSegments">
            <summary>
            For a parallel <i>Scan</i> request, <i>TotalSegments</i> represents the total number of segments into which the <i>Scan</i> operation will
            be divided. The value of <i>TotalSegments</i> corresponds to the number of application workers that will perform the parallel scan. For
            example, if you want to scan a table using four application threads, you would specify a <i>TotalSegments</i> value of 4. The value for
            <i>TotalSegments</i> must be greater than or equal to 1, and less than or equal to 4096. If you specify a <i>TotalSegments</i> value of 1,
            the <i>Scan</i> will be sequential rather than parallel. If you specify <i>TotalSegments</i>, you must also specify <i>Segment</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Segment">
            <summary>
            For a parallel <i>Scan</i> request, <i>Segment</i> identifies an individual segment to be scanned by an application worker. Segment IDs are
            zero-based, so the first segment is always 0. For example, if you want to scan a table using four application threads, the first thread
            would specify a <i>Segment</i> value of 0, the second thread would specify 1, and so on. The value of <i>LastEvaluatedKey</i> returned from
            a parallel <i>Scan</i> request must be used as <i>ExclusiveStartKey</i> with the same Segment ID in a subsequent <i>Scan</i> operation. The
            value for <i>Segment</i> must be greater than or equal to 0, and less than the value provided for <i>TotalSegments</i>. If you specify
            <i>Segment</i>, you must also specify <i>TotalSegments</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - 999999</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanResponse">
            <summary>
            Returns information about the  Scan response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanResult">
            <summary>
            <para>Represents the output of a <i>Scan</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.Items">
            <summary>
            An array of item attributes that match the scan criteria. Each element in this array consists of an attribute name and the value for that
            attribute.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.Count">
            <summary>
            The number of items in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.ScannedCount">
            <summary>
            The number of items in the complete scan, before any filters are applied. A high <i>ScannedCount</i> value with few, or no, <i>Count</i>
            results indicates an inefficient <i>Scan</i> operation. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count">Count and ScannedCount</a> in the Amazon
            DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.LastEvaluatedKey">
            <summary>
            The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation,
            excluding this value in the new request. If <i>LastEvaluatedKey</i> is null, then the "last page" of results has been processed and there is
            no more data to be retrieved. If <i>LastEvaluatedKey</i> is anything other than null, this does not necessarily mean that there is more data
            in the result set. The only way to know when you have reached the end of the result set is when <i>LastEvaluatedKey</i> is null.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResponse.ScanResult">
            <summary>
            Gets and sets the ScanResult property.
            Represents the output of a Scan operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.TableDescription">
            <summary>
            <para>Represents the properties of a table.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.AttributeDefinitions">
            <summary>
            An array of <i>AttributeDefinition</i> objects. Each of these objects describes one attribute in the table and index key schema. Each
            <i>AttributeDefinition</i> object in this array is composed of: <ul> <li> <i>AttributeName</i> - The name of the attribute. </li> <li>
            <i>AttributeType</i> - The data type for the attribute. </li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableName">
            <summary>
            The name of the table.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.KeySchema">
            <summary>
            The primary key structure for the table. Each <i>KeySchemaElement</i> consists of: <ul> <li> <i>AttributeName</i> - The name of the
            attribute. </li> <li> <i>KeyType</i> - The key type for the attribute. Can be either <c>HASH</c> or <c>RANGE</c>. </li> </ul> For more
            information about primary keys, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary Key</a> in the Amazon
            DynamoDB Developer Guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableStatus">
            <summary>
            The current state of the table: <ul> <li> <i>CREATING</i> - The table is being created, as the result of a <i>CreateTable</i> operation.
            </li> <li> <i>UPDATING</i> - The table is being updated, as the result of an <i>UpdateTable</i> operation. </li> <li> <i>DELETING</i> - The
            table is being deleted, as the result of a <i>DeleteTable</i> operation. </li> <li> <i>ACTIVE</i> - The table is ready for use. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>CREATING, UPDATING, DELETING, ACTIVE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.CreationDateTime">
            <summary>
            The date and time when the table was created, in <a href="http://www.epochconverter.com/">UNIX epoch time</a> format.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.ProvisionedThroughput">
            <summary>
            The provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and
            decreases.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableSizeBytes">
            <summary>
            The total size of the specified table, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be
            reflected in this value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.ItemCount">
            <summary>
            The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected
            in this value.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.LocalSecondaryIndexes">
            <summary>
            Represents one or more local secondary indexes on the table. Each index is scoped to a given hash key value. Tables with one or more local
            secondary indexes are subject to an item collection size limit, where the amount of data within a given item collection cannot exceed 10 GB.
            Each element is composed of: <ul> <li> <i>IndexName</i> - The name of the local secondary index. </li> <li> <i>KeySchema</i> - Specifies the
            complete index key schema. The attribute names in the key schema must be between 1 and 255 characters (inclusive). The key schema must begin
            with the same hash key attribute as the table. </li> <li> <i>Projection</i> - Specifies attributes that are copied (projected) from the
            table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each
            attribute specification is composed of: <ul> <li> <i>ProjectionType</i> - One of the following: <ul> <li> <c>KEYS_ONLY</c> - Only the index
            and primary keys are projected into the index. </li> <li> <c>INCLUDE</c> - Only the specified table attributes are projected into the index.
            The list of projected attributes are in <i>NonKeyAttributes</i>. </li> <li> <c>ALL</c> - All of the table attributes are projected into the
            index. </li> </ul> </li> <li> <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are projected into the secondary
            index. The total count of attributes specified in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed 20.
            If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. </li> </ul>
            </li> <li> <i>IndexSizeBytes</i> - Represents the total size of the index, in bytes. DynamoDB updates this value approximately every six
            hours. Recent changes might not be reflected in this value.</li> <li> <i>ItemCount</i> - Represents the number of items in the index.
            DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. </li> </ul> If the table is
            in the <c>DELETING</c> state, no information about indexes will be returned.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.GlobalSecondaryIndexes">
            <summary>
            The global secondary indexes, if any, on the table. Each index is scoped to a given hash key value. Each element is composed of: <ul> <li>
            <i>IndexName</i> - The name of the global secondary index. </li> <li> <i>IndexSizeBytes</i> - The total size of the global secondary index,
            in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. </li> <li>
            <i>IndexStatus</i> - The current status of the global secondary index: <ul> <li> <i>CREATING</i> - The index is being created. </li> <li>
            <i>UPDATING</i> - The index is being updated. </li> <li> <i>DELETING</i> - The index is being deleted. </li> <li> <i>ACTIVE</i> - The index
            is ready for use. </li> </ul> </li> <li> <i>ItemCount</i> - The number of items in the global secondary index. DynamoDB updates this value
            approximately every six hours. Recent changes might not be reflected in this value. </li> <li> <i>KeySchema</i> - Specifies the complete
            index key schema. The attribute names in the key schema must be between 1 and 255 characters (inclusive). The key schema must begin with the
            same hash key attribute as the table. </li> <li> <i>Projection</i> - Specifies attributes that are copied (projected) from the table into
            the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute
            specification is composed of: <ul> <li> <i>ProjectionType</i> - One of the following: <ul> <li> <c>KEYS_ONLY</c> - Only the index and
            primary keys are projected into the index. </li> <li> <c>INCLUDE</c> - Only the specified table attributes are projected into the index. The
            list of projected attributes are in <i>NonKeyAttributes</i>. </li> <li> <c>ALL</c> - All of the table attributes are projected into the
            index. </li> </ul> </li> <li> <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are projected into the secondary
            index. The total count of attributes specified in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed 20.
            If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. </li> </ul>
            </li> <li> <i>ProvisionedThroughput</i> - The provisioned throughput settings for the global secondary index, consisting of read and write
            capacity units, along with data about increases and decreases. </li> </ul> If the table is in the <c>DELETING</c> state, no information
            about indexes will be returned.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction">
            <summary>
            <para>Represents the new provisioned throughput settings to be applied to a global secondary index.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction.IndexName">
            <summary>
            The name of the global secondary index to be updated.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the <i>UpdateTable</i>
            operation. For current minimum and maximum provisioned throughput values, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a> in the Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemRequest">
            <summary>
            Container for the parameters to the UpdateItem operation.
            <para> Edits an existing item's attributes, or inserts a new item if it does not already exist. You can put, delete, or add attribute
            values. You can also perform a conditional update (insert a new attribute name-value pair if it doesn't exist, or replace an existing
            name-value pair if it has certain expected attribute values).</para> <para>In addition to updating an item, you can also return the item's
            attribute values in the same operation, using the <i>ReturnValues</i> parameter.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.TableName">
            <summary>
            The name of the table containing the item to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.Key">
            <summary>
            The primary key that defines the item. Each element consists of an attribute name and a value for that attribute.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.AttributeUpdates">
            <summary>
            The names of attributes to be modified, the action to perform on each, and the new value for each. If you are updating an attribute that is
            an index key attribute for any indexes on that table, the attribute type must match the index key type defined in the
            <i>AttributesDefinition</i> of the table description. You can use <i>UpdateItem</i> to update any non-key attributes. Attribute values
            cannot be null. String and binary type attributes must have lengths greater than zero. Set type attributes must not be empty. Requests with
            empty values will be rejected with a <i>ValidationException</i>. Each <i>AttributeUpdates</i> element consists of an attribute name to
            modify, along with the following: <ul> <li> <i>Value</i> - The new value, if applicable, for this attribute. </li> <li> <i>Action</i> -
            Specifies how to perform the update. Valid values for <i>Action</i> are <c>PUT</c>, <c>DELETE</c>, and <c>ADD</c>. The behavior depends on
            whether the specified primary key already exists in the table. <b>If an item with the specified <i>Key</i> is found in the table:</b> <ul>
            <li> <c>PUT</c> - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. </li> <li>
            <c>DELETE</c> - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must
            match the existing value's data type. If a <i>set</i> of values is specified, then those values are subtracted from the old set. For
            example, if the attribute value was the set <c>[a,b,c]</c> and the <i>DELETE</i> action specified <c>[a,c]</c>, then the final attribute
            value would be <c>[b]</c>. Specifying an empty set is an error. </li> <li> <c>ADD</c> - If the attribute does not already exist, then the
            attribute and its values are added to the item. If the attribute does exist, then the behavior of <c>ADD</c> depends on the data type of the
            attribute: <ul> <li> If the existing attribute is a number, and if <i>Value</i> is also a number, then the <i>Value</i> is mathematically
            added to the existing attribute. If <i>Value</i> is a negative number, then it is subtracted from the existing attribute. <note> If you use
            <c>ADD</c> to increment or decrement a number value for an item that doesn't exist before the update, DynamoDB uses 0 as the initial value.
            In addition, if you use <c>ADD</c> to update an existing item, and intend to increment or decrement an attribute value which does not yet
            exist, DynamoDB uses <c>0</c> as the initial value. For example, suppose that the item you want to update does not yet have an attribute
            named <i>itemcount</i>, but you decide to <c>ADD</c> the number <c>3</c> to this attribute anyway, even though it currently does not exist.
            DynamoDB will create the <i>itemcount</i> attribute, set its initial value to <c>0</c>, and finally add <c>3</c> to it. The result will be a
            new <i>itemcount</i> attribute in the item, with a value of <c>3</c>. </note> </li> <li> If the existing data type is a set, and if the
            <i>Value</i> is also a set, then the <i>Value</i> is added to the existing set. (This is a <i>set</i> operation, not mathematical addition.)
            For example, if the attribute value was the set <c>[1,2]</c>, and the <c>ADD</c> action specified <c>[3]</c>, then the final attribute value
            would be <c>[1,2,3]</c>. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match
            the existing set type. Both sets must have the same primitive data type. For example, if the existing data type is a set of strings, the
            <i>Value</i> must also be a set of strings. The same holds true for number sets and binary sets. </li> </ul> This action is only valid for
            an existing attribute whose data type is number or is a set. Do not use <c>ADD</c> for any other data types. </li> </ul> <b>If no item with
            the specified <i>Key</i> is found:</b> <ul> <li> <c>PUT</c> - DynamoDB creates a new item with the specified primary key, and then adds the
            attribute. </li> <li> <c>DELETE</c> - Nothing happens; there is no attribute to delete. </li> <li> <c>ADD</c> - DynamoDB creates an item
            with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set;
            no other data types can be specified. </li> </ul> </li> </ul> If you specify any attributes that are part of an index key, then the data
            types for those attributes must match those of the schema in the table's attribute definition.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.Expected">
            <summary>
            A map of attribute/condition pairs. This is the conditional block for the <i>UpdateItem</i> operation. All the conditions must evaluate to
            true for the operation to succeed. <i>Expected</i> allows you to provide an attribute name, and whether or not DynamoDB should check to see
            if the attribute value already exists; or if the attribute value exists and has a particular value before changing it. Each item in
            <i>Expected</i> represents an attribute name for DynamoDB to check, along with the following: <ul> <li> <i>Value</i> - A value for DynamoDB
            to compare with an attribute. When performing the comparison, strongly consistent reads are used. </li> <li> <i>Exists</i> - Causes DynamoDB
            to evaluate the value before attempting a conditional operation: <ul> <li> If <i>Exists</i> is <c>true</c>, DynamoDB will check to see if
            that attribute value already exists in the table. If it is found, then the operation succeeds. If it is not found, the operation fails with
            a <i>ConditionalCheckFailedException</i>. </li> <li> If <i>Exists</i> is <c>false</c>, DynamoDB assumes that the attribute value does
            <i>not</i> exist in the table. If in fact the value does not exist, then the assumption is valid and the operation succeeds. If the value is
            found, despite the assumption that it does not exist, the operation fails with a <i>ConditionalCheckFailedException</i>. </li> </ul> The
            default setting for <i>Exists</i> is <c>true</c>. If you supply a <i>Value</i> all by itself, DynamoDB assumes the attribute exists: You
            don't have to set <i>Exists</i> to <c>true</c>, because it is implied. DynamoDB returns a <i>ValidationException</i> if: <ul> <li>
            <i>Exists</i> is <c>true</c> but there is no <i>Value</i> to check. (You expect a value to exist, but don't specify what that value is.)
            </li> <li> <i>Exists</i> is <c>false</c> but you also specify a <i>Value</i>. (You cannot expect an attribute to have a value, while also
            expecting it not to exist.) </li> </ul> </li> </ul> If you specify more than one condition in the <i>Expected</i> map, then by default all
            of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the <i>ConditionalOperator</i>
            parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to true, rather than all of them.)
            If <i>Expected</i> evaluates to true, then the conditional operation succeeds; otherwise, it fails.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the <i>Expected</i> map: <ul> <li><c>AND</c> - If <i>all</i> of the conditions evaluate to
            true, then the entire map evaluates to true.</li> <li><c>OR</c> - If <i>at least one</i> of the conditions evaluate to true, then the entire
            map evaluates to true.</li> </ul> If you omit <i>ConditionalOperator</i>, then <c>AND</c> is used as the default. The operation will succeed
            only if the entire map evaluates to true.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>AND, OR</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnValues">
            <summary>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared either before or after they were updated. For
            <i>UpdateItem</i>, the valid values are: <ul> <li> <c>NONE</c> - If <i>ReturnValues</i> is not specified, or if its value is <c>NONE</c>,
            then nothing is returned. (This is the default for <i>ReturnValues</i>.) </li> <li> <c>ALL_OLD</c> - If <i>UpdateItem</i> overwrote an
            attribute name-value pair, then the content of the old item is returned. </li> <li> <c>UPDATED_OLD</c> - The old versions of only the
            updated attributes are returned. </li> <li> <c>ALL_NEW</c> - All of the attributes of the new version of the item are returned. </li> <li>
            <c>UPDATED_NEW</c> - The new versions of only the updated attributes are returned. </li> </ul>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnConsumedCapacity">
            <summary>
            If set to <c>TOTAL</c>, the response includes <i>ConsumedCapacity</i> data for tables and indexes. If set to <c>INDEXES</c>, the response
            includes <i>ConsumedCapacity</i> for indexes. If set to <c>NONE</c> (the default), <i>ConsumedCapacity</i> is not included in the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>INDEXES, TOTAL, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnItemCollectionMetrics">
            <summary>
            If set to <c>SIZE</c>, statistics about item collections, if any, that were modified during the operation are returned in the response. If
            set to <c>NONE</c> (the default), no statistics are returned.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>SIZE, NONE</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemResponse">
            <summary>
            Returns information about the  UpdateItem response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemResult">
            <summary>
            <para>Represents the output of an <i>UpdateItem</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.Attributes">
            <summary>
            A map of attribute values as they appeared before the <i>UpdateItem</i> operation, but only if <i>ReturnValues</i> was specified as
            something other than <c>NONE</c> in the request. Each element represents one attribute.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with
            statistics for the table and any indexes involved in the operation. <i>ConsumedCapacity</i> is only returned if it was asked for in the
            request. For more information, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned Throughput</a> in the
            Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.ItemCollectionMetrics">
            <summary>
            Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i> is only returned if it was
            asked for in the request. If the table does not have any local secondary indexes, this information is not returned in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResponse.UpdateItemResult">
            <summary>
            Gets and sets the UpdateItemResult property.
            Represents the output of an UpdateItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableRequest">
            <summary>
            Container for the parameters to the UpdateTable operation.
            <para>Updates the provisioned throughput for the given table. Setting the throughput for a table helps you manage performance and is part of
            the provisioned throughput feature of DynamoDB.</para> <para>The provisioned throughput values can be upgraded or downgraded based on the
            maximums and minimums listed in the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html" >Limits</a>
            section in the Amazon DynamoDB Developer Guide.</para> <para>The table must be in the <c>ACTIVE</c> state for this operation to succeed.
            <i>UpdateTable</i> is an asynchronous operation; while executing the operation, the table is in the <c>UPDATING</c> state. While the table
            is in the <c>UPDATING</c> state, the table still has the provisioned throughput from before the call. The new provisioned throughput setting
            is in effect only when the table returns to the <c>ACTIVE</c> state after the <i>UpdateTable</i> operation. </para> <para>You cannot add,
            modify or delete indexes using <i>UpdateTable</i> . Indexes can only be defined at table creation time.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.TableName">
            <summary>
            The name of the table to be updated.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 255</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[a-zA-Z0-9_.-]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the <i>UpdateTable</i>
            operation. For current minimum and maximum provisioned throughput values, see <a
            href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a> in the Amazon DynamoDB Developer Guide.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.GlobalSecondaryIndexUpdates">
            <summary>
            An array of one or more global secondary indexes on the table, together with provisioned throughput settings for each index.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableResponse">
            <summary>
            Returns information about the  UpdateTable response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableResult">
            <summary>
            <para>Represents the output of an <i>UpdateTable</i> operation.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableResult.TableDescription">
            <summary>
            Represents the properties of a table.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableResponse.UpdateTableResult">
            <summary>
            Gets and sets the UpdateTableResult property.
            Represents the output of an UpdateTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.WriteRequest">
            <summary>
            <para>Represents an operation to perform - either <i>DeleteItem</i> or <i>PutItem</i> . You can only specify one of these operations, not
            both, in a single <i>WriteRequest</i> . If you do need to perform both of these operations, you will need to specify two separate
            <i>WriteRequest</i> objects.</para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.WriteRequest.PutRequest">
            <summary>
            A request to perform a <i>PutItem</i> operation.
             
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.WriteRequest.DeleteRequest">
            <summary>
            A request to perform a <i>DeleteItem</i> operation.
             
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Document">
            <summary>
            A collection of attribute key-value pairs that defines
            an item in DynamoDB.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.#ctor">
            <summary>
            Constructs an empty Document.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Constructs a Document with the passed-in values as its attribute values.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.IsAttributeChanged(System.String)">
            <summary>
            Returns true if the attribute has been changed.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>True if the attribute has been changed.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.IsDirty">
            <summary>
            Returns true if the document contains attributes that have not been saved.
            </summary>
            <returns>True if the document contains attributes that have not been saved.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.TryGetValue(System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry@)">
            <summary>
            Gets the value associated with the specified attribute value.
            </summary>
            <param name="attributeName">Attribute name</param>
            <param name="entry">
            If the specified attribute value is found, returns the value associated with the 
            attribute; otherwise, null.
            </param>
            <returns>True if attribute is found; false otherwise</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.Contains(System.String)">
            <summary>
            Determines if a specific attribute is set on the Document.
            </summary>
            <param name="attributeName">Attribute name</param>
            <returns>Returns true if the specified attribute is found; false otherwise.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToAttributeMap">
            <summary>
            Creates a map of attribute names mapped to AttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToExpectedAttributeMap">
            <summary>
            Creates a map of attribute names mapped to ExpectedAttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToAttributeUpdateMap(System.Boolean)">
            <summary>
            Creates a map of attribute names mapped to AttributeValueUpdate objects.
            </summary>
            <param name="changedAttributesOnly">If true, only attributes that have been changed will be in the map.</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.GetAttributeNames">
            <summary>
            Returns the names of all the attributes.
            </summary>
            <returns>List of attribute names.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.FromAttributeMap(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Creates a Document from an attribute map.
            </summary>
            <param name="data">Map of attribute names to attribute values.</param>
            <returns>Document representing the data.</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Document.Item(System.String)">
            <summary>
            Attribute accessor, allows getting or setting of an individual attribute.
            </summary>
            <param name="key">Name of the attribute.</param>
            <returns>Current value of the attribute.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet">
            <summary>
            Class for retrieving a batch of Documents from a single DynamoDB table.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from a single DynamoDB table.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from a single DynamoDB table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.#ctor(Amazon.DynamoDBv2.DocumentModel.Table)">
            <summary>
            Constructs a DocumentBatchGet instance for a specific table.
            </summary>
            <param name="targetTable">Table to get items from.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to get, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to get, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to get.</param>
            <param name="rangeKey">Range key element of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Add a single item to get, identified by its key.
            </summary>
            <param name="key">Key of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Combine(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet)">
            <summary>
            Creates a MultiTableDocumentBatchGet object that is a combination
            of the current DocumentBatchGet and the specified DocumentBatchGet.
            </summary>
            <param name="otherBatch">Other DocumentBatchGet object.</param>
            <returns>
            MultiTableDocumentBatchGet consisting of the two DocumentBatchGet
            objects.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Execute">
            <summary>
            Executes a server call to batch-get the documents requested.
            Populates Results with the retrieved items.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AttributesToGet">
            <summary>
            List of attributes to retrieve.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.ConsistentRead">
            <summary>
            If set to true, a consistent read is issued. Otherwise eventually-consistent is used.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet">
            <summary>
            Class for retrieving a batch of Documents from multiple DynamoDB tables.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from multiple DynamoDB tables.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from multiple DynamoDB tables.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.#ctor(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet[])">
            <summary>
            Constructs a MultiTableDocumentBatchGet object from a number of
            DocumentBatchGet objects.
            </summary>
            <param name="batches">Collection of DocumentBatchGet objects.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.AddBatch(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet)">
            <summary>
            Add a DocumentBatchGet object to the multi-table batch request.
            </summary>
            <param name="batch">DocumentBatchGet to add.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.Execute">
            <summary>
            Executes a multi-table batch request against all configured batches.
            Results are stored in the respective DocumentBatchGet objects.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.Batches">
            <summary>
            List of DocumentBatchGet objects to include in the multi-table
            batch request.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.TotalKeys">
            <summary>
            Total number of primary keys in the multi-table batch request.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet">
            <summary>
            Internal class for handling multi-table batch gets.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.MaxItemsPerCall">
            <summary>
            Maximum number of items that can be sent in a single BatchGet request
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.GetItems">
            <summary>
            Gets items ocnfigured in Batches from the server
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.Batches">
            <summary>
            Batches that comprise the current BatchGet operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite">
            <summary>
            Class for putting and/or deleting a batch of items in a single DynamoDB table.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in a single DynamoDB table.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in a single DynamoDB table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.#ctor(Amazon.DynamoDBv2.DocumentModel.Table)">
            <summary>
            Constructs a DocumentBatchWrite instance for a specific table.
            </summary>
            <param name="targetTable">Table to get items from.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to delete, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to delete, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to delete.</param>
            <param name="rangeKey">Range key element of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Add a single item to delete, identified by its key.
            </summary>
            <param name="key">Key of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddItemToDelete(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Add a single item to delete, identified by a Document object.
            </summary>
            <param name="document">Document representing the item to be deleted.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddDocumentToPut(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Add a single Document to put.
            </summary>
            <param name="document">Document to put.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.Combine(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite)">
            <summary>
            Creates a MultiTableDocumentBatchWrite object that is a combination
            of the current DocumentBatchWrite and the specified DocumentBatchWrite.
            </summary>
            <param name="otherBatch">Other DocumentBatchWrite object.</param>
            <returns>
            MultiTableDocumentBatchWrite consisting of the two DocumentBatchWrite
            objects.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.Execute">
            <summary>
            Executes a server call to batch-put/delete the item specified.
            
            If more than 25 put/delete operations are specified, calls of up to 25
            put/delete items will be made until all items are processed.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite">
            <summary>
            Class for putting and/or deleting a batch of items in multiple DynamoDB tables.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in multiple DynamoDB tables.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in multiple DynamoDB tables.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.#ctor(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite[])">
            <summary>
            Constructs a MultiTableDocumentBatchWrite object from a number of
            DocumentBatchWrite objects.
            </summary>
            <param name="batches">Collection of DocumentBatchWrite objects.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.AddBatch(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite)">
            <summary>
            Add a DocumentBatchWrite object to the multi-table batch request.
            </summary>
            <param name="batch">DocumentBatchWrite to add.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.Execute">
            <summary>
            Executes a multi-table batch put/delete against all configured batches.
            
            If more than 25 put/delete operations are specified, calls of up to 25
            put/delete items will be made until all items are processed.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.Batches">
            <summary>
            List of DocumentBatchWrite objects to include in the multi-table
            batch request.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite">
            <summary>
            Internal class for handling multi-table batch writes.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.MaxItemsPerCall">
            <summary>
            Maximum number of items that can be sent in a single BatchWrite request
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.tableMap">
            <summary>
            Map which stores tables by its name.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.WriteItems(System.Boolean)">
            <summary>
            Pushes items configured in Batches to the server
            </summary>
            <param name="isAsync"></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.Batches">
            <summary>
            Batches that comprise the current BatchWrite operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType">
            <summary>
            Enumerator describing type of DynamoDB data
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Abstract class representing an arbitrary DynamoDB attribute value
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsPrimitive">
            <summary>
            Convert DynamoDBEntry to Primitive
            </summary>
            <returns>
            Primitive if DynamoDBEntry is of Primitive type; otherwise null
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsPrimitiveList">
            <summary>
            Convert DynamoDBEntry to PrimitiveList
            </summary>
            <returns>
            AsPrimitiveList if DynamoDBEntry is of AsPrimitiveList type; otherwise null
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsBoolean">
            <summary>
            Explicitly convert DynamoDBEntry to Boolean
            </summary>
            <returns>Boolean value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Boolean)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Boolean to DynamoDBEntry
            </summary>
            <param name="data">Boolean data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Boolean">
            <summary>
            Explicitly convert DynamoDBEntry to Boolean
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Boolean value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsByte">
            <summary>
            Explicitly convert DynamoDBEntry to Byte
            </summary>
            <returns>Byte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Byte)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Byte to DynamoDBEntry
            </summary>
            <param name="data">Byte data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Byte">
            <summary>
            Explicitly convert DynamoDBEntry to Byte
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Byte value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsSByte">
            <summary>
            Explicitly convert DynamoDBEntry to SByte
            </summary>
            <returns>SByte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.SByte)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert SByte to DynamoDBEntry
            </summary>
            <param name="data">SByte data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.SByte">
            <summary>
            Explicitly convert DynamoDBEntry to SByte
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>SByte value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsUShort">
            <summary>
            Explicitly convert DynamoDBEntry to UInt16
            </summary>
            <returns>UInt16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt16)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt16 to DynamoDBEntry
            </summary>
            <param name="data">UInt16 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt16">
            <summary>
            Explicitly convert DynamoDBEntry to UInt16
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt16 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsShort">
            <summary>
            Explicitly convert DynamoDBEntry to Int16
            </summary>
            <returns>Int16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int16)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int16 to DynamoDBEntry
            </summary>
            <param name="data">Int16 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int16">
            <summary>
            Explicitly convert DynamoDBEntry to Int16
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int16 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsUInt">
            <summary>
            Explicitly convert DynamoDBEntry to UInt32
            </summary>
            <returns>UInt32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt32)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt32 to DynamoDBEntry
            </summary>
            <param name="data">UInt32 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt32">
            <summary>
            Explicitly convert DynamoDBEntry to UInt32
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt32 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsInt">
            <summary>
            Explicitly convert DynamoDBEntry to Int32
            </summary>
            <returns>Int32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int32)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int32 to DynamoDBEntry
            </summary>
            <param name="data">Int32 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int32">
            <summary>
            Explicitly convert DynamoDBEntry to Int32
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int32 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsULong">
            <summary>
            Explicitly convert DynamoDBEntry to UInt64
            </summary>
            <returns>UInt64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt64)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt64 to DynamoDBEntry
            </summary>
            <param name="data">UInt64 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt64">
            <summary>
            Explicitly convert DynamoDBEntry to UInt64
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt64 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsLong">
            <summary>
            Explicitly convert DynamoDBEntry to Int64
            </summary>
            <returns>Int64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int64)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int64 to DynamoDBEntry
            </summary>
            <param name="data">Int64 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int64">
            <summary>
            Explicitly convert DynamoDBEntry to Int64
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int64 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsSingle">
            <summary>
            Explicitly convert DynamoDBEntry to Single
            </summary>
            <returns>Single value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Single)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Single to DynamoDBEntry
            </summary>
            <param name="data">Single data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Single">
            <summary>
            Explicitly convert DynamoDBEntry to Single
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Single value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDouble">
            <summary>
            Explicitly convert DynamoDBEntry to Double
            </summary>
            <returns>Double value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Double)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Double to DynamoDBEntry
            </summary>
            <param name="data">Double data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Double">
            <summary>
            Explicitly convert DynamoDBEntry to Double
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Double value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDecimal">
            <summary>
            Explicitly convert DynamoDBEntry to Decimal
            </summary>
            <returns>Decimal value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Decimal)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Decimal to DynamoDBEntry
            </summary>
            <param name="data">Decimal data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Decimal">
            <summary>
            Explicitly convert DynamoDBEntry to Decimal
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Decimal value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsChar">
            <summary>
            Explicitly convert DynamoDBEntry to Char
            </summary>
            <returns>Char value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Char)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Char to DynamoDBEntry
            </summary>
            <param name="data">Char data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Char">
            <summary>
            Explicitly convert DynamoDBEntry to Char
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Char value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsString">
            <summary>
            Explicitly convert DynamoDBEntry to String
            </summary>
            <returns>String value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.String)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert String to DynamoDBEntry
            </summary>
            <param name="data">String data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.String">
            <summary>
            Explicitly convert DynamoDBEntry to String
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>String value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDateTime">
            <summary>
            Explicitly convert DynamoDBEntry to DateTime
            </summary>
            <returns>DateTime value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.DateTime)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert DateTime to DynamoDBEntry
            </summary>
            <param name="data">DateTime data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.DateTime">
            <summary>
            Explicitly convert DynamoDBEntry to DateTime
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>DateTime value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsGuid">
            <summary>
            Explicitly convert DynamoDBEntry to Guid
            </summary>
            <returns>Guid value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Guid)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Guid to DynamoDBEntry
            </summary>
            <param name="data">Guid data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Guid">
            <summary>
            Explicitly convert DynamoDBEntry to Guid
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Guid value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsByteArray">
            <summary>
            Explicitly convert DynamoDBEntry to byte[]
            </summary>
            <returns>byte[] value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Byte[])~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert byte[] to DynamoDBEntry
            </summary>
            <param name="data">byte[] data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Byte[]">
            <summary>
            Explicitly convert DynamoDBEntry to byte[]
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>byte[] value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsMemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to MemoryStream
            </summary>
            <returns>MemoryStream value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.IO.MemoryStream)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert MemoryStream to DynamoDBEntry
            </summary>
            <param name="data">MemoryStream data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.IO.MemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to MemoryStream
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>MemoryStream value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfPrimitives">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;Primitive&gt;
            </summary>
            <returns>List&lt;Primitive&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;Primitive&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;Primitive&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;Primitive&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;Primitive&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfString">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;String&gt;
            </summary>
            <returns>List&lt;String&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.String})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;String&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;String&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.String}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;String&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;String&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfByteArray">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;byte[]&gt;
            </summary>
            <returns>List&lt;byte[]&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.Byte[]})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;byte[]&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;byte[]&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.Byte[]}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;byte[]&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;byte[]&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfMemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;MemoryStream&gt;
            </summary>
            <returns>List&lt;MemoryStream&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.IO.MemoryStream})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;MemoryStream&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;MemoryStream&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.IO.MemoryStream}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;MemoryStream&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;MemoryStream&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ExpectedValue">
            <summary>
            Expected state of an attribute in DynamoDB.
            Exists cannot be set at the same time as Comparison and Values.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.#ctor(System.Boolean)">
            <summary>
            Constructs an ExpectedValue with a given Exists value.
            </summary>
            <param name="exists">
            Flag whether the attribute should exist or not.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.#ctor(Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.Primitive[])">
            <summary>
            Constructs an ExpectedValue with a given comparison and value(s).
            </summary>
            <param name="comparison"></param>
            <param name="values"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.ToExpectedAttributeValue">
            <summary>
            Converts this ExpectedValue instance to Amazon.DynamoDBv2.Model.ExpectedAttributeValue
            </summary>
            <returns>Amazon.DynamoDBv2.Model.ExpectedAttributeValue</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Exists">
            <summary>
            Flag whether the attribute should exist or not.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Comparison">
            <summary>
            Comparison operator for the expected value.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Values">
            <summary>
            Values to compare the attribute against.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ExpectedState">
            <summary>
            Expected state of an item in DynamoDB.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.#ctor">
            <summary>
            Constructs an empty ExpectedState with ConditionalOeprator set to AND.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.AddExpected(System.String,System.Boolean)">
            <summary>
            Adds an ExpectedValue with the specific Exists value for the attribute.
            </summary>
            <param name="attributeName">Attribute that is being tested</param>
            <param name="exists">Flag whether the attribute should exist or not.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.AddExpected(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.Primitive[])">
            <summary>
            Adds an ExpectedValue with the specific Comparison and Values for the attribute.
            </summary>
            <param name="attributeName">Attribute that is being tested</param>
            <param name="comparison">Comparison operator for the expected value.</param>
            <param name="values">Values to compare the attribute against.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ToExpectedAttributeMap">
            <summary>
            Creates a map of attribute names mapped to ExpectedAttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ExpectedValues">
            <summary>
            Attribute name to ExpectedValue mapping.
            Represents the expected state of a number of attributes of a DynamoDB item.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ConditionalOperator">
            <summary>
            Operator dictating whether ALL or SOME of the expected values must be true to
            satisfy the overall expected state.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Filter">
            <summary>
            Filter for use with scan and query operations
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.ToConditions">
            <summary>
            Converts filter to a map of conditions
            </summary>
            <returns>Map from attribute name to condition</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.FromConditions(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition})">
            <summary>
            Creates a Filter from a conditions map
            </summary>
            <param name="conditions">Map from attribute name to condition</param>
            <returns>Equivalent Filter</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.op_Implicit(Amazon.DynamoDBv2.DocumentModel.Filter)~System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition}">
            <summary>
            Implicitly converts Filter to map of conditions
            </summary>
            <param name="f">Filter to convert</param>
            <returns>Map from attribute name to condition</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.op_Implicit(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition})~Amazon.DynamoDBv2.DocumentModel.Filter">
            <summary>
            Implicitly converts map of conditions to Filter
            </summary>
            <param name="conditions">Map from attribute name to condition</param>
            <returns>Equivalent Filter</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.AddCondition(System.String,Amazon.DynamoDBv2.Model.Condition)">
            <summary>
            Adds a condition for a specified attribute.
            
            If a condition for the attribute already exists,
            it will be replaced with the new condition.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="condition">Condition to be added</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.RemoveCondition(System.String)">
            <summary>
            Removes a condition for a specific attribute name.
            </summary>
            <param name="attributeName">Target attribute</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanFilter">
            <summary>
            Scan filter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified attribute that consists
            of an operator and any number of values
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryFilter">
            <summary>
            Query filter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor">
            <summary>
            Constructs an empty QueryFilter instance
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Constructs an instance of QueryFilter with a single condition.
            More conditions can be added after initialization.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Attributes to compare</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Constructs an instance of QueryFilter with a single condition.
            More conditions can be added after initialization.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Attributes to compare</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified key attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="keyAttributeName">Target key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified key attribute that consists
            of an operator and any number of values
            </summary>
            <param name="keyAttributeName">Target key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified non-key attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="nonKeyAttributeName">Target non-key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified non-key attribute that consists
            of an operator and any number of values
            </summary>
            <param name="nonKeyAttributeName">Target non-key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            A DynamoDBEntry that represents a primitive DynamoDB type
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor">
            <summary>
            Constructs an empty Primitive
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.String)">
            <summary>
            Constructs a Primitive with the specified value.
            Value is stored as a string, not numeric.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a Primitive with the specified value
            and specifies whether it should be stored as a number or not.
            </summary>
            <param name="value">Value of the Primitive</param>
            <param name="saveAsNumeric">
            Flag, set to true if value should be treated as a number instead of a string
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.IO.MemoryStream)">
            <summary>
            Constructs a Binary Primitive with the specified MemoryStream value.
            Note: Primitive's Value is set to the stream's ToArray() response.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.Byte[])">
            <summary>
            Constructs a Binary Primitive with the specified byte[] value.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsBoolean">
            <summary>
            Explicitly convert Primitive to Boolean
            </summary>
            <returns>Boolean value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Boolean)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Boolean to Primitive
            </summary>
            <param name="data">Boolean data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Boolean">
            <summary>
            Explicitly convert Primitive to Boolean
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Boolean value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsByte">
            <summary>
            Explicitly convert Primitive to Byte
            </summary>
            <returns>Byte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Byte)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Byte to Primitive
            </summary>
            <param name="data">Byte data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Byte">
            <summary>
            Explicitly convert Primitive to Byte
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Byte value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsSByte">
            <summary>
            Explicitly convert Primitive to SByte
            </summary>
            <returns>SByte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.SByte)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert SByte to Primitive
            </summary>
            <param name="data">SByte data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.SByte">
            <summary>
            Explicitly convert Primitive to SByte
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>SByte value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsUShort">
            <summary>
            Explicitly convert Primitive to UInt16
            </summary>
            <returns>UInt16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt16)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt16 to Primitive
            </summary>
            <param name="data">UInt16 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt16">
            <summary>
            Explicitly convert Primitive to UInt16
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt16 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsShort">
            <summary>
            Explicitly convert Primitive to Int16
            </summary>
            <returns>Int16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int16)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int16 to Primitive
            </summary>
            <param name="data">Int16 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int16">
            <summary>
            Explicitly convert Primitive to Int16
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int16 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsUInt">
            <summary>
            Explicitly convert Primitive to UInt32
            </summary>
            <returns>UInt32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt32)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt32 to Primitive
            </summary>
            <param name="data">UInt32 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt32">
            <summary>
            Explicitly convert Primitive to UInt32
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt32 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsInt">
            <summary>
            Explicitly convert Primitive to Int32
            </summary>
            <returns>Int32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int32)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int32 to Primitive
            </summary>
            <param name="data">Int32 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int32">
            <summary>
            Explicitly convert Primitive to Int32
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int32 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsULong">
            <summary>
            Explicitly convert Primitive to UInt64
            </summary>
            <returns>UInt64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt64)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt64 to Primitive
            </summary>
            <param name="data">UInt64 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt64">
            <summary>
            Explicitly convert Primitive to UInt64
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt64 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsLong">
            <summary>
            Explicitly convert Primitive to Int64
            </summary>
            <returns>Int64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int64)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int64 to Primitive
            </summary>
            <param name="data">Int64 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int64">
            <summary>
            Explicitly convert Primitive to Int64
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int64 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsSingle">
            <summary>
            Explicitly convert Primitive to Single
            </summary>
            <returns>Single value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Single)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Single to Primitive
            </summary>
            <param name="data">Single data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Single">
            <summary>
            Explicitly convert Primitive to Single
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Single value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDouble">
            <summary>
            Explicitly convert Primitive to Double
            </summary>
            <returns>Double value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Double)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Double to Primitive
            </summary>
            <param name="data">Double data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Double">
            <summary>
            Explicitly convert Primitive to Double
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Double value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDecimal">
            <summary>
            Explicitly convert Primitive to Decimal
            </summary>
            <returns>Decimal value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Decimal)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Decimal to Primitive
            </summary>
            <param name="data">Decimal data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Decimal">
            <summary>
            Explicitly convert Primitive to Decimal
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Decimal value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsChar">
            <summary>
            Explicitly convert Primitive to Char
            </summary>
            <returns>Char value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Char)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Char to Primitive
            </summary>
            <param name="data">Char data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Char">
            <summary>
            Explicitly convert Primitive to Char
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Char value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsString">
            <summary>
            Explicitly convert Primitive to String
            </summary>
            <returns>String value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.String)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert String to Primitive
            </summary>
            <param name="data">String data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.String">
            <summary>
            Explicitly convert Primitive to String
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>String value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDateTime">
            <summary>
            Explicitly convert Primitive to DateTime
            </summary>
            <returns>DateTime value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.DateTime)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert DateTime to Primitive
            </summary>
            <param name="data">DateTime data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.DateTime">
            <summary>
            Explicitly convert Primitive to DateTime
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>DateTime value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsGuid">
            <summary>
            Explicitly convert Primitive to Guid
            </summary>
            <returns>Guid value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Guid)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Guid to Primitive
            </summary>
            <param name="data">Guid data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Guid">
            <summary>
            Explicitly convert Primitive to Guid
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Guid value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsByteArray">
            <summary>
            Explicitly convert Primitive to byte[]
            </summary>
            <returns>byte[] value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Byte[])~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert byte[] to Primitive
            </summary>
            <param name="data">byte[] data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Byte[]">
            <summary>
            Explicitly convert Primitive to byte[]
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>byte[] value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsMemoryStream">
            <summary>
            Explicitly convert Primitive to MemoryStream
            </summary>
            <returns>MemoryStream value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.IO.MemoryStream)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert MemoryStream to Primitive
            </summary>
            <param name="data">MemoryStream data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.IO.MemoryStream">
            <summary>
            Explicitly convert Primitive to MemoryStream
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>MemoryStream value of Primitive</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Primitive.Value">
            <summary>
            Value of the Primitive.
            If Type is String or Numeric, this property is a string.
            If Type is Binary, this property is a byte array.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Primitive.Type">
            <summary>
            Type of this primitive object
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            A DynamoDBEntry that represents a primitive list DynamoDB type
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.#ctor">
            <summary>
            Constructs an empty PrimitiveList.
            Values are configured to be saved as strings.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.#ctor(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType)">
            <summary>
            Constructs an empty PrimitiveList and specifies
            the type of its elements.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Add(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Adds a Primitive to the end of the list.
            </summary>
            <param name="value">Primitive to add.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfPrimitives">
            <summary>
            Explicitly convert PrimitiveList to List&lt;Primitive&gt;
            </summary>
            <returns>List&lt;Primitive&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;Primitive&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;Primitive&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;Primitive&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;Primitive&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfString">
            <summary>
            Explicitly convert PrimitiveList to List&lt;String&gt;
            </summary>
            <returns>List&lt;String&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.String})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;String&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;String&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.String}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;String&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;String&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfByteArray">
            <summary>
            Explicitly convert PrimitiveList to byte[]
            </summary>
            <returns>List&lt;byte[]&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.Byte[]})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;byte[]&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;byte[]&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.Byte[]}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;byte[]&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;byte[]&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfMemoryStream">
            <summary>
            Explicitly convert PrimitiveList to List&lt;MemoryStream&gt;
            </summary>
            <returns>List&lt;MemoryStream&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.IO.MemoryStream})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;MemoryStream&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;MemoryStream&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.IO.MemoryStream}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;MemoryStream&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;MemoryStream&gt; value of PrimitiveList</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Entries">
            <summary>
            Collection of Primitive entries
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Type">
            <summary>
            Type of Primitive items in the list
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Item(System.Int32)">
            <summary>
            Gets or sets Primitive at a specific location in the list.
            </summary>
            <param name="i">Index of the Primitive in question.</param>
            <returns>Primitive in question.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Search">
            <summary>
            Search response object
            </summary>
            <summary>
            Search response object
            </summary>
            <summary>
            Search response object
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.Reset">
            <summary>
            Resets the Search object to default state.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetNextSetAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetNextSet operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Search.GetNextSet"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetRemainingAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRemaining operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Search.GetRemaining"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetNextSet">
            <summary>
            Retrieves the next set (page) of results
            </summary>
            <returns>Next set of Documents matching the search parameters</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetRemaining">
            <summary>
            Retrieves all the remaining results
            </summary>
            <returns>List of Documents matching the search parameters</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.TableName">
            <summary>
            Name of the table being searched
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Limit">
            <summary>
            Upper limit on the number of items returned.
            For Queries: upper limit on the number of items returned.
            For Scan: limit on the number of items scanned.
            
            Maps directly to Limit property on Query and Scan operations.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.ConditionalOperator">
            <summary>
            Conditional operator for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.AttributesToGet">
            <summary>
            List of attribute names to retrieve
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsConsistentRead">
            <summary>
            Flag that, if true, indicates that the search is operating in consistent-read mode
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsBackwardSearch">
            <summary>
            Flag that, if true, indicates that the search is traversing backwards
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsDone">
            <summary>
            Flag that, if true, indicates that the search is done
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.NextKey">
            <summary>
            Key denoting the starting point of the next set of results
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Matches">
            <summary>
            List of currently found items
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.TotalSegments">
            <summary>
            For parallel <i>Scan</i> requests, <i>TotalSegments</i>represents the total number of segments for a table that is being scanned. Segments
            are a way to logically divide a table into equally sized portions, for the duration of the <i>Scan</i> request. The value of
            <i>TotalSegments</i> corresponds to the number of application "workers" (such as threads or processes) that will perform the parallel
            <i>Scan</i>. For example, if you want to scan a table using four application threads, you would specify a <i>TotalSegments</i> value of 4.
            The value for <i>TotalSegments</i> must be greater than or equal to 1, and less than or equal to 4096. If you specify a <i>TotalSegments</i>
            value of 1, the <i>Scan</i> will be sequential rather than parallel. If you specify <i>TotalSegments</i>, you must also specify
            <i>Segment</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 4096</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Segment">
            <summary>
            For parallel <i>Scan</i> requests, <i>Segment</i> identifies an individual segment to be scanned by an application "worker" (such as a
            thread or a process). Each worker issues a <i>Scan</i> request with a distinct value for the segment it will scan. Segment IDs are
            zero-based, so the first segment is always 0. For example, if you want to scan a table using four application threads, the first thread
            would specify a <i>Segment</i> value of 0, the second thread would specify 1, and so on. LastEvaluatedKey returned from a parallel scan
            request must be used with same Segment id in a subsequent operation. The value for <i>Segment</i> must be less than or equal to 0, and less
            than the value provided for <i>TotalSegments</i>. If you specify <i>Segment</i>, you must also specify <i>TotalSegments</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - 4095</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Count">
            <summary>
            Gets the total number of items that match the search parameters.
            
            If IsDone is true and CollectResults is true, returns Matches.Count.
            Otherwise, makes a call to DynamoDB to find out the number of
            matching items, without retrieving the items. Count is then cached.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IndexName">
            <summary>
            Name of the index to query against.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.LoadTable(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)">
            <summary>
            Creates a Table object with the specified name, using the
            passed-in client to load the table definition.
            
            This method will throw an exception if the table does not exist.
            </summary>
            <param name="ddbClient">Client to use to access DynamoDB.</param>
            <param name="tableName">Name of the table.</param>
            <returns>Table object representing the specified table.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.TryLoadTable(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String,Amazon.DynamoDBv2.DocumentModel.Table@)">
            <summary>
            Creates a Table object with the specified name, using the
            passed-in client to load the table definition.
            
            This method will return false if the table does not exist.
            </summary>
            <param name="ddbClient">Client to use to access DynamoDB.</param>
            <param name="tableName">Name of the table.</param>
            <param name="table">Loaded table.</param>
            <returns>
            True if table was successfully loaded; otherwise false.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Scan(Amazon.DynamoDBv2.DocumentModel.ScanFilter)">
            <summary>
            Initiates a Search object to Scan a DynamoDB table, with the
            specified filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="filter">Filter to apply to the scan.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Scan(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig)">
            <summary>
            Initiates a Search object to Scan a DynamoDB table, with the
            specified config.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="config">Configuration to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.QueryFilter)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified hash primary key and filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="hashKey">Value of the hash key for the query operation.</param>
            <param name="filter">Filter to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.QueryFilter)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="filter">Filter to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified config.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="config">Configuration to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.CreateBatchGet">
            <summary>
            Creates a DocumentBatchGet object for the current table, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <returns>Empty DocumentBatchGet object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.CreateBatchWrite">
            <summary>
            Creates a DocumentBatchWrite object for the current table, allowing
            a batch-put/delete operation against DynamoDB.
            </summary>
            <returns>Empty DocumentBatchWrite object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig)"/>
            </summary>
            <param name="doc">Document to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig)"/>
            </summary>
            <param name="doc">Document to save.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="key">Ley of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)"/>
            </summary>
            <param name="key">Ley of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="key">Key of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="document">Document to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="document">Document to delete.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="key">Key of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)"/>
            </summary>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig)">
            <summary>
            Puts a document into DynamoDB, using optional configs.
            </summary>
            <param name="doc">Document to save.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or updated attributes, depending on config.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)">
            <summary>
            Gets a document from DynamoDB by hash primary key, using specified configs.
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Document from DynamoDB.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)">
            <summary>
            Gets a document from DynamoDB by hash-and-range primary key,
            using specified configs.
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Document from DynamoDB.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItem(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig)">
            <summary>
            Gets a document from DynamoDB by key, using specified configs.
            </summary>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Document from DynamoDB.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)">
            <summary>
            Update a document in DynamoDB, using specified config.
            </summary>
            <param name="doc">Document to update.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or updated attributes, depending on config.</returns>
            <seealso cref="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig"/>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)">
            <summary>
            Update a document in DynamoDB, with a key to identify the
            document, and using the specified config.
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or updated attributes, depending on config.</returns>
            <seealso cref="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig"/>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)">
            <summary>
            Update a document in DynamoDB, with a hash primary key to identify
            the document, and using the specified config.
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or updated attributes, depending on config.</returns>
            <seealso cref="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig"/>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig)">
            <summary>
            Update a document in DynamoDB, with a hash-and-range primary key to identify
            the document, and using the specified config.
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or updated attributes, depending on config.</returns>
            <seealso cref="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig"/>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)">
            <summary>
            Delete a document in DynamoDB, using specified configs.
            </summary>
            <param name="document">Document to delete.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or old attributes, depending on config.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)">
            <summary>
            Delete a document in DynamoDB, identified by hash-key,
            using the specified configs.
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or old attributes, depending on config.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)">
            <summary>
            Delete a document in DynamoDB, identified by hash-and-range primary key,
            using the specified configs.
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or old attributes, depending on config.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig)">
            <summary>
            Delete a document in DynamoDB, identified by a key, using specified configs.
            </summary>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <returns>Null or old attributes, depending on config.</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.TableName">
            <summary>
            Name of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.Keys">
            <summary>
            Keys of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.GlobalSecondaryIndexes">
            <summary>
            Global secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.LocalSecondaryIndexes">
            <summary>
            Local secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.LocalSecondaryIndexNames">
            <summary>
            Names of the local secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.GlobalSecondaryIndexNames">
            <summary>
            Names of the global secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.HashKeys">
            <summary>
            List of keys on the table marked HASH
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.RangeKeys">
            <summary>
            List of keys on the table marked RANGE
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.Attributes">
            <summary>
            List of key attributes on the table.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig">
            <summary>
            Configuration for the Table.PutItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            
            PutItem only supports ReturnValues.AllOldAttributes and ReturnValues.None
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig">
            <summary>
            Configuration for the Table.GetItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig.ConsistentRead">
            <summary>
            If set to true, this flag ensures that the most recently written data is
            returned.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig">
            <summary>
            Configuration for the Table.UpdateItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig">
            <summary>
            Configuration for the Table.DeleteItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            
            DeleteItem only supports ReturnValues.AllOldAttributes and ReturnValues.None
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig">
            <summary>
            Configuration for the Table.Scan operation
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.#ctor">
            <summary>
            Initializes a default Table.Scan config object
            Filter is empty, Limit is Int32.MaxValue
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve as part of the search
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Limit">
            <summary>
            Upper limit on the number of items scanned per request
            for matching conditions.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.TotalSegments">
            <summary>
            For parallel <i>Scan</i> requests, <i>TotalSegments</i>represents the total number of segments for a table that is being scanned. Segments
            are a way to logically divide a table into equally sized portions, for the duration of the <i>Scan</i> request. The value of
            <i>TotalSegments</i> corresponds to the number of application "workers" (such as threads or processes) that will perform the parallel
            <i>Scan</i>. For example, if you want to scan a table using four application threads, you would specify a <i>TotalSegments</i> value of 4.
            The value for <i>TotalSegments</i> must be greater than or equal to 1, and less than or equal to 4096. If you specify a <i>TotalSegments</i>
            value of 1, the <i>Scan</i> will be sequential rather than parallel. If you specify <i>TotalSegments</i>, you must also specify
            <i>Segment</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 4096</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Segment">
            <summary>
            For parallel <i>Scan</i> requests, <i>Segment</i> identifies an individual segment to be scanned by an application "worker" (such as a
            thread or a process). Each worker issues a <i>Scan</i> request with a distinct value for the segment it will scan. Segment IDs are
            zero-based, so the first segment is always 0. For example, if you want to scan a table using four application threads, the first thread
            would specify a <i>Segment</i> value of 0, the second thread would specify 1, and so on. LastEvaluatedKey returned from a parallel scan
            request must be used with same Segment id in a subsequent operation. The value for <i>Segment</i> must be less than or equal to 0, and less
            than the value provided for <i>TotalSegments</i>. If you specify <i>Segment</i>, you must also specify <i>TotalSegments</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - 4095</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the Filter property:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig">
            <summary>
            Configuration for the Table.Query operation
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.#ctor">
            <summary>
            Initializes a default Table.Query config object
            Filter is empty, Limit is Int32.MaxValue
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.ConsistentRead">
            <summary>
            If set to true, this flag ensures that the most recently written data is
            returned.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve as part of the search
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Limit">
            <summary>
            Upper limit on the number of items to return per request
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.BackwardSearch">
            <summary>
            Flag that signals if the search is traversing backwards
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.IndexName">
            <summary>
            Name of the index to query against.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the Filter property:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ReturnValues">
            <summary>
            An enumeration of all supported return value directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanOperator">
            <summary>
            An enumeration of all supported scan operator directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryOperator">
            <summary>
            An enumeration of all supported query operator directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.SelectValues">
            <summary>
            An enumeration of all supported Select values for Query and Scan.
            Value of Count will force service to return the number of items,
            not the items themselves.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ConditionalOperatorValues">
            <summary>
            An enumeration of all supported ConditionalOperator values.
            Value of And for an operation will require that all conditions match.
            Value of Or for an operation will require that at least one of the conditons match.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.AsyncSearch`1">
            <summary>
            A strongly-typed object for retrieving search results (Query or Scan)
            from DynamoDB.
            </summary>
            <summary>
            A strongly-typed object for retrieving search results (Query or Scan)
            from DynamoDB.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.GetNextSetAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution to get the next set of results from DynamoDB.
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>
            A Task that can be used to poll or wait for results, or both.
            Results will include the next set of result items from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.GetRemainingAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution to get all the remaining results from DynamoDB.
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>
            A Task that can be used to poll or wait for results, or both.
            Results will include the remaining result items from DynamoDB.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.IsDone">
            <summary>
            Flag that, if true, indicates that the search is done
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchGet">
            <summary>
            Represents a non-generic object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet.ExecuteHelper(System.Boolean)">
            <summary>
            Executes a server call to batch-get the items requested.
            Populates Results with the retrieved items.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.BatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet.Execute">
            <summary>
            Executes a server call to batch-get the items requested.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet.ConsistentRead">
            <summary>
            If set to true, a consistent read is issued. Otherwise eventually-consistent is used.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchGet`1">
            <summary>
            Represents a strongly-typed object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(System.Object)">
            <summary>
            Add a single item to get, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(System.Object,System.Object)">
            <summary>
            Add a single item to get, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key of the item to get</param>
            <param name="rangeKey">Range key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(`0)">
            <summary>
            Add a single item to get.
            </summary>
            <param name="keyObject">Object key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.Combine(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Creates a MultiTableBatchGet object that is a combination
            of the current BatchGet and the specified BatchGets
            </summary>
            <param name="otherBatches">Other BatchGet objects</param>
            <returns>
            MultiTableBatchGet consisting of the multiple BatchGet objects:
            the current batch and the passed-in batches.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet`1.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet">
            <summary>
            Class for retrieving a batch of items from multiple DynamoDB tables,
            using multiple strongly-typed BatchGet objects
            </summary>
            <summary>
            Class for retrieving a batch of items from multiple DynamoDB tables,
            using multiple strongly-typed BatchGet objects
            </summary>
            <summary>
            Class for retrieving a batch of items from multiple DynamoDB tables,
            using multiple strongly-typed BatchGet objects
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.#ctor(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Constructs a MultiTableBatchGet object from a number of
            BatchGet objects
            </summary>
            <param name="batches">Collection of BatchGet objects</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.AddBatch(Amazon.DynamoDBv2.DataModel.BatchGet)">
            <summary>
            Add a BatchGet object to the multi-table batch request
            </summary>
            <param name="batch">BatchGet to add</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.Execute">
            <summary>
            Executes a multi-table batch request against all configured batches.
            Results are stored in the respective BatchGet objects.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.TotalKeys">
            <summary>
            Gets the total number of primary keys to be loaded from DynamoDB,
            across all batches
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchWrite">
            <summary>
            Represents a non-generic object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite.ExecuteHelper(System.Boolean)">
            <summary>
            Executes a server call to batch-write/delete the items requested.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.BatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite.Execute">
            <summary>
            Executes a server call to batch-write/delete the items requested.
            
            If more than 25 put/delete operations are specified, calls of up to 25
            put/delete items will be made until all items are processed.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchWrite`1">
            <summary>
            Represents a strongly-typed object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.Combine(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Creates a MultiTableBatchWrite object that is a combination
            of the current BatchWrite and the specified BatchWrites
            </summary>
            <param name="otherBatches">Other BatchWrite objects</param>
            <returns>
            MultiTableBatchWrite consisting of the multiple BatchWrite objects:
            the current batch and the passed-in batches.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddPutItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a number of items to be put in the current batch operation
            </summary>
            <param name="values">Items to put</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddPutItem(`0)">
            <summary>
            Add a single item to be put in the current batch operation
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a number of items to be deleted in the current batch operation
            </summary>
            <param name="values">Items to be deleted</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteItem(`0)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            </summary>
            <param name="item">Item to be deleted</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteKey(System.Object)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            Item is identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key of the item to delete</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteKey(System.Object,System.Object)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            Item is identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key of the item to delete</param>
            <param name="rangeKey">Range key of the item to delete</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite">
            <summary>
            Class for writing/deleting a batch of items in multiple DynamoDB tables,
            using multiple strongly-typed BatchWrite objects
            </summary>
            <summary>
            Class for writing/deleting a batch of items in multiple DynamoDB tables,
            using multiple strongly-typed BatchWrite objects
            </summary>
            <summary>
            Class for writing/deleting a batch of items in multiple DynamoDB tables,
            using multiple strongly-typed BatchWrite objects
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.#ctor(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Constructs a MultiTableBatchGet object from a number of
            BatchGet objects
            </summary>
            <param name="batches">Collection of BatchGet objects</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.AddBatch(Amazon.DynamoDBv2.DataModel.BatchWrite)">
            <summary>
            Add a BatchWrite object to the multi-table batch request
            </summary>
            <param name="batch">BatchGet to add</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.Execute">
            <summary>
            Executes a multi-table batch request against all configured batches.
            
            If more than 25 put/delete operations are specified, calls of up to 25
            put/delete items will be made until all items are processed.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig">
            <summary>
            Configuration object for setting options on the DynamoDBContext.
            and individual operations.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.ConsistentRead">
            <summary>
            Property that directs DynamoDBContext to use consistent reads.
            If property is not set, behavior defaults to non-consistent reads.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.SkipVersionCheck">
            <summary>
            Property that directs DynamoDBContext to skip version checks
            when saving or deleting an object with a version attribute.
            If property is not set, version checks are performed.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.TableNamePrefix">
            <summary>
            Property that directs DynamoDBContext to prefix all table names
            with a specific string.
            If property is null or empty, no prefix is used and default
            table names are used.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.IgnoreNullValues">
            <summary>
            Property that directs DynamoDBContext to ignore null values
            on attributes during a Save operation.
            If the property is false (or not set), null values will be
            interpreted as directives to delete the specific attribute.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig">
            <summary>
            Configuration object for setting options for individual operations.
            This will override any settings specified by the DynamoDBContext's DynamoDBContextConfig object.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.OverrideTableName">
            <summary>
            Property that indicates the table to save an object to overriding the DynamoDBTable attribute 
            declared for the type.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.BackwardQuery">
            <summary>
            Property that indicates a query should traverse the index backward.
            If the property is false (or not set), traversal shall be forward.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.IndexName">
            <summary>
            Property indicating the name of the index to query against.
            This value is optional if the index name can be inferred from the query call.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the filter conditions:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.QueryFilter">
            <summary>
            Query filter for the Query operation operation. Evaluates the query results and returns only
            the matching values. If you specify more than one condition, then by default all of the
            conditions must evaluate to true. To match only some conditions, set ConditionalOperator to Or.
            Note: Conditions must be against non-key properties.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.ScanCondition">
            <summary>
            Class describing a single scan condition
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.ScanCondition.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Object[])">
            <summary>
            Initializes a ScanCondition with the target property, the
            comparison operator and values being tested against.
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="op">Comparison operator</param>
            <param name="values">
            Value(s) being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.PropertyName">
            <summary>
            Name of the property being tested
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.Operator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.Values">
            <summary>
            Values being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.QueryCondition">
            <summary>
            Class describing a single query condition
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.QueryCondition.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Object[])">
            <summary>
            Initializes a ScanCondition with the target property, the
            comparison operator and values being tested against.
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="op">Comparison operator</param>
            <param name="values">
            Value(s) being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.PropertyName">
            <summary>
            Name of the property being tested
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.Operator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.Values">
            <summary>
            Values being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBContext">
            <summary>
            Context object for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context object for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context object for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>    class Context
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.IDynamoDBContext">
            <summary>
            Context interface for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context interface for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context interface for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ToDocument``1(``0)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.SaveAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.SaveAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchWriteAsync(Amazon.DynamoDBv2.DataModel.BatchWrite[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ScanAsync``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromScanAsync``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromQueryAsync``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Saves an object to DynamoDB using passed-in configs.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Load``1(System.Object)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Load``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Load``1(System.Object,System.Object)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Load``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Load``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given key and using the given config.
            The keyObject is a partially-specified instance, where the
            hash/range properties are equal to the key of the item you
            want to load.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key object defining the the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(``0)">
            <summary>
            Deletes an item in DynamoDB corresponding to given object.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            If SkipVersionCheck=false, will check version of object before deleting.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to given object.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            If SkipVersionCheck=false, will check version of object before deleting.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(System.Object)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(System.Object,System.Object)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Delete``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchGet(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.CreateBatchGet``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchGet object, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to get</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.CreateMultiTableBatchGet(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Creates a MultiTableBatchGet object, composed of multiple
            individual BatchGet objects.
            </summary>
            <param name="batches">Individual BatchGet objects</param>
            <returns>Composite MultiTableBatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchWrite(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.CreateBatchWrite``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchWrite object, allowing
            a batch-write operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to write</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.CreateMultiTableBatchWrite(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Creates a MultiTableBatchWrite object, composed of multiple
            individual BatchWrite objects.
            </summary>
            <param name="batches">Individual BatchWrite objects</param>
            <returns>Composite MultiTableBatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Scan``1(Amazon.DynamoDBv2.DataModel.ScanCondition[])">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Scan``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromScan``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Object[])">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromQuery``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.GetTargetTable``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Retrieves the target table for the specified type
            </summary>
            <typeparam name="T">Type to retrieve table for</typeparam>
            <returns>Table object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor">
            <summary>
            Constructs a DynamoDBContext object with a default AmazonDynamoDBClient
            client and a default DynamoDBContextConfig object for configuration.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.RegionEndpoint)">
            <summary>
            Constructs a DynamoDBContext object with a default AmazonDynamoDBClient
            client and a default DynamoDBContextConfig object for configuration.
            </summary>
            <param name="region">The region to configure the AmazonDynamoDBClient to use.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig)">
            <summary>
            Constructs a DynamoDBContext object with the specified configuration.
            Uses a default AmazonDynamoDBClient as the client.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.RegionEndpoint,Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig)">
            <summary>
            Constructs a DynamoDBContext object with the specified configuration.
            Uses a default AmazonDynamoDBClient as the client.
            </summary>
            <param name="region">The region to configure the AmazonDynamoDBClient to use.</param>
            <param name="config"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB)">
            <summary>
            Constructs a DynamoDBContext object with the specified DynamoDB client.
            Uses default DynamoDBContextConfig object for configuration.
            </summary>
            <param name="client">Client to use for making calls</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB,Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig)">
            <summary>
            Constructs a DynamoDBContext object with the specified DynamoDB client
            and configuration.
            </summary>
            <param name="client">Client to use for making calls</param>
            <param name="config">Configuration to use</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ToDocument``1(``0)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocuments``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DocumentModel.Document})">
            <summary>
            Deserializes a collections of documents to a collection of instances of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="documents">Documents to deserialize.</param>
            <returns>
            Collection of items of type T, each populated with properties from a corresponding document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.SaveAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.SaveAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchWriteAsync(Amazon.DynamoDBv2.DataModel.BatchWrite[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ScanAsync``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromScanAsync``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromQueryAsync``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchGet``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchGet object, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to get</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateMultiTableBatchGet(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Creates a MultiTableBatchGet object, composed of multiple
            individual BatchGet objects.
            </summary>
            <param name="batches">Individual BatchGet objects</param>
            <returns>Composite MultiTableBatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Saves an object to DynamoDB using passed-in configs.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object,System.Object)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given hash-and-range primary key and using the given config.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Loads an object from DynamoDB for the given key and using the given config.
            The keyObject is a partially-specified instance, where the
            hash/range properties are equal to the key of the item you
            want to load.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key object defining the the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <returns>
            Object of type T, populated with properties of item loaded from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0)">
            <summary>
            Deletes an item in DynamoDB corresponding to given object.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            If SkipVersionCheck=false, will check version of object before deleting.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to given object.
            
            Passed-in config overrides DynamoDBContextConfig on the context.
            If SkipVersionCheck=false, will check version of object before deleting.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(System.Object)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(System.Object,System.Object)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deletes an item in DynamoDB corresponding to a given hash-and-range primary key.
            
            No version check is done prior to delete.
            Type must be marked up with DynamoDBTableAttribute and at least
            one public field/property with DynamoDBHashKeyAttribute.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchGet(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchWrite``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchWrite object, allowing
            a batch-write operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to write</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateMultiTableBatchWrite(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Creates a MultiTableBatchWrite object, composed of multiple
            individual BatchWrite objects.
            </summary>
            <param name="batches">Individual BatchWrite objects</param>
            <returns>Composite MultiTableBatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchWrite(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Scan``1(Amazon.DynamoDBv2.DataModel.ScanCondition[])">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Scan``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromScan``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Query``1(System.Object)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Object[])">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Query``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromQuery``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromQuery``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Executes a Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Lazy-loaded collection of results.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.GetTargetTable``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Retrieves the target table for the specified type
            </summary>
            <typeparam name="T">Type to retrieve table for</typeparam>
            <returns>Table object</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionUnmarshaller">
            <summary>
            AttributeDefinitionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller">
            <summary>
            AttributeValueUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemRequestMarshaller">
            <summary>
            Batch Get Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemRequestMarshaller">
            <summary>
            Batch Write Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchWriteItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CapacityUnmarshaller">
            <summary>
            CapacityUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConsumedCapacityUnmarshaller">
            <summary>
            ConsumedCapacityUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableRequestMarshaller">
            <summary>
            Create Table Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTable operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemRequestMarshaller">
            <summary>
            Delete Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestUnmarshaller">
            <summary>
            DeleteRequestUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableRequestMarshaller">
            <summary>
            Delete Table Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTable operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableRequestMarshaller">
            <summary>
            Describe Table Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTable operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemRequestMarshaller">
            <summary>
            Get Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexDescriptionUnmarshaller">
            <summary>
            GlobalSecondaryIndexDescriptionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemCollectionMetricsUnmarshaller">
            <summary>
            ItemCollectionMetricsUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesUnmarshaller">
            <summary>
            KeysAndAttributesUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementUnmarshaller">
            <summary>
            KeySchemaElementUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller">
            <summary>
            List Tables Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTables operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexDescriptionUnmarshaller">
            <summary>
            LocalSecondaryIndexDescriptionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionUnmarshaller">
            <summary>
            ProjectionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputDescriptionUnmarshaller">
            <summary>
            ProvisionedThroughputDescriptionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemRequestMarshaller">
            <summary>
            Put Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestUnmarshaller">
            <summary>
            PutRequestUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryRequestMarshaller">
            <summary>
            Query Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Query operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanRequestMarshaller">
            <summary>
            Scan Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Scan operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableDescriptionUnmarshaller">
            <summary>
            TableDescriptionUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemRequestMarshaller">
            <summary>
            Update Item Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateItem operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableRequestMarshaller">
            <summary>
            Update Table Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTable operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestUnmarshaller">
            <summary>
            WriteRequestUnmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig">
            <summary>
            Configuration for accessing AWS Identity and Access Management service
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.AssignmentStatusType">
            <summary>assignment Status Type
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.AssignmentStatusType.Any">
            <summary>Constant Any for AssignmentStatusType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.AssignmentStatusType.Assigned">
            <summary>Constant Assigned for AssignmentStatusType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.AssignmentStatusType.Unassigned">
            <summary>Constant Unassigned for AssignmentStatusType
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.AssignmentStatusType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.AssignmentStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.IdentityManagement.StatusType">
            <summary>status Type
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.StatusType.Active">
            <summary>Constant Active for StatusType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.StatusType.Inactive">
            <summary>Constant Inactive for StatusType
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.StatusType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.IdentityManagement.SummaryKeyType">
            <summary>summary Key Type
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.AccessKeysPerUserQuota">
            <summary>Constant AccessKeysPerUserQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.AccountMFAEnabled">
            <summary>Constant AccountMFAEnabled for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.GroupPolicySizeQuota">
            <summary>Constant GroupPolicySizeQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.Groups">
            <summary>Constant Groups for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.GroupsPerUserQuota">
            <summary>Constant GroupsPerUserQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.GroupsQuota">
            <summary>Constant GroupsQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.MFADevices">
            <summary>Constant MFADevices for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.MFADevicesInUse">
            <summary>Constant MFADevicesInUse for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.ServerCertificates">
            <summary>Constant ServerCertificates for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.ServerCertificatesQuota">
            <summary>Constant ServerCertificatesQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.SigningCertificatesPerUserQuota">
            <summary>Constant SigningCertificatesPerUserQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.UserPolicySizeQuota">
            <summary>Constant UserPolicySizeQuota for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.Users">
            <summary>Constant Users for SummaryKeyType
            </summary>
        </member>
        <member name="F:Amazon.IdentityManagement.SummaryKeyType.UsersQuota">
            <summary>Constant UsersQuota for SummaryKeyType
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.SummaryKeyType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.SummaryKeyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AccessKey">
            <summary>
            <para>The AccessKey data type contains information about an AWS access key.</para> <para> This data type is used as a response element in
            the actions CreateAccessKey and ListAccessKeys. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKey.UserName">
            <summary>
            Name of the user the key is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKey.AccessKeyId">
            <summary>
            The ID for this access key.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKey.Status">
            <summary>
            The status of the access key. <c>Active</c> means the key is valid for API calls, while <c>Inactive</c> means it is not.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Active, Inactive</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKey.SecretAccessKey">
            <summary>
            The secret key used to sign requests.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKey.CreateDate">
            <summary>
            The date when the access key was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AccessKeyMetadata">
            <summary>
            <para>The AccessKey data type contains information about an AWS access key, without its secret key.</para> <para> This data type is used as
            a response element in the action ListAccessKeys. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKeyMetadata.UserName">
            <summary>
            Name of the user the key is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKeyMetadata.AccessKeyId">
            <summary>
            The ID for this access key.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKeyMetadata.Status">
            <summary>
            The status of the access key. <c>Active</c> means the key is valid for API calls, while <c>Inactive</c> means it is not.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Active, Inactive</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AccessKeyMetadata.CreateDate">
            <summary>
            The date when the access key was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest">
            <summary>
            Container for the parameters to the AddRoleToInstanceProfile operation.
            <para>Adds the specified role to the specified instance profile. For more information about roles, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> . For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About Instance Profiles</a> .</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.AmazonIdentityManagementServiceRequest">
            <summary>
            Base class for AmazonIdentityManagementService operation requests.
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest.InstanceProfileName">
            <summary>
            Name of the instance profile to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest.RoleName">
            <summary>
            Name of the role to add.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AddRoleToInstanceProfileResponse">
            <summary>
            Returns information about the AddRoleToInstanceProfile response metadata.
            The AddRoleToInstanceProfile operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AddUserToGroupRequest">
            <summary>
            Container for the parameters to the AddUserToGroup operation.
            <para>Adds the specified user to the specified group.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AddUserToGroupRequest.GroupName">
            <summary>
            Name of the group to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.AddUserToGroupRequest.UserName">
            <summary>
            Name of the user to add.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.AddUserToGroupResponse">
            <summary>
            Returns information about the AddUserToGroup response metadata.
            The AddUserToGroup operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ChangePasswordRequest">
            <summary>
            Container for the parameters to the ChangePassword operation.
            <para>Changes the password of the IAM user calling <c>ChangePassword</c> . The root account password is not affected by this action. For
            information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html" >Managing
            Passwords</a> .</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ChangePasswordResponse">
            <summary>
            Returns information about the ChangePassword response metadata.
            The ChangePassword operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateAccessKeyRequest">
            <summary>
            Container for the parameters to the CreateAccessKey operation.
            <para>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is
            <c>Active</c> .</para> <para>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID
            signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even
            if the AWS account has no associated users.</para> <para>For information about limits on the number of keys you can create, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>To ensure the security of your AWS account, the secret access key is
            accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again.
            If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateAccessKeyRequest.UserName">
            <summary>
            The user name that the new key will belong to.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateAccessKeyResponse">
            <summary>
            Returns information about the  CreateAccessKey response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateAccessKeyResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateAccessKey action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateAccessKeyResult.AccessKey">
            <summary>
            Information about the access key.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateAccessKeyResponse.CreateAccessKeyResult">
            <summary>
            Gets and sets the CreateAccessKeyResult property.
            Contains the result of a successful invocation of the CreateAccessKey action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateAccountAliasRequest">
            <summary>
            Container for the parameters to the CreateAccountAlias operation.
            <para>This action creates an alias for your AWS account. For information about using an AWS account alias, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html" >Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateAccountAliasRequest.AccountAlias">
            <summary>
            Name of the account alias to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 63</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateAccountAliasResponse">
            <summary>
            Returns information about the CreateAccountAlias response metadata.
            The CreateAccountAlias operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateGroupRequest">
            <summary>
            Container for the parameters to the CreateGroup operation.
            <para>Creates a new group.</para> <para>For information about the number of groups you can create, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateGroupRequest.Path">
            <summary>
            The path to the group. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateGroupRequest.GroupName">
            <summary>
            Name of the group to create. Do not include the path in this value.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateGroupResponse">
            <summary>
            Returns information about the  CreateGroup response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateGroupResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateGroup action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateGroupResult.Group">
            <summary>
            Information about the group.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateGroupResponse.CreateGroupResult">
            <summary>
            Gets and sets the CreateGroupResult property.
            Contains the result of a successful invocation of the CreateGroup action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateInstanceProfileRequest">
            <summary>
            Container for the parameters to the CreateInstanceProfile operation.
            <para>Creates a new instance profile. For information about instance profiles, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About Instance Profiles</a> .</para> <para>For
            information about the number of instance profiles you can create, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateInstanceProfileRequest.InstanceProfileName">
            <summary>
            Name of the instance profile to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateInstanceProfileRequest.Path">
            <summary>
            The path to the instance profile. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateInstanceProfileResponse">
            <summary>
            Returns information about the  CreateInstanceProfile response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateInstanceProfileResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateInstanceProfile action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateInstanceProfileResult.InstanceProfile">
            <summary>
            Information about the instance profile.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateInstanceProfileResponse.CreateInstanceProfileResult">
            <summary>
            Gets and sets the CreateInstanceProfileResult property.
            Contains the result of a successful invocation of the CreateInstanceProfile action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateLoginProfileRequest">
            <summary>
            Container for the parameters to the CreateLoginProfile operation.
            <para>Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For
            more information about managing passwords, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_ManagingLogins.html" >Managing Passwords</a> in <i>Using IAM</i>
            .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateLoginProfileRequest.UserName">
            <summary>
            Name of the user to create a password for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateLoginProfileRequest.Password">
            <summary>
            The new password for the user name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateLoginProfileResponse">
            <summary>
            Returns information about the  CreateLoginProfile response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateLoginProfileResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateLoginProfile action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateLoginProfileResult.LoginProfile">
            <summary>
            The user name and password create date.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateLoginProfileResponse.CreateLoginProfileResult">
            <summary>
            Gets and sets the CreateLoginProfileResult property.
            Contains the result of a successful invocation of the CreateLoginProfile action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateRoleRequest">
            <summary>
            Container for the parameters to the CreateRole operation.
            <para>Creates a new role for your AWS account. For more information about roles, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .
            For information about limitations on role names and the number of roles you can create, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para>The policy grants permission to an EC2 instance to assume the role. The policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html"
            >http://www.faqs.org/rfcs/rfc3986.html</a> .
            Currently, only EC2 instances can assume roles.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateRoleRequest.Path">
            <summary>
            The path to the role. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateRoleRequest.RoleName">
            <summary>
            Name of the role to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateRoleRequest.AssumeRolePolicyDocument">
            <summary>
            The policy that grants an entity permission to assume the role.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateRoleResponse">
            <summary>
            Returns information about the  CreateRole response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateRoleResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateRole action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateRoleResult.Role">
            <summary>
            Information about the role.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateRoleResponse.CreateRoleResult">
            <summary>
            Gets and sets the CreateRoleResult property.
            Contains the result of a successful invocation of the CreateRole action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateSAMLProviderRequest">
            <summary>
            Container for the parameters to the CreateSAMLProvider operation.
            <para>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</para> <para>The SAML provider that you create
            with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity
            provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API
            access to AWS. </para> <para>When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that
            includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that
            are received from the IdP. You must generate the metadata document using the identity management software that is used as your
            organization's IdP. </para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para> <para>For more information, see <a
            href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html" >Giving Console Access Using SAML</a> and <a
            href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/CreatingSAML.html" >Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Credentials</i> guide. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateSAMLProviderRequest.SAMLMetadataDocument">
            <summary>
            An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration
            information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must
            generate the metadata document using the identity management software that is used as your organization's IdP. For more information, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating Temporary Security Credentials for SAML Federation</a> in
            the <i>Using Temporary Security Credentials</i> guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1000 - 10000000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateSAMLProviderRequest.Name">
            <summary>
            The name of the provider to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w._-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateSAMLProviderResponse">
            <summary>
            Returns information about the  CreateSAMLProvider response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateSAMLProviderResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateSAMLProvider action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateSAMLProviderResult.SAMLProviderArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateSAMLProviderResponse.CreateSAMLProviderResult">
            <summary>
            Gets and sets the CreateSAMLProviderResult property.
            Contains the result of a successful invocation of the CreateSAMLProvider action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateUserRequest">
            <summary>
            Container for the parameters to the CreateUser operation.
            <para>Creates a new user for your AWS account.</para> <para>For information about limitations on the number of users you can create, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateUserRequest.Path">
            <summary>
            The path for the user name. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateUserRequest.UserName">
            <summary>
            Name of the user to create.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateUserResponse">
            <summary>
            Returns information about the  CreateUser response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateUserResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateUser action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateUserResult.User">
            <summary>
            Information about the user.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateUserResponse.CreateUserResult">
            <summary>
            Gets and sets the CreateUserResult property.
            Contains the result of a successful invocation of the CreateUser action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest">
            <summary>
            Container for the parameters to the CreateVirtualMFADevice operation.
            <para>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a
            href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html" >EnableMFADevice</a> to attach the MFA device to an IAM
            user. For more information about creating and working with virtual MFA devices, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_VirtualMFA.html" >Using a Virtual MFA Device</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>For information about limits on the number of MFA devices you can create, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on Entities</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>The seed information contained in the QR code and the Base32 string
            should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual
            device, you should ensure that the information is destroyed following secure procedures.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest.Path">
            <summary>
            The path for the virtual MFA device. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest.VirtualMFADeviceName">
            <summary>
            The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - </description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceResponse">
            <summary>
            Returns information about the  CreateVirtualMFADevice response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceResult">
            <summary>
            <para>Contains the result of a successful invocation of the CreateVirtualMFADevice action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceResult.VirtualMFADevice">
            <summary>
            A newly created virtual MFA device.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.CreateVirtualMFADeviceResponse.CreateVirtualMFADeviceResult">
            <summary>
            Gets and sets the CreateVirtualMFADeviceResult property.
            Contains the result of a successful invocation of the CreateVirtualMFADevice action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest">
            <summary>
            Container for the parameters to the DeactivateMFADevice operation.
            <para>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest.UserName">
            <summary>
            Name of the user whose MFA device you want to deactivate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest.SerialNumber">
            <summary>
            The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeactivateMFADeviceResponse">
            <summary>
            Returns information about the DeactivateMFADevice response metadata.
            The DeactivateMFADevice operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccessKeyRequest">
            <summary>
            Container for the parameters to the DeleteAccessKey operation.
            <para>Deletes the access key associated with the specified user.</para> <para>If you do not specify a user name, IAM determines the user
            name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can
            use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteAccessKeyRequest.UserName">
            <summary>
            Name of the user whose key you want to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteAccessKeyRequest.AccessKeyId">
            <summary>
            The access key ID for the access key ID and secret access key you want to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccessKeyResponse">
            <summary>
            Returns information about the DeleteAccessKey response metadata.
            The DeleteAccessKey operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccountAliasRequest">
            <summary>
            Container for the parameters to the DeleteAccountAlias operation.
            <para>Deletes the specified AWS account alias. For information about using an AWS account alias, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html" >Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteAccountAliasRequest.AccountAlias">
            <summary>
            Name of the account alias to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>3 - 63</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccountAliasResponse">
            <summary>
            Returns information about the DeleteAccountAlias response metadata.
            The DeleteAccountAlias operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest">
            <summary>
            Container for the parameters to the DeleteAccountPasswordPolicy operation.
            <para>Deletes the password policy for the AWS account.</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyResponse">
            <summary>
            Returns information about the DeleteAccountPasswordPolicy response metadata.
            The DeleteAccountPasswordPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteConflictException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.DeleteConflictException.#ctor(System.String)">
            <summary>
            Constructs a new DeleteConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest">
            <summary>
            Container for the parameters to the DeleteGroupPolicy operation.
            <para>Deletes the specified policy that is associated with the specified group.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest.GroupName">
            <summary>
            Name of the group the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest.PolicyName">
            <summary>
            Name of the policy document to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteGroupPolicyResponse">
            <summary>
            Returns information about the DeleteGroupPolicy response metadata.
            The DeleteGroupPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteGroupRequest">
            <summary>
            Container for the parameters to the DeleteGroup operation.
            <para>Deletes the specified group. The group must not contain any users or have any attached policies.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteGroupRequest.GroupName">
            <summary>
            Name of the group to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteGroupResponse">
            <summary>
            Returns information about the DeleteGroup response metadata.
            The DeleteGroup operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest">
            <summary>
            Container for the parameters to the DeleteInstanceProfile operation.
            <para>Deletes the specified instance profile. The instance profile must not have an associated role.</para> <para><b>IMPORTANT:</b>Make sure
            you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that
            is associated with a running instance will break any applications running on the instance.</para> <para>For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About Instance Profiles</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest.InstanceProfileName">
            <summary>
            Name of the instance profile to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteInstanceProfileResponse">
            <summary>
            Returns information about the DeleteInstanceProfile response metadata.
            The DeleteInstanceProfile operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteLoginProfileRequest">
            <summary>
            Container for the parameters to the DeleteLoginProfile operation.
            <para>Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management
            Console.</para> <para><b>IMPORTANT:</b>Deleting a user's password does not prevent a user from accessing IAM through the command line
            interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about
            making keys inactive or deleting them, see UpdateAccessKey and DeleteAccessKey. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteLoginProfileRequest.UserName">
            <summary>
            Name of the user whose password you want to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteLoginProfileResponse">
            <summary>
            Returns information about the DeleteLoginProfile response metadata.
            The DeleteLoginProfile operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteRolePolicyRequest">
            <summary>
            Container for the parameters to the DeleteRolePolicy operation.
            <para>Deletes the specified policy associated with the specified role.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteRolePolicyRequest.RoleName">
            <summary>
            Name of the role the associated with the policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteRolePolicyRequest.PolicyName">
            <summary>
            Name of the policy document to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteRolePolicyResponse">
            <summary>
            Returns information about the DeleteRolePolicy response metadata.
            The DeleteRolePolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteRoleRequest">
            <summary>
            Container for the parameters to the DeleteRole operation.
            <para>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .</para> <para><b>IMPORTANT:</b>Make
            sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is
            associated with a running instance will break any applications running on the instance.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteRoleRequest.RoleName">
            <summary>
            Name of the role to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteRoleResponse">
            <summary>
            Returns information about the DeleteRole response metadata.
            The DeleteRole operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest">
            <summary>
            Container for the parameters to the DeleteSAMLProvider operation.
            <para>Deletes a SAML provider.</para> <para>Deleting the provider does not update any roles that reference the SAML provider as a principal
            in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. </para>
            <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest.SAMLProviderArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteSAMLProviderResponse">
            <summary>
            Returns information about the DeleteSAMLProvider response metadata.
            The DeleteSAMLProvider operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteServerCertificateRequest">
            <summary>
            Container for the parameters to the DeleteServerCertificate operation.
            <para>Deletes the specified server certificate.</para> <para><b>IMPORTANT:</b>If you are using a server certificate with Elastic Load
            Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of
            bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend
            that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more
            information, go to DeleteLoadBalancerListeners in the Elastic Load Balancing API Reference.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteServerCertificateRequest.ServerCertificateName">
            <summary>
            The name of the server certificate you want to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteServerCertificateResponse">
            <summary>
            Returns information about the DeleteServerCertificate response metadata.
            The DeleteServerCertificate operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest">
            <summary>
            Container for the parameters to the DeleteSigningCertificate operation.
            <para>Deletes the specified signing certificate associated with the specified user.</para> <para>If you do not specify a user name, IAM
            determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the
            AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest.UserName">
            <summary>
            Name of the user the signing certificate belongs to.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest.CertificateId">
            <summary>
            ID of the signing certificate to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>24 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteSigningCertificateResponse">
            <summary>
            Returns information about the DeleteSigningCertificate response metadata.
            The DeleteSigningCertificate operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteUserPolicyRequest">
            <summary>
            Container for the parameters to the DeleteUserPolicy operation.
            <para>Deletes the specified policy associated with the specified user.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteUserPolicyRequest.UserName">
            <summary>
            Name of the user the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteUserPolicyRequest.PolicyName">
            <summary>
            Name of the policy document to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteUserPolicyResponse">
            <summary>
            Returns information about the DeleteUserPolicy response metadata.
            The DeleteUserPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            <para>Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached
            policies.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteUserRequest.UserName">
            <summary>
            Name of the user to delete.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteUserResponse">
            <summary>
            Returns information about the DeleteUser response metadata.
            The DeleteUser operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest">
            <summary>
            Container for the parameters to the DeleteVirtualMFADevice operation.
            <para>Deletes a virtual MFA device.</para> <para><b>NOTE:</b>You must deactivate a user's virtual MFA device before you can delete it. For
            information about deactivating MFA devices, see DeactivateMFADevice.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest.SerialNumber">
            <summary>
            The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceResponse">
            <summary>
            Returns information about the DeleteVirtualMFADevice response metadata.
            The DeleteVirtualMFADevice operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.DuplicateCertificateException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.DuplicateCertificateException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateCertificateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.EnableMFADeviceRequest">
            <summary>
            Container for the parameters to the EnableMFADevice operation.
            <para>Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every
            subsequent login by the user name associated with the device.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.EnableMFADeviceRequest.UserName">
            <summary>
            Name of the user for whom you want to enable the MFA device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.EnableMFADeviceRequest.SerialNumber">
            <summary>
            The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.EnableMFADeviceRequest.AuthenticationCode1">
            <summary>
            An authentication code emitted by the device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.EnableMFADeviceRequest.AuthenticationCode2">
            <summary>
            A subsequent authentication code emitted by the device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.EnableMFADeviceResponse">
            <summary>
            Returns information about the EnableMFADevice response metadata.
            The EnableMFADevice operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.EntityAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new EntityAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException.#ctor(System.String)">
            <summary>
            Constructs a new EntityTemporarilyUnmodifiableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest">
            <summary>
            Container for the parameters to the GetAccountPasswordPolicy operation.
            <para>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html" >Managing an IAM Password Policy</a> .</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountPasswordPolicyResponse">
            <summary>
            Returns information about the  GetAccountPasswordPolicy response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountPasswordPolicyResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetAccountPasswordPolicy action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetAccountPasswordPolicyResult.PasswordPolicy">
            <summary>
            The PasswordPolicy data type contains information about the account password policy. This data type is used as a response element in the
            action <a>GetAccountPasswordPolicy</a>.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetAccountPasswordPolicyResponse.GetAccountPasswordPolicyResult">
            <summary>
            Gets and sets the GetAccountPasswordPolicyResult property.
            Contains the result of a successful invocation of the GetAccountPasswordPolicy action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountSummaryRequest">
            <summary>
            Container for the parameters to the GetAccountSummary operation.
            <para>Retrieves account level information about account entity usage and IAM quotas.</para> <para>For information about limitations on IAM
            entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM
            Entities</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountSummaryResponse">
            <summary>
            Returns information about the  GetAccountSummary response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetAccountSummaryResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetAccountSummary action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetAccountSummaryResult.SummaryMap">
            <summary>
            A set of key value pairs containing account-level information. <c>SummaryMap</c> contains the following keys: <ul>
            <li><c>AccessKeysPerUserQuota</c> - Maximum number of access keys that can be created per user</li> <li><c>AccountMFAEnabled</c> - 1 if the
            root account has an MFA device assigned to it, 0 otherwise</li> <li><c>AssumeRolePolicySizeQuota</c> - Maximum allowed size for assume role
            policy documents (in kilobytes) </li> <li><c>GroupPolicySizeQuota</c> - Maximum allowed size for Group policy documents (in kilobytes)</li>
            <li><c>Groups</c> - Number of Groups for the AWS account</li> <li><c>GroupsPerUserQuota</c> - Maximum number of groups a user can belong
            to</li> <li><c>GroupsQuota</c> - Maximum groups allowed for the AWS account</li> <li><c>InstanceProfiles</c> - Number of instance profiles
            for the AWS account</li> <li><c>InstanceProfilesQuota</c> - Maximum instance profiles allowed for the AWS account</li> <li><c>MFADevices</c>
            - Number of MFA devices, either assigned or unassigned</li> <li><c>MFADevicesInUse</c> - Number of MFA devices that have been assigned to an
            IAM user or to the root account</li> <li><c>RolePolicySizeQuota</c> - Maximum allowed size for role policy documents (in kilobytes) </li>
            <li><c>Roles</c> - Number of roles for the AWS account</li> <li><c>RolesQuota</c> - Maximum roles allowed for the AWS account</li>
            <li><c>ServerCertificates</c> - Number of server certificates for the AWS account</li> <li><c>ServerCertificatesQuota</c> - Maximum server
            certificates allowed for the AWS account</li> <li><c>SigningCertificatesPerUserQuota</c> - Maximum number of X509 certificates allowed for a
            user</li> <li><c>UserPolicySizeQuota</c> - Maximum allowed size for user policy documents (in kilobytes) </li> <li><c>Users</c> - Number of
            users for the AWS account</li> <li><c>UsersQuota</c> - Maximum users allowed for the AWS account</li> </ul>
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetAccountSummaryResponse.GetAccountSummaryResult">
            <summary>
            Gets and sets the GetAccountSummaryResult property.
            Contains the result of a successful invocation of the GetAccountSummary action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupPolicyRequest">
            <summary>
            Container for the parameters to the GetGroupPolicy operation.
            <para>Retrieves the specified policy document for the specified group. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html" >http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyRequest.GroupName">
            <summary>
            Name of the group the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyRequest.PolicyName">
            <summary>
            Name of the policy document to get.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupPolicyResponse">
            <summary>
            Returns information about the  GetGroupPolicy response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupPolicyResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetGroupPolicy action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyResult.GroupName">
            <summary>
            The group the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyResult.PolicyName">
            <summary>
            The name of the policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyResult.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupPolicyResponse.GetGroupPolicyResult">
            <summary>
            Gets and sets the GetGroupPolicyResult property.
            Contains the result of a successful invocation of the GetGroupPolicy action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupRequest">
            <summary>
            Container for the parameters to the GetGroup operation.
            <para>Returns a list of users that are in the specified group. You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupRequest.GroupName">
            <summary>
            Name of the group.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user
            names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do not
            include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupResponse">
            <summary>
            Returns information about the  GetGroup response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetGroupResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetGroup action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupResult.Group">
            <summary>
            Information about the group.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupResult.Users">
            <summary>
            A list of users in the group.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more user names in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupResult.Marker">
            <summary>
            If IsTruncated is <c>true</c>, then this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetGroupResponse.GetGroupResult">
            <summary>
            Gets and sets the GetGroupResult property.
            Contains the result of a successful invocation of the GetGroup action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetInstanceProfileRequest">
            <summary>
            Container for the parameters to the GetInstanceProfile operation.
            <para>Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About
            Instance Profiles</a> . For more information about ARNs, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs" >ARNs</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetInstanceProfileRequest.InstanceProfileName">
            <summary>
            Name of the instance profile to get information about.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetInstanceProfileResponse">
            <summary>
            Returns information about the  GetInstanceProfile response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetInstanceProfileResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetInstanceProfile action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetInstanceProfileResult.InstanceProfile">
            <summary>
            Information about the instance profile.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetInstanceProfileResponse.GetInstanceProfileResult">
            <summary>
            Gets and sets the GetInstanceProfileResult property.
            Contains the result of a successful invocation of the GetInstanceProfile action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetLoginProfileRequest">
            <summary>
            Container for the parameters to the GetLoginProfile operation.
            <para>Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action
            returns a 404 ( <c>NoSuchEntity</c> ) error. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetLoginProfileRequest.UserName">
            <summary>
            Name of the user whose login profile you want to retrieve.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetLoginProfileResponse">
            <summary>
            Returns information about the  GetLoginProfile response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetLoginProfileResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetLoginProfile action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetLoginProfileResult.LoginProfile">
            <summary>
            User name and password create date for the user.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetLoginProfileResponse.GetLoginProfileResult">
            <summary>
            Gets and sets the GetLoginProfileResult property.
            Contains the result of a successful invocation of the GetLoginProfile action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRolePolicyRequest">
            <summary>
            Container for the parameters to the GetRolePolicy operation.
            <para>Retrieves the specified policy document for the specified role. For more information about roles, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .</para> <para>The returned policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html"
            >http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyRequest.RoleName">
            <summary>
            Name of the role associated with the policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyRequest.PolicyName">
            <summary>
            Name of the policy document to get.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRolePolicyResponse">
            <summary>
            Returns information about the  GetRolePolicy response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRolePolicyResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetRolePolicy action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyResult.RoleName">
            <summary>
            The role the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyResult.PolicyName">
            <summary>
            The name of the policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyResult.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRolePolicyResponse.GetRolePolicyResult">
            <summary>
            Gets and sets the GetRolePolicyResult property.
            Contains the result of a successful invocation of the GetRolePolicy action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRoleRequest">
            <summary>
            Container for the parameters to the GetRole operation.
            <para>Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to EC2 to
            assume the role. For more information about ARNs, go to <a href="
            http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs" >ARNs</a> . For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .</para> <para>The returned policy
            is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html"
            >http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRoleRequest.RoleName">
            <summary>
            Name of the role to get information about.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRoleResponse">
            <summary>
            Returns information about the  GetRole response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetRoleResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetRole action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRoleResult.Role">
            <summary>
            Information about the role.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetRoleResponse.GetRoleResult">
            <summary>
            Gets and sets the GetRoleResult property.
            Contains the result of a successful invocation of the GetRole action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetSAMLProviderRequest">
            <summary>
            Container for the parameters to the GetSAMLProvider operation.
            <para>Returns the SAML provider metadocument that was uploaded when the provider was created or updated.</para> <para><b>NOTE:</b>This
            operation requires Signature Version 4.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetSAMLProviderRequest.SAMLProviderArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider to get information about.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetSAMLProviderResponse">
            <summary>
            Returns information about the  GetSAMLProvider response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetSAMLProviderResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetSAMLProvider action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetSAMLProviderResult.SAMLMetadataDocument">
            <summary>
            The XML metadata document that includes information about an identity provider.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1000 - 10000000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetSAMLProviderResult.CreateDate">
            <summary>
            The date and time when the SAML provider was created.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetSAMLProviderResult.ValidUntil">
            <summary>
            The expiration date and time for the SAML provider.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetSAMLProviderResponse.GetSAMLProviderResult">
            <summary>
            Gets and sets the GetSAMLProviderResult property.
            Contains the result of a successful invocation of the GetSAMLProvider action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetServerCertificateRequest">
            <summary>
            Container for the parameters to the GetServerCertificate operation.
            <para>Retrieves information about the specified server certificate.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetServerCertificateRequest.ServerCertificateName">
            <summary>
            The name of the server certificate you want to retrieve information about.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetServerCertificateResponse">
            <summary>
            Returns information about the  GetServerCertificate response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetServerCertificateResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetServerCertificate action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetServerCertificateResult.ServerCertificate">
            <summary>
            Information about the server certificate.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetServerCertificateResponse.GetServerCertificateResult">
            <summary>
            Gets and sets the GetServerCertificateResult property.
            Contains the result of a successful invocation of the GetServerCertificate action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserPolicyRequest">
            <summary>
            Container for the parameters to the GetUserPolicy operation.
            <para>Retrieves the specified policy document for the specified user. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html" >http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyRequest.UserName">
            <summary>
            Name of the user who the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyRequest.PolicyName">
            <summary>
            Name of the policy document to get.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserPolicyResponse">
            <summary>
            Returns information about the  GetUserPolicy response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserPolicyResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetUserPolicy action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyResult.UserName">
            <summary>
            The user the policy is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyResult.PolicyName">
            <summary>
            The name of the policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyResult.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserPolicyResponse.GetUserPolicyResult">
            <summary>
            Gets and sets the GetUserPolicyResult property.
            Contains the result of a successful invocation of the GetUserPolicy action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserRequest">
            <summary>
            Container for the parameters to the GetUser operation.
            <para>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</para> <para>If you do not specify a
            user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserRequest.UserName">
            <summary>
            Name of the user to get information about. This parameter is optional. If it is not included, it defaults to the user making the request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserResponse">
            <summary>
            Returns information about the  GetUser response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.GetUserResult">
            <summary>
            <para>Contains the result of a successful invocation of the GetUser action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserResult.User">
            <summary>
            Information about the user.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.GetUserResponse.GetUserResult">
            <summary>
            Gets and sets the GetUserResult property.
            Contains the result of a successful invocation of the GetUser action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Group">
            <summary>
            <para>The Group data type contains information about a group.</para> <para> This data type is used as a response element in the following
            actions:</para>
            <ul>
            <li> CreateGroup </li>
            <li> GetGroup </li>
            <li> ListGroups </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Group.Path">
            <summary>
            Path to the group. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Group.GroupName">
            <summary>
            The name that identifies the group.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Group.GroupId">
            <summary>
            The stable and unique string identifying the group. For more information about IDs, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Group.Arn">
            <summary>
            The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Group.CreateDate">
            <summary>
            The date when the group was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.InstanceProfile">
            <summary>
            <para>The InstanceProfile data type contains information about an instance profile.</para> <para> This data type is used as a response
            element in the following actions:</para>
            <ul>
            <li> <para> CreateInstanceProfile </para> </li>
            <li> <para> GetInstanceProfile </para> </li>
            <li> <para> ListInstanceProfiles </para> </li>
            <li> <para> ListInstanceProfilesForRole </para> </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.Path">
            <summary>
            Path to the instance profile. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.InstanceProfileName">
            <summary>
            The name identifying the instance profile.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.InstanceProfileId">
            <summary>
            The stable and unique string identifying the instance profile. For more information about IDs, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.Arn">
            <summary>
            The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.CreateDate">
            <summary>
            The date when the instance profile was created.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.InstanceProfile.Roles">
            <summary>
            The role associated with the instance profile.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAuthenticationCodeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.InvalidCertificateException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.InvalidCertificateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidCertificateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.InvalidInputException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.InvalidInputException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidInputException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.InvalidUserTypeException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.InvalidUserTypeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidUserTypeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.KeyPairMismatchException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.KeyPairMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new KeyPairMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.LimitExceededException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccessKeysRequest">
            <summary>
            Container for the parameters to the ListAccessKeys operation.
            <para>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of keys, you can still paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based on the AWS
            access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root
            credentials even if the AWS account has no associated users.</para> <para><b>NOTE:</b>To ensure the security of your AWS account, the secret
            access key is accessible only during key and user creation.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysRequest.UserName">
            <summary>
            Name of the user.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of keys you want in the response. If there are additional
            keys beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do not
            include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccessKeysResponse">
            <summary>
            Returns information about the  ListAccessKeys response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccessKeysResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListAccessKeys action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysResult.AccessKeyMetadata">
            <summary>
            A list of access key metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more keys to list. If your results were truncated, you can make a subsequent pagination request
            using the <c>Marker</c> request parameter to retrieve more keys in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccessKeysResponse.ListAccessKeysResult">
            <summary>
            Gets and sets the ListAccessKeysResult property.
            Contains the result of a successful invocation of the ListAccessKeys action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccountAliasesRequest">
            <summary>
            Container for the parameters to the ListAccountAliases operation.
            <para>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html" >Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of account aliases you want in the response. If there are additional
            account aliases beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you
            do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccountAliasesResponse">
            <summary>
            Returns information about the  ListAccountAliases response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListAccountAliasesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListAccountAliases action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesResult.AccountAliases">
            <summary>
            A list of aliases associated with the account.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more account aliases to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more account aliases in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesResult.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListAccountAliasesResponse.ListAccountAliasesResult">
            <summary>
            Gets and sets the ListAccountAliasesResult property.
            Contains the result of a successful invocation of the ListAccountAliases action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupPoliciesRequest">
            <summary>
            Container for the parameters to the ListGroupPolicies operation.
            <para>Lists the names of the policies associated with the specified group. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesRequest.GroupName">
            <summary>
            The name of the group to list policies for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional
            policy names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do
            not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupPoliciesResponse">
            <summary>
            Returns information about the  ListGroupPolicies response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupPoliciesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListGroupPolicies action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesResult.PolicyNames">
            <summary>
            A list of policy names.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more policy names in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupPoliciesResponse.ListGroupPoliciesResult">
            <summary>
            Gets and sets the ListGroupPoliciesResult property.
            Contains the result of a successful invocation of the ListGroupPolicies action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsForUserRequest">
            <summary>
            Container for the parameters to the ListGroupsForUser operation.
            <para>Lists the groups the specified user belongs to.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserRequest.UserName">
            <summary>
            The name of the user to list groups for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups
            beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do not include
            it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsForUserResponse">
            <summary>
            Returns information about the  ListGroupsForUser response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsForUserResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListGroupsForUser action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserResult.Groups">
            <summary>
            A list of groups.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request
            using the <c>Marker</c> request parameter to retrieve more groups in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsForUserResponse.ListGroupsForUserResult">
            <summary>
            Gets and sets the ListGroupsForUserResult property.
            Contains the result of a successful invocation of the ListGroupsForUser action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsRequest">
            <summary>
            Container for the parameters to the ListGroups operation.
            <para>Lists the groups that have the specified path prefix.</para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsRequest.PathPrefix">
            <summary>
            The path prefix for filtering the results. For example: <c>/division_abc/subdivision_xyz/</c>, which would get all groups whose path starts
            with <c>/division_abc/subdivision_xyz/</c>. This parameter is optional. If it is not included, it defaults to a slash (/), listing all
            groups.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>\u002F[\u0021-\u007F]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups
            beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do not include
            it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsResponse">
            <summary>
            Returns information about the  ListGroups response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListGroupsResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListGroups action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsResult.Groups">
            <summary>
            A list of groups.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request
            using the <c>Marker</c> request parameter to retrieve more groups in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListGroupsResponse.ListGroupsResult">
            <summary>
            Gets and sets the ListGroupsResult property.
            Contains the result of a successful invocation of the ListGroups action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest">
            <summary>
            Container for the parameters to the ListInstanceProfilesForRole operation.
            <para>Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest.RoleName">
            <summary>
            The name of the role to list instance profiles for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResponse">
            <summary>
            Returns information about the  ListInstanceProfilesForRole response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListInstanceProfilesForRole action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResult.InstanceProfiles">
            <summary>
            A list of instance profiles.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more instance profiles in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleResponse.ListInstanceProfilesForRoleResult">
            <summary>
            Gets and sets the ListInstanceProfilesForRoleResult property.
            Contains the result of a successful invocation of the ListInstanceProfilesForRole action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesRequest">
            <summary>
            Container for the parameters to the ListInstanceProfiles operation.
            <para>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html" >About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesRequest.PathPrefix">
            <summary>
            The path prefix for filtering the results. For example: <c>/application_abc/component_xyz/</c>, which would get all instance profiles whose
            path starts with <c>/application_abc/component_xyz/</c>. This parameter is optional. If it is not included, it defaults to a slash (/),
            listing all instance profiles.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>\u002F[\u0021-\u007F]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesResponse">
            <summary>
            Returns information about the  ListInstanceProfiles response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListInstanceProfilesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListInstanceProfiles action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesResult.InstanceProfiles">
            <summary>
            A list of instance profiles.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more instance profiles in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListInstanceProfilesResponse.ListInstanceProfilesResult">
            <summary>
            Gets and sets the ListInstanceProfilesResult property.
            Contains the result of a successful invocation of the ListInstanceProfiles action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListMFADevicesRequest">
            <summary>
            Container for the parameters to the ListMFADevices operation.
            <para>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified
            user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the
            request.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesRequest.UserName">
            <summary>
            Name of the user whose MFA devices you want to list.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA
            devices beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do not
            include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListMFADevicesResponse">
            <summary>
            Returns information about the  ListMFADevices response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListMFADevicesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListMFADevices action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesResult.MFADevices">
            <summary>
            A list of MFA devices.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more MFA devices to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more MFA devices in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListMFADevicesResponse.ListMFADevicesResult">
            <summary>
            Gets and sets the ListMFADevicesResult property.
            Contains the result of a successful invocation of the ListMFADevices action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolePoliciesRequest">
            <summary>
            Container for the parameters to the ListRolePolicies operation.
            <para>Lists the names of the policies associated with the specified role. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesRequest.RoleName">
            <summary>
            The name of the role to list policies for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolePoliciesResponse">
            <summary>
            Returns information about the  ListRolePolicies response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolePoliciesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListRolePolicies action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesResult.PolicyNames">
            <summary>
            A list of policy names.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more policy names in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolePoliciesResponse.ListRolePoliciesResult">
            <summary>
            Gets and sets the ListRolePoliciesResult property.
            Contains the result of a successful invocation of the ListRolePolicies action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolesRequest">
            <summary>
            Container for the parameters to the ListRoles operation.
            <para>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about
            roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>The returned policy is URL-encoded according to
            RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html"
            >http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesRequest.PathPrefix">
            <summary>
            The path prefix for filtering the results. For example: <c>/application_abc/component_xyz/</c>, which would get all roles whose path starts
            with <c>/application_abc/component_xyz/</c>. This parameter is optional. If it is not included, it defaults to a slash (/), listing all
            roles.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>\u002F[\u0021-\u007F]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolesResponse">
            <summary>
            Returns information about the  ListRoles response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListRolesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListRoles action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesResult.Roles">
            <summary>
            A list of roles.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more roles to list. If your results were truncated, you can make a subsequent pagination request
            using the <c>Marker</c> request parameter to retrieve more roles in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListRolesResponse.ListRolesResult">
            <summary>
            Gets and sets the ListRolesResult property.
            Contains the result of a successful invocation of the ListRoles action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSAMLProvidersRequest">
            <summary>
            Container for the parameters to the ListSAMLProviders operation.
            <para>Lists the SAML providers in the account.</para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSAMLProvidersResponse">
            <summary>
            Returns information about the  ListSAMLProviders response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSAMLProvidersResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListSAMLProviders action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSAMLProvidersResult.SAMLProviderList">
            <summary>
            The list of SAML providers for this account.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSAMLProvidersResponse.ListSAMLProvidersResult">
            <summary>
            Gets and sets the ListSAMLProvidersResult property.
            Contains the result of a successful invocation of the ListSAMLProviders action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListServerCertificatesRequest">
            <summary>
            Container for the parameters to the ListServerCertificates operation.
            <para>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</para> <para>You
            can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesRequest.PathPrefix">
            <summary>
            The path prefix for filtering the results. For example: <c>/company/servercerts</c> would get all server certificates for which the path
            starts with <c>/company/servercerts</c>. This parameter is optional. If it is not included, it defaults to a slash (/), listing all server
            certificates.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>\u002F[\u0021-\u007F]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of server certificates you want in the response. If there are
            additional server certificates beyond the maximum you specify, the <c>IsTruncated</c> response element will be set to <c>true</c>. This
            parameter is optional. If you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListServerCertificatesResponse">
            <summary>
            Returns information about the  ListServerCertificates response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListServerCertificatesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListServerCertificates action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesResult.ServerCertificateMetadataList">
            <summary>
            A list of server certificates.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more server certificates to list. If your results were truncated, you can make a subsequent
            pagination request using the <c>Marker</c> request parameter to retrieve more server certificates in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListServerCertificatesResponse.ListServerCertificatesResult">
            <summary>
            Gets and sets the ListServerCertificatesResult property.
            Contains the result of a successful invocation of the ListServerCertificates action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSigningCertificatesRequest">
            <summary>
            Container for the parameters to the ListSigningCertificates operation.
            <para>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of signing certificates, you can still paginate the results using the
            <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the user name is determined
            implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this
            API can be used to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesRequest.UserName">
            <summary>
            The name of the user.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of certificate IDs you want in the response. If there are additional
            certificate IDs beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you
            do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSigningCertificatesResponse">
            <summary>
            Returns information about the  ListSigningCertificates response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListSigningCertificatesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListSigningCertificates action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesResult.Certificates">
            <summary>
            A list of the user's signing certificate information.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more certificate IDs to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more certificates in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListSigningCertificatesResponse.ListSigningCertificatesResult">
            <summary>
            Gets and sets the ListSigningCertificatesResult property.
            Contains the result of a successful invocation of the ListSigningCertificates action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUserPoliciesRequest">
            <summary>
            Container for the parameters to the ListUserPolicies operation.
            <para>Lists the names of the policies associated with the specified user. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesRequest.UserName">
            <summary>
            The name of the user to list policies for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesRequest.Marker">
            <summary>
            Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated.
            Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesRequest.MaxItems">
            <summary>
            Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional
            policy names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If you do
            not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUserPoliciesResponse">
            <summary>
            Returns information about the  ListUserPolicies response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUserPoliciesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListUserPolicies action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesResult.PolicyNames">
            <summary>
            A list of policy names.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more policy names in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUserPoliciesResponse.ListUserPoliciesResult">
            <summary>
            Gets and sets the ListUserPoliciesResult property.
            Contains the result of a successful invocation of the ListUserPolicies action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            <para>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersRequest.PathPrefix">
            <summary>
            The path prefix for filtering the results. For example: <c>/division_abc/subdivision_xyz/</c>, which would get all user names whose path
            starts with <c>/division_abc/subdivision_xyz/</c>. This parameter is optional. If it is not included, it defaults to a slash (/), listing
            all user names.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>\u002F[\u0021-\u007F]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUsersResponse">
            <summary>
            Returns information about the  ListUsers response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListUsersResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListUsers action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersResult.Users">
            <summary>
            A list of users.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination
            request using the <c>Marker</c> request parameter to retrieve more users in the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListUsersResponse.ListUsersResult">
            <summary>
            Gets and sets the ListUsersResult property.
            Contains the result of a successful invocation of the ListUsers action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest">
            <summary>
            Container for the parameters to the ListVirtualMFADevices operation.
            <para> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action
            returns a list of all virtual MFA devices. Assignment status can be <c>Assigned</c> ,
            <c>Unassigned</c> , or <c>Any</c> . </para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest.AssignmentStatus">
            <summary>
            The status (unassigned or assigned) of the devices to list. If you do not specify an <c>AssignmentStatus</c>, the action defaults to
            <c>Any</c> which lists both assigned and unassigned virtual MFA devices.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Assigned, Unassigned, Any</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest.Marker">
            <summary>
            Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are
            truncated. Set it to the value of the <c>Marker</c> element in the response you just received.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest.MaxItems">
            <summary>
            Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are
            additional user names beyond the maximum you specify, the <c>IsTruncated</c> response element is <c>true</c>. This parameter is optional. If
            you do not include it, it defaults to 100.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 1000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListVirtualMFADevicesResponse">
            <summary>
            Returns information about the  ListVirtualMFADevices response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ListVirtualMFADevicesResult">
            <summary>
            <para>Contains the result of a successful invocation of the ListVirtualMFADevices action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesResult.IsTruncated">
            <summary>
            A flag that indicates whether there are more items to list. If your results were truncated, you can make a subsequent pagination request
            using the <c>Marker</c> request parameter to retrieve more items the list.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesResult.Marker">
            <summary>
            If <c>IsTruncated</c> is <c>true</c>, this element is present and contains the value to use for the <c>Marker</c> parameter in a subsequent
            pagination request.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 320</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ListVirtualMFADevicesResponse.ListVirtualMFADevicesResult">
            <summary>
            Gets and sets the ListVirtualMFADevicesResult property.
            Contains the result of a successful invocation of the ListVirtualMFADevices action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.LoginProfile">
            <summary>
            <para>The LoginProfile data type contains the user name and password create date for a user.</para> <para> This data type is used as a
            response element in the actions CreateLoginProfile and GetLoginProfile. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.LoginProfile.UserName">
            <summary>
            The name of the user, which can be used for signing into the AWS Management Console.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.LoginProfile.CreateDate">
            <summary>
            The date when the password for the user was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.MalformedCertificateException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.MalformedCertificateException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedCertificateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.MFADevice">
            <summary>
            <para>The <c>MFADevice</c> data type contains information about an MFA device.</para> <para> This data type is used as a response element in
            the action ListMFADevices. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.MFADevice.UserName">
            <summary>
            The user with whom the MFA device is associated.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.MFADevice.SerialNumber">
            <summary>
            The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.MFADevice.EnableDate">
            <summary>
            The date when the MFA device was enabled for the user.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.NoSuchEntityException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.NoSuchEntityException.#ctor(System.String)">
            <summary>
            Constructs a new NoSuchEntityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PasswordPolicy">
            <summary>
            <para>The PasswordPolicy data type contains information about the account password policy.</para> <para> This data type is used as a
            response element in the action GetAccountPasswordPolicy. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.MinimumPasswordLength">
            <summary>
            Minimum length to require for IAM user passwords.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>6 - 128</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.RequireSymbols">
            <summary>
            Specifies whether to require symbols for IAM user passwords.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.RequireNumbers">
            <summary>
            Specifies whether to require numbers for IAM user passwords.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.RequireUppercaseCharacters">
            <summary>
            Specifies whether to require uppercase characters for IAM user passwords.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.RequireLowercaseCharacters">
            <summary>
            Specifies whether to require lowercase characters for IAM user passwords.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PasswordPolicy.AllowUsersToChangePassword">
            <summary>
            Specifies whether to allow IAM users to change their own password.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PasswordPolicyViolationException">
            <summary>
             AmazonIdentityManagementService exception
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.Model.PasswordPolicyViolationException.#ctor(System.String)">
            <summary>
            Constructs a new PasswordPolicyViolationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutGroupPolicyRequest">
            <summary>
            Container for the parameters to the PutGroupPolicy operation.
            <para>Adds (or updates) a policy document associated with the specified group. For information about policies, refer to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html" >Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a group, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutGroupPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests
            in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutGroupPolicyRequest.GroupName">
            <summary>
            Name of the group to associate the policy with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutGroupPolicyRequest.PolicyName">
            <summary>
            Name of the policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutGroupPolicyRequest.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutGroupPolicyResponse">
            <summary>
            Returns information about the PutGroupPolicy response metadata.
            The PutGroupPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutRolePolicyRequest">
            <summary>
            Container for the parameters to the PutRolePolicy operation.
            <para>Adds (or updates) a policy document associated with the specified role. For information about policies, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html" >Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the policies you can associate with a role, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutRolePolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutRolePolicyRequest.RoleName">
            <summary>
            Name of the role to associate the policy with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutRolePolicyRequest.PolicyName">
            <summary>
            Name of the policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutRolePolicyRequest.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutRolePolicyResponse">
            <summary>
            Returns information about the PutRolePolicy response metadata.
            The PutRolePolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutUserPolicyRequest">
            <summary>
            Container for the parameters to the PutUserPolicy operation.
            <para>Adds (or updates) a policy document associated with the specified user. For information about policies, refer to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html" >Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a user, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html" >Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutUserPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutUserPolicyRequest.UserName">
            <summary>
            Name of the user to associate the policy with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutUserPolicyRequest.PolicyName">
            <summary>
            Name of the policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.PutUserPolicyRequest.PolicyDocument">
            <summary>
            The policy document.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.PutUserPolicyResponse">
            <summary>
            Returns information about the PutUserPolicy response metadata.
            The PutUserPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest">
            <summary>
            Container for the parameters to the RemoveRoleFromInstanceProfile operation.
            <para>Removes the specified role from the specified instance profile.</para> <para><b>IMPORTANT:</b>Make sure you do not have any Amazon EC2
            instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is
            associated with a running instance will break any applications running on the instance.</para> <para>For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a> .
            For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html"
            >About Instance Profiles</a> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest.InstanceProfileName">
            <summary>
            Name of the instance profile to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest.RoleName">
            <summary>
            Name of the role to remove.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileResponse">
            <summary>
            Returns information about the RemoveRoleFromInstanceProfile response metadata.
            The RemoveRoleFromInstanceProfile operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest">
            <summary>
            Container for the parameters to the RemoveUserFromGroup operation.
            <para>Removes the specified user from the specified group.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest.GroupName">
            <summary>
            Name of the group to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest.UserName">
            <summary>
            Name of the user to remove.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.RemoveUserFromGroupResponse">
            <summary>
            Returns information about the RemoveUserFromGroup response metadata.
            The RemoveUserFromGroup operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ResyncMFADeviceRequest">
            <summary>
            Container for the parameters to the ResyncMFADevice operation.
            <para>Synchronizes the specified MFA device with AWS servers.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ResyncMFADeviceRequest.UserName">
            <summary>
            Name of the user whose MFA device you want to resynchronize.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ResyncMFADeviceRequest.SerialNumber">
            <summary>
            Serial number that uniquely identifies the MFA device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ResyncMFADeviceRequest.AuthenticationCode1">
            <summary>
            An authentication code emitted by the device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ResyncMFADeviceRequest.AuthenticationCode2">
            <summary>
            A subsequent authentication code emitted by the device.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ResyncMFADeviceResponse">
            <summary>
            Returns information about the ResyncMFADevice response metadata.
            The ResyncMFADevice operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Role">
            <summary>
            <para>The Role data type contains information about a role.</para> <para> This data type is used as a response element in the following
            actions:</para>
            <ul>
            <li> <para> CreateRole </para> </li>
            <li> <para> GetRole </para> </li>
            <li> <para> ListRoles </para> </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.Path">
            <summary>
            Path to the role. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.RoleName">
            <summary>
            The name identifying the role.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.RoleId">
            <summary>
            The stable and unique string identifying the role. For more information about IDs, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.Arn">
            <summary>
            The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.CreateDate">
            <summary>
            The date when the role was created.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.Role.AssumeRolePolicyDocument">
            <summary>
            The policy that grants an entity permission to assume the role. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.SAMLProviderListEntry">
            <summary>
            <para>The list of SAML providers for this account.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SAMLProviderListEntry.Arn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SAMLProviderListEntry.ValidUntil">
            <summary>
            The expiration date and time for the SAML provider.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SAMLProviderListEntry.CreateDate">
            <summary>
            The date and time when the SAML provider was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ServerCertificate">
            <summary>
            <para>The ServerCertificate data type contains information about a server certificate.</para> <para>This data type is used as a response
            element in the action GetServerCertificate.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificate.ServerCertificateMetadata">
            <summary>
            The meta information of the server certificate, such as its name, path, ID, and ARN.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificate.CertificateBody">
            <summary>
            The contents of the public key certificate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 16384</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificate.CertificateChain">
            <summary>
            The contents of the public key certificate chain.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2097152</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.ServerCertificateMetadata">
            <summary>
            <para>ServerCertificateMetadata contains information about a server certificate without its certificate body, certificate chain, and private
            key.</para> <para>This data type is used as a response element in the action UploadServerCertificate and ListServerCertificates.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificateMetadata.Path">
            <summary>
            Path to the server certificate. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificateMetadata.ServerCertificateName">
            <summary>
            The name that identifies the server certificate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificateMetadata.ServerCertificateId">
            <summary>
            The stable and unique string identifying the server certificate. For more information about IDs, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificateMetadata.Arn">
            <summary>
            The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.ServerCertificateMetadata.UploadDate">
            <summary>
            The date when the server certificate was uploaded.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.SigningCertificate">
            <summary>
            <para>The SigningCertificate data type contains information about an X.509 signing certificate.</para> <para> This data type is used as a
            response element in the actions UploadSigningCertificate and ListSigningCertificates. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SigningCertificate.UserName">
            <summary>
            Name of the user the signing certificate is associated with.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SigningCertificate.CertificateId">
            <summary>
            The ID for the signing certificate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>24 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SigningCertificate.CertificateBody">
            <summary>
            The contents of the signing certificate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 16384</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SigningCertificate.Status">
            <summary>
            The status of the signing certificate. <c>Active</c> means the key is valid for API calls, while <c>Inactive</c> means it is not.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Active, Inactive</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.SigningCertificate.UploadDate">
            <summary>
            The date when the signing certificate was uploaded.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAccessKeyRequest">
            <summary>
            Container for the parameters to the UpdateAccessKey operation.
            <para>Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key
            as part of a key rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based
            on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to
            manage root credentials even if the AWS account has no associated users.</para> <para>For information about rotating keys, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html" >Managing Keys and Certificates</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateAccessKeyRequest.UserName">
            <summary>
            Name of the user whose key you want to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateAccessKeyRequest.AccessKeyId">
            <summary>
            The access key ID of the secret access key you want to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateAccessKeyRequest.Status">
            <summary>
            The status you want to assign to the secret access key. <c>Active</c> means the key can be used for API calls to AWS, while <c>Inactive</c>
            means the key cannot be used.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Active, Inactive</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAccessKeyResponse">
            <summary>
            Returns information about the UpdateAccessKey response metadata.
            The UpdateAccessKey operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest">
            <summary>
            Container for the parameters to the UpdateAccountPasswordPolicy operation.
            <para>Updates the password policy settings for the account. For more information about using a password policy, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html" >Managing an IAM Password Policy</a> .</para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyResponse">
            <summary>
            Returns information about the UpdateAccountPasswordPolicy response metadata.
            The UpdateAccountPasswordPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest">
            <summary>
            Container for the parameters to the UpdateAssumeRolePolicy operation.
            <para>Updates the policy that grants an entity permission to assume a role. Currently, only an Amazon EC2 instance can assume a role. For
            more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Working with Roles</a>
            .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest.RoleName">
            <summary>
            Name of the role to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest.PolicyDocument">
            <summary>
            The policy that grants an entity permission to assume the role.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 131072</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyResponse">
            <summary>
            Returns information about the UpdateAssumeRolePolicy response metadata.
            The UpdateAssumeRolePolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateGroupRequest">
            <summary>
            Container for the parameters to the UpdateGroup operation.
            <para>Updates the name and/or the path of the specified group.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a group's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a group name the requester must have appropriate permissions on both the source object and the target object.
            For example, to change Managers to MGRs, the entity making the request must have permission on Managers and MGRs, or must have permission on
            all (*). For more information about permissions, see Permissions and Policies. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateGroupRequest.GroupName">
            <summary>
            Name of the group to update. If you're changing the name of the group, this is the original name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateGroupRequest.NewPath">
            <summary>
            New path for the group. Only include this if changing the group's path.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateGroupRequest.NewGroupName">
            <summary>
            New name for the group. Only include this if changing the group's name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateGroupResponse">
            <summary>
            Returns information about the UpdateGroup response metadata.
            The UpdateGroup operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateLoginProfileRequest">
            <summary>
            Container for the parameters to the UpdateLoginProfile operation.
            <para>Changes the password for the specified user.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateLoginProfileRequest.UserName">
            <summary>
            Name of the user whose password you want to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateLoginProfileRequest.Password">
            <summary>
            The new password for the user name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateLoginProfileResponse">
            <summary>
            Returns information about the UpdateLoginProfile response metadata.
            The UpdateLoginProfile operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest">
            <summary>
            Container for the parameters to the UpdateSAMLProvider operation.
            <para>Updates the metadata document for an existing SAML provider.</para> <para><b>NOTE:</b>This operation requires Signature Version
            4.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest.SAMLMetadataDocument">
            <summary>
            An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration
            information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must
            generate the metadata document using the identity management software that is used as your organization's IdP.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1000 - 10000000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest.SAMLProviderArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateSAMLProviderResponse">
            <summary>
            Returns information about the  UpdateSAMLProvider response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateSAMLProviderResult">
            <summary>
            <para>Contains the result of a successful invocation of the UpdateSAMLProvider action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSAMLProviderResult.SAMLProviderArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider that was updated.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSAMLProviderResponse.UpdateSAMLProviderResult">
            <summary>
            Gets and sets the UpdateSAMLProviderResult property.
            Contains the result of a successful invocation of the UpdateSAMLProvider action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateServerCertificateRequest">
            <summary>
            Container for the parameters to the UpdateServerCertificate operation.
            <para>Updates the name and/or the path of the specified server certificate.</para> <para><b>IMPORTANT:</b> You should understand the
            implications of changing a server certificate's path or name. For more information, see Managing Server Certificates in Using AWS Identity
            and Access Management. </para> <para><b>NOTE:</b>To change a server certificate name the requester must have appropriate permissions on both
            the source object and the target object. For example, to change the name from ProductionCert to ProdCert, the entity making the request must
            have permission on ProductionCert and ProdCert, or must have permission on all (*). For more information about permissions, see Permissions
            and Policies. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateServerCertificateRequest.ServerCertificateName">
            <summary>
            The name of the server certificate that you want to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateServerCertificateRequest.NewPath">
            <summary>
            The new path for the server certificate. Include this only if you are updating the server certificate's path.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateServerCertificateRequest.NewServerCertificateName">
            <summary>
            The new name for the server certificate. Include this only if you are updating the server certificate's name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateServerCertificateResponse">
            <summary>
            Returns information about the UpdateServerCertificate response metadata.
            The UpdateServerCertificate operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest">
            <summary>
            Container for the parameters to the UpdateSigningCertificate operation.
            <para>Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a
            user's signing certificate as part of a certificate rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the
            UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under
            the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</para> <para>For
            information about rotating certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html"
            >Managing Keys and Certificates</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest.UserName">
            <summary>
            Name of the user the signing certificate belongs to.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest.CertificateId">
            <summary>
            The ID of the signing certificate you want to update.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>24 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest.Status">
            <summary>
            The status you want to assign to the certificate. <c>Active</c> means the certificate can be used for API calls to AWS, while
            <c>Inactive</c> means the certificate cannot be used.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Allowed Values</term>
                    <description>Active, Inactive</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateSigningCertificateResponse">
            <summary>
            Returns information about the UpdateSigningCertificate response metadata.
            The UpdateSigningCertificate operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateUserRequest">
            <summary>
            Container for the parameters to the UpdateUser operation.
            <para>Updates the name and/or the path of the specified user.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a user's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a user name the requester must have appropriate permissions on both the source object and the target object. For
            example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*).
            For more information about permissions, see Permissions and Policies. </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateUserRequest.UserName">
            <summary>
            Name of the user to update. If you're changing the name of the user, this is the original user name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateUserRequest.NewPath">
            <summary>
            New path for the user. Include this parameter only if you're changing the user's path.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UpdateUserRequest.NewUserName">
            <summary>
            New name for the user. Include this parameter only if you're changing the user's name.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UpdateUserResponse">
            <summary>
            Returns information about the UpdateUser response metadata.
            The UpdateUser operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadServerCertificateRequest">
            <summary>
            Container for the parameters to the UploadServerCertificate operation.
            <para>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private
            key, and an optional certificate chain, which should all be PEM-encoded.</para> <para>For information about the number of server
            certificates you can upload, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html"
            >Limitations on IAM Entities</a> in <i>Using AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because the body of the
            public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling
            UploadServerCertificate. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateRequest.Path">
            <summary>
            The path for the server certificate. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>. This parameter is optional. If it is not included, it defaults to a slash (/).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateRequest.ServerCertificateName">
            <summary>
            The name for the server certificate. Do not include the path in this value.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateRequest.CertificateBody">
            <summary>
            The contents of the public key certificate in PEM-encoded format.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 16384</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateRequest.PrivateKey">
            <summary>
            The contents of the private key in PEM-encoded format.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 16384</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateRequest.CertificateChain">
            <summary>
            The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2097152</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadServerCertificateResponse">
            <summary>
            Returns information about the  UploadServerCertificate response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadServerCertificateResult">
            <summary>
            <para>Contains the result of a successful invocation of the UploadServerCertificate action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateResult.ServerCertificateMetadata">
            <summary>
            The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadServerCertificateResponse.UploadServerCertificateResult">
            <summary>
            Gets and sets the UploadServerCertificateResult property.
            Contains the result of a successful invocation of the UploadServerCertificate action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadSigningCertificateRequest">
            <summary>
            Container for the parameters to the UploadSigningCertificate operation.
            <para>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to
            validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <c>Active</c>
            .</para> <para>If the <c>UserName</c> field is not specified, the user name is determined implicitly based on the AWS access key ID used to
            sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if
            the AWS account has no associated users.</para> <para><b>NOTE:</b>Because the body of a X.509 certificate can be large, you should use POST
            rather than GET when calling UploadSigningCertificate. For information about setting up signatures and authorization through the API, go to
            Signing AWS API Requests in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query
            Requests in Using IAM.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadSigningCertificateRequest.UserName">
            <summary>
            Name of the user the signing certificate is for.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 128</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadSigningCertificateRequest.CertificateBody">
            <summary>
            The contents of the signing certificate.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 16384</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadSigningCertificateResponse">
            <summary>
            Returns information about the  UploadSigningCertificate response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.UploadSigningCertificateResult">
            <summary>
            <para>Contains the result of a successful invocation of the UploadSigningCertificate action.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadSigningCertificateResult.Certificate">
            <summary>
            Information about the certificate.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.UploadSigningCertificateResponse.UploadSigningCertificateResult">
            <summary>
            Gets and sets the UploadSigningCertificateResult property.
            Contains the result of a successful invocation of the UploadSigningCertificate action.
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.User">
            <summary>
            <para>The User data type contains information about a user.</para> <para> This data type is used as a response element in the following
            actions:</para>
            <ul>
            <li> <para> CreateUser </para> </li>
            <li> <para> GetUser </para> </li>
            <li> <para> ListUsers </para> </li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.User.Path">
            <summary>
            Path to the user. For more information about paths, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 512</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>(\u002F)|(\u002F[\u0021-\u007F]+\u002F)</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.User.UserName">
            <summary>
            The name identifying the user.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 64</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.User.UserId">
            <summary>
            The stable and unique string identifying the user. For more information about IDs, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.User.Arn">
            <summary>
            The Amazon Resource Name (ARN) specifying the user. For more information about ARNs and how to use them in policies, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in
            <i>Using AWS Identity and Access Management</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.User.CreateDate">
            <summary>
            The date when the user was created.
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.VirtualMFADevice">
            <summary>
            <para>The <c>VirtualMFADevice</c> data type contains information about a virtual MFA device.</para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.VirtualMFADevice.SerialNumber">
            <summary>
            The serial number associated with <c>VirtualMFADevice</c>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.VirtualMFADevice.Base32StringSeed">
            <summary>
            The Base32 seed defined as specified in <a href="http://www.ietf.org/rfc/rfc3548.txt" target="_blank">RFC3548</a>. The
            <c>Base32StringSeed</c> is Base64-encoded.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.VirtualMFADevice.QRCodePNG">
            <summary>
            A QR code PNG image that encodes <i>otpauth://totp/$virtualMFADeviceName@$AccountName? secret=$Base32String</i> where $virtualMFADeviceName
            is one of the create call arguments, AccountName is the user name if set (accountId otherwise), and Base32String is the seed in Base32
            format. The <c>Base32String</c> is Base64-encoded.
             
            </summary>
        </member>
        <member name="P:Amazon.IdentityManagement.Model.VirtualMFADevice.User">
            <summary>
            The User data type contains information about a user. This data type is used as a response element in the following actions: <ul>
            <li><a>CreateUser</a></li> <li><a>GetUser</a></li> <li><a>ListUsers</a></li> </ul>
             
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AccessKeyMetadataUnmarshaller">
            <summary>
              AccessKeyMetadata Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AccessKeyUnmarshaller">
            <summary>
              AccessKey Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AddRoleToInstanceProfileRequestMarshaller">
            <summary>
            Add Role To Instance Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AddRoleToInstanceProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AddRoleToInstanceProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AddUserToGroupRequestMarshaller">
            <summary>
            Add User To Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.AddUserToGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AddUserToGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller">
            <summary>
            Change Password Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ChangePassword operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateAccessKeyRequestMarshaller">
            <summary>
            Create Access Key Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateAccessKeyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateAccessKey operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateAccountAliasRequestMarshaller">
            <summary>
            Create Account Alias Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateAccountAliasResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateAccountAlias operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller">
            <summary>
            Create Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateInstanceProfileRequestMarshaller">
            <summary>
            Create Instance Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateInstanceProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateInstanceProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateLoginProfileRequestMarshaller">
            <summary>
            Create Login Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateLoginProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateLoginProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateRoleRequestMarshaller">
            <summary>
            Create Role Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateRoleResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateRole operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateSAMLProviderRequestMarshaller">
            <summary>
            Create S A M L Provider Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateSAMLProviderResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateSAMLProvider operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateUserRequestMarshaller">
            <summary>
            Create User Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateUserResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateUser operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateVirtualMFADeviceRequestMarshaller">
            <summary>
            Create Virtual M F A Device Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.CreateVirtualMFADeviceResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CreateVirtualMFADevice operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeactivateMFADeviceRequestMarshaller">
            <summary>
            Deactivate M F A Device Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeactivateMFADeviceResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeactivateMFADevice operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccessKeyRequestMarshaller">
            <summary>
            Delete Access Key Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccessKeyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteAccessKey operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccountAliasRequestMarshaller">
            <summary>
            Delete Account Alias Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccountAliasResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteAccountAlias operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccountPasswordPolicyRequestMarshaller">
            <summary>
            Delete Account Password Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteAccountPasswordPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteAccountPasswordPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteGroupPolicyRequestMarshaller">
            <summary>
            Delete Group Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteGroupPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteGroupPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller">
            <summary>
            Delete Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteInstanceProfileRequestMarshaller">
            <summary>
            Delete Instance Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteInstanceProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteInstanceProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteLoginProfileRequestMarshaller">
            <summary>
            Delete Login Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteLoginProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteLoginProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteRolePolicyRequestMarshaller">
            <summary>
            Delete Role Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteRolePolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteRolePolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteRoleRequestMarshaller">
            <summary>
            Delete Role Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteRoleResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteRole operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteSAMLProviderRequestMarshaller">
            <summary>
            Delete S A M L Provider Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteSAMLProviderResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteSAMLProvider operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteServerCertificateRequestMarshaller">
            <summary>
            Delete Server Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteServerCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteServerCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteSigningCertificateRequestMarshaller">
            <summary>
            Delete Signing Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteSigningCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteSigningCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteUserPolicyRequestMarshaller">
            <summary>
            Delete User Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteUserPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteUserPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            Delete User Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteUser operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteVirtualMFADeviceRequestMarshaller">
            <summary>
            Delete Virtual M F A Device Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.DeleteVirtualMFADeviceResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteVirtualMFADevice operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.EnableMFADeviceRequestMarshaller">
            <summary>
            Enable M F A Device Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.EnableMFADeviceResponseUnmarshaller">
            <summary>
               Response Unmarshaller for EnableMFADevice operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetAccountPasswordPolicyRequestMarshaller">
            <summary>
            Get Account Password Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetAccountPasswordPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetAccountPasswordPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetAccountSummaryRequestMarshaller">
            <summary>
            Get Account Summary Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetAccountSummaryResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetAccountSummary operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetGroupPolicyRequestMarshaller">
            <summary>
            Get Group Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetGroupPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetGroupPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller">
            <summary>
            Get Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetInstanceProfileRequestMarshaller">
            <summary>
            Get Instance Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetInstanceProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetInstanceProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetLoginProfileRequestMarshaller">
            <summary>
            Get Login Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetLoginProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetLoginProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetRolePolicyRequestMarshaller">
            <summary>
            Get Role Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetRolePolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetRolePolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetRoleRequestMarshaller">
            <summary>
            Get Role Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetRoleResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetRole operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetSAMLProviderRequestMarshaller">
            <summary>
            Get S A M L Provider Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetSAMLProviderResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetSAMLProvider operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetServerCertificateRequestMarshaller">
            <summary>
            Get Server Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetServerCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetServerCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetUserPolicyRequestMarshaller">
            <summary>
            Get User Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetUserPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetUserPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetUserRequestMarshaller">
            <summary>
            Get User Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetUser operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.GroupUnmarshaller">
            <summary>
              Group Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.InstanceProfileUnmarshaller">
            <summary>
              InstanceProfile Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListAccessKeysRequestMarshaller">
            <summary>
            List Access Keys Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListAccessKeysResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListAccessKeys operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListAccountAliasesRequestMarshaller">
            <summary>
            List Account Aliases Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListAccountAliasesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListAccountAliases operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupPoliciesRequestMarshaller">
            <summary>
            List Group Policies Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupPoliciesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListGroupPolicies operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupsForUserRequestMarshaller">
            <summary>
            List Groups For User Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupsForUserResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListGroupsForUser operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller">
            <summary>
            List Groups Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListGroups operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListInstanceProfilesForRoleRequestMarshaller">
            <summary>
            List Instance Profiles For Role Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListInstanceProfilesForRoleResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListInstanceProfilesForRole operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListInstanceProfilesRequestMarshaller">
            <summary>
            List Instance Profiles Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListInstanceProfilesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListInstanceProfiles operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListMFADevicesRequestMarshaller">
            <summary>
            List M F A Devices Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListMFADevicesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListMFADevices operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListRolePoliciesRequestMarshaller">
            <summary>
            List Role Policies Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListRolePoliciesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListRolePolicies operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListRolesRequestMarshaller">
            <summary>
            List Roles Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListRolesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListRoles operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListSAMLProvidersRequestMarshaller">
            <summary>
            List S A M L Providers Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListSAMLProvidersResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListSAMLProviders operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListServerCertificatesRequestMarshaller">
            <summary>
            List Server Certificates Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListServerCertificatesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListServerCertificates operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListSigningCertificatesRequestMarshaller">
            <summary>
            List Signing Certificates Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListSigningCertificatesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListSigningCertificates operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListUserPoliciesRequestMarshaller">
            <summary>
            List User Policies Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListUserPoliciesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListUserPolicies operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            List Users Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListUsers operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListVirtualMFADevicesRequestMarshaller">
            <summary>
            List Virtual M F A Devices Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ListVirtualMFADevicesResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListVirtualMFADevices operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.LoginProfileUnmarshaller">
            <summary>
              LoginProfile Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.MFADeviceUnmarshaller">
            <summary>
              MFADevice Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PasswordPolicyUnmarshaller">
            <summary>
              PasswordPolicy Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutGroupPolicyRequestMarshaller">
            <summary>
            Put Group Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutGroupPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutGroupPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutRolePolicyRequestMarshaller">
            <summary>
            Put Role Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutRolePolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutRolePolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutUserPolicyRequestMarshaller">
            <summary>
            Put User Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.PutUserPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutUserPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.RemoveRoleFromInstanceProfileRequestMarshaller">
            <summary>
            Remove Role From Instance Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.RemoveRoleFromInstanceProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for RemoveRoleFromInstanceProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.RemoveUserFromGroupRequestMarshaller">
            <summary>
            Remove User From Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.RemoveUserFromGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for RemoveUserFromGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ResyncMFADeviceRequestMarshaller">
            <summary>
            Resync M F A Device Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ResyncMFADeviceResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ResyncMFADevice operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.RoleUnmarshaller">
            <summary>
              Role Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.SAMLProviderListEntryUnmarshaller">
            <summary>
              SAMLProviderListEntry Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ServerCertificateMetadataUnmarshaller">
            <summary>
              ServerCertificateMetadata Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.ServerCertificateUnmarshaller">
            <summary>
              ServerCertificate Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.SigningCertificateUnmarshaller">
            <summary>
              SigningCertificate Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAccessKeyRequestMarshaller">
            <summary>
            Update Access Key Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAccessKeyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateAccessKey operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAccountPasswordPolicyRequestMarshaller">
            <summary>
            Update Account Password Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAccountPasswordPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateAccountPasswordPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAssumeRolePolicyRequestMarshaller">
            <summary>
            Update Assume Role Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateAssumeRolePolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateAssumeRolePolicy operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller">
            <summary>
            Update Group Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateGroup operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateLoginProfileRequestMarshaller">
            <summary>
            Update Login Profile Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateLoginProfileResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateLoginProfile operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateSAMLProviderRequestMarshaller">
            <summary>
            Update S A M L Provider Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateSAMLProviderResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateSAMLProvider operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateServerCertificateRequestMarshaller">
            <summary>
            Update Server Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateServerCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateServerCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateSigningCertificateRequestMarshaller">
            <summary>
            Update Signing Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateSigningCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateSigningCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateUserRequestMarshaller">
            <summary>
            Update User Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UpdateUserResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UpdateUser operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UploadServerCertificateRequestMarshaller">
            <summary>
            Upload Server Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UploadServerCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UploadServerCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UploadSigningCertificateRequestMarshaller">
            <summary>
            Upload Signing Certificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UploadSigningCertificateResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UploadSigningCertificate operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.UserUnmarshaller">
            <summary>
              User Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.Model.Internal.MarshallTransformations.VirtualMFADeviceUnmarshaller">
            <summary>
              VirtualMFADevice Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.AmazonS3Client">
            <summary>
            Implementation for accessing AmazonS3.
            
            
            </summary>
        </member>
        <member name="T:Amazon.S3.IAmazonS3">
            <summary>
            Interface for Amazon S3 Clients.
            For more information about Amazon S3, go to <see href="http://aws.amazon.com/s3"/>
            </summary>
            <summary>
            Interface for Amazon S3 Clients.
            For more information about Amazon S3, go to <see href="http://aws.amazon.com/s3" />
            </summary>
            <summary>
            Interface for accessing AmazonS3.
            
            
            </summary>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetPreSignedURL(Amazon.S3.Model.GetPreSignedUrlRequest)">
            <summary>
            Create a signed URL allowing access to a resource that would 
            usually require authentication.
            </summary>
            <remarks>
            <para>
            When using query string authentication you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            </para>
            <para>
            A PreSigned URL can be generated for GET, PUT, DELETE and HEAD
            operations on your bucketName, keys, and versions.
            </para>
            </remarks>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Amazon.S3.IAmazonS3.AbortMultipartUpload(Amazon.S3.Model.AbortMultipartUploadRequest)">
            <summary>
            <para>Aborts a multipart upload.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.AbortMultipartUploadAsync(Amazon.S3.Model.AbortMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.AbortMultipartUpload(Amazon.S3.Model.AbortMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CompleteMultipartUpload(Amazon.S3.Model.CompleteMultipartUploadRequest)">
            <summary>
            <para>Completes a multipart upload by assembling previously uploaded parts.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload service method on
            AmazonS3.</param>
            
            <returns>The response from the CompleteMultipartUpload service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CompleteMultipartUploadAsync(Amazon.S3.Model.CompleteMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CompleteMultipartUpload(Amazon.S3.Model.CompleteMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyObject(Amazon.S3.Model.CopyObjectRequest)">
            <summary>
            <para>Creates a copy of an object that is already stored in Amazon S3.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject service method on AmazonS3.</param>
            
            <returns>The response from the CopyObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyObjectAsync(Amazon.S3.Model.CopyObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CopyObject(Amazon.S3.Model.CopyObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyPart(Amazon.S3.Model.CopyPartRequest)">
            <summary>
            <para>Uploads a part by copying data from an existing object as data source.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart service method on AmazonS3.</param>
            
            <returns>The response from the CopyPart service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyPartAsync(Amazon.S3.Model.CopyPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyPart operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CopyPart(Amazon.S3.Model.CopyPartRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucket(Amazon.S3.Model.DeleteBucketRequest)">
            <summary>
            <para>Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket
            itself can be deleted.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketAsync(Amazon.S3.Model.DeleteBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucket(Amazon.S3.Model.DeleteBucketRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketPolicy(Amazon.S3.Model.DeleteBucketPolicyRequest)">
            <summary>
            <para>Deletes the policy from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketPolicyAsync(Amazon.S3.Model.DeleteBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketPolicy(Amazon.S3.Model.DeleteBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketTagging(Amazon.S3.Model.DeleteBucketTaggingRequest)">
            <summary>
            <para>Deletes the tags from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketTaggingAsync(Amazon.S3.Model.DeleteBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketTagging(Amazon.S3.Model.DeleteBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketWebsite(Amazon.S3.Model.DeleteBucketWebsiteRequest)">
            <summary>
            <para>This operation removes the website configuration from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketWebsiteAsync(Amazon.S3.Model.DeleteBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketWebsite(Amazon.S3.Model.DeleteBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteCORSConfiguration(Amazon.S3.Model.DeleteCORSConfigurationRequest)">
            <summary>
            <para>Deletes the cors configuration information set for the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteCORSConfigurationAsync(Amazon.S3.Model.DeleteCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteCORSConfiguration(Amazon.S3.Model.DeleteCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteLifecycleConfiguration(Amazon.S3.Model.DeleteLifecycleConfigurationRequest)">
            <summary>
            <para>Deletes the lifecycle configuration from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteLifecycleConfigurationAsync(Amazon.S3.Model.DeleteLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteLifecycleConfiguration(Amazon.S3.Model.DeleteLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObject(Amazon.S3.Model.DeleteObjectRequest)">
            <summary>
            <para>Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object.
            If there isn''t a null version, Amazon S3 does not remove any objects.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject service method on AmazonS3.</param>
            
            <returns>The response from the DeleteObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObjectAsync(Amazon.S3.Model.DeleteObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteObject(Amazon.S3.Model.DeleteObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObjects(Amazon.S3.Model.DeleteObjectsRequest)">
            <summary>
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects service method on AmazonS3.</param>
            
            <returns>The response from the DeleteObjects service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObjectsAsync(Amazon.S3.Model.DeleteObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObjects operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteObjects(Amazon.S3.Model.DeleteObjectsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetACL(Amazon.S3.Model.GetACLRequest)">
            <summary>
            <para>Returns the access control list (ACL) of an object.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL service method on AmazonS3.</param>
            
            <returns>The response from the GetACL service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetACLAsync(Amazon.S3.Model.GetACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetACL operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetACL(Amazon.S3.Model.GetACLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLocation(Amazon.S3.Model.GetBucketLocationRequest)">
            <summary>
            <para>Returns the region the bucket resides in.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketLocation service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLocationAsync(Amazon.S3.Model.GetBucketLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketLocation(Amazon.S3.Model.GetBucketLocationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLogging(Amazon.S3.Model.GetBucketLoggingRequest)">
            <summary>
            <para>Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the
            bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketLogging service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLoggingAsync(Amazon.S3.Model.GetBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLogging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketLogging(Amazon.S3.Model.GetBucketLoggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketNotification(Amazon.S3.Model.GetBucketNotificationRequest)">
            <summary>
            <para>Return the notification configuration of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketNotification service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketNotificationAsync(Amazon.S3.Model.GetBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketNotification operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketNotification(Amazon.S3.Model.GetBucketNotificationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketPolicy(Amazon.S3.Model.GetBucketPolicyRequest)">
            <summary>
            <para>Returns the policy of a specified bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketPolicy service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketPolicyAsync(Amazon.S3.Model.GetBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketPolicy(Amazon.S3.Model.GetBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketRequestPayment(Amazon.S3.Model.GetBucketRequestPaymentRequest)">
            <summary>
            <para>Returns the request payment configuration of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketRequestPayment service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketRequestPaymentAsync(Amazon.S3.Model.GetBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketRequestPayment operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketRequestPayment(Amazon.S3.Model.GetBucketRequestPaymentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketTagging(Amazon.S3.Model.GetBucketTaggingRequest)">
            <summary>
            <para>Returns the tag set associated with the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketTagging service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketTaggingAsync(Amazon.S3.Model.GetBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketTagging(Amazon.S3.Model.GetBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketVersioning(Amazon.S3.Model.GetBucketVersioningRequest)">
            <summary>
            <para>Returns the versioning state of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketVersioning service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketVersioningAsync(Amazon.S3.Model.GetBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketVersioning operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketVersioning(Amazon.S3.Model.GetBucketVersioningRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketWebsite(Amazon.S3.Model.GetBucketWebsiteRequest)">
            <summary>
            <para>Returns the website configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketWebsite service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketWebsiteAsync(Amazon.S3.Model.GetBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketWebsite(Amazon.S3.Model.GetBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetCORSConfiguration(Amazon.S3.Model.GetCORSConfigurationRequest)">
            <summary>
            <para>Returns the cors configuration for the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration service method on AmazonS3.</param>
            
            <returns>The response from the GetCORSConfiguration service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetCORSConfigurationAsync(Amazon.S3.Model.GetCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetCORSConfiguration(Amazon.S3.Model.GetCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetLifecycleConfiguration(Amazon.S3.Model.GetLifecycleConfigurationRequest)">
            <summary>
            <para>Returns the lifecycle configuration information set on the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration service method on
            AmazonS3.</param>
            
            <returns>The response from the GetLifecycleConfiguration service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetLifecycleConfigurationAsync(Amazon.S3.Model.GetLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetLifecycleConfiguration(Amazon.S3.Model.GetLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObject(Amazon.S3.Model.GetObjectRequest)">
            <summary>
            <para>Retrieves objects from Amazon S3.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject service method on AmazonS3.</param>
            
            <returns>The response from the GetObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectAsync(Amazon.S3.Model.GetObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObject(Amazon.S3.Model.GetObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectMetadata(Amazon.S3.Model.GetObjectMetadataRequest)">
            <summary>
            Returns information about a specified object.
            </summary>
            <remarks>
            Retrieves information about a specific object or object size, without actually fetching the object itself.
            This is useful if you're only interested in the object metadata, and don't want to waste bandwidth on the object data.
            The response is identical to the GetObject response, except that there is no response body.
            </remarks>
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata service method on AmazonS3.</param>
            <returns>The response from the HeadObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectMetadataAsync(Amazon.S3.Model.GetObjectMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectMetadata operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObjectMetadata(Amazon.S3.Model.GetObjectMetadataRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectTorrent(Amazon.S3.Model.GetObjectTorrentRequest)">
            <summary>
            <para>Return torrent files from a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent service method on
            AmazonS3.</param>
            
            <returns>The response from the GetObjectTorrent service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectTorrentAsync(Amazon.S3.Model.GetObjectTorrentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectTorrent operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObjectTorrent(Amazon.S3.Model.GetObjectTorrentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.InitiateMultipartUpload(Amazon.S3.Model.InitiateMultipartUploadRequest)">
            <summary>
            <para>Initiates a multipart upload and returns an upload ID.</para>
            </summary>
            <remarks>
            <para>
            After you initiate a multipart upload and upload one or more parts, you must either complete or abort
            the multipart upload in order to stop getting charged for storage of the uploaded parts. Once you
            complete or abort the multipart upload, Amazon S3 will release the stored parts and stop charging you
            for their storage.
            </para>
            </remarks>
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload service method on
            AmazonS3.</param>
            
            <returns>The response from the InitiateMultipartUpload service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.InitiateMultipartUploadAsync(Amazon.S3.Model.InitiateMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.InitiateMultipartUpload(Amazon.S3.Model.InitiateMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListBuckets(Amazon.S3.Model.ListBucketsRequest)">
            <summary>
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets service method on AmazonS3.</param>
            
            <returns>The response from the ListBuckets service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListBucketsAsync(Amazon.S3.Model.ListBucketsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListBuckets operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListBuckets(Amazon.S3.Model.ListBucketsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListBuckets">
            <summary>
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
            
            
            <returns>The response from the ListBuckets service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListMultipartUploads(Amazon.S3.Model.ListMultipartUploadsRequest)">
            <summary>
            <para>This operation lists in-progress multipart uploads.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads service method on
            AmazonS3.</param>
            
            <returns>The response from the ListMultipartUploads service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListMultipartUploadsAsync(Amazon.S3.Model.ListMultipartUploadsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListMultipartUploads(Amazon.S3.Model.ListMultipartUploadsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListObjects(Amazon.S3.Model.ListObjectsRequest)">
            <summary>
            <para>Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a
            subset of the objects in a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects service method on AmazonS3.</param>
            
            <returns>The response from the ListObjects service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListObjectsAsync(Amazon.S3.Model.ListObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListObjects(Amazon.S3.Model.ListObjectsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListParts(Amazon.S3.Model.ListPartsRequest)">
            <summary>
            <para>Lists the parts that have been uploaded for a specific multipart upload.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts service method on AmazonS3.</param>
            
            <returns>The response from the ListParts service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListPartsAsync(Amazon.S3.Model.ListPartsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListParts(Amazon.S3.Model.ListPartsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListVersions(Amazon.S3.Model.ListVersionsRequest)">
            <summary>
            <para>Returns metadata about all of the versions of objects in a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions service method on
            AmazonS3.</param>
            
            <returns>The response from the ListVersions service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListVersionsAsync(Amazon.S3.Model.ListVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVersions operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListVersions(Amazon.S3.Model.ListVersionsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutACL(Amazon.S3.Model.PutACLRequest)">
            <summary>
            <para>uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObjectAcl service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutACLAsync(Amazon.S3.Model.PutACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutACL operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutACL(Amazon.S3.Model.PutACLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucket(Amazon.S3.Model.PutBucketRequest)">
            <summary>
            <para>Creates a new bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket service method on AmazonS3.</param>
            
            <returns>The response from the PutBucket service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketAsync(Amazon.S3.Model.PutBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucket operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucket(Amazon.S3.Model.PutBucketRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketLogging(Amazon.S3.Model.PutBucketLoggingRequest)">
            <summary>
            <para>Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the
            logging status of a bucket, you must be the bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketLoggingAsync(Amazon.S3.Model.PutBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketLogging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketLogging(Amazon.S3.Model.PutBucketLoggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketNotification(Amazon.S3.Model.PutBucketNotificationRequest)">
            <summary>
            <para>Enables notifications of specified events for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketNotificationAsync(Amazon.S3.Model.PutBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketNotification operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketNotification(Amazon.S3.Model.PutBucketNotificationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketPolicy(Amazon.S3.Model.PutBucketPolicyRequest)">
            <summary>
            <para>Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketPolicyAsync(Amazon.S3.Model.PutBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketPolicy(Amazon.S3.Model.PutBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketRequestPayment(Amazon.S3.Model.PutBucketRequestPaymentRequest)">
            <summary>
            <para>Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This
            configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the
            download.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketRequestPaymentAsync(Amazon.S3.Model.PutBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketRequestPayment operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketRequestPayment(Amazon.S3.Model.PutBucketRequestPaymentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketTagging(Amazon.S3.Model.PutBucketTaggingRequest)">
            <summary>
            <para>Sets the tags for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketTaggingAsync(Amazon.S3.Model.PutBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketTagging(Amazon.S3.Model.PutBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketVersioning(Amazon.S3.Model.PutBucketVersioningRequest)">
            <summary>
            <para>Puts the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketVersioningAsync(Amazon.S3.Model.PutBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketVersioning operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketVersioning(Amazon.S3.Model.PutBucketVersioningRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketWebsite(Amazon.S3.Model.PutBucketWebsiteRequest)">
            <summary>
            <para>Set the website configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketWebsiteAsync(Amazon.S3.Model.PutBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketWebsite(Amazon.S3.Model.PutBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutCORSConfiguration(Amazon.S3.Model.PutCORSConfigurationRequest)">
            <summary>
            <para>Sets the cors configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutCORSConfigurationAsync(Amazon.S3.Model.PutCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutCORSConfiguration(Amazon.S3.Model.PutCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutLifecycleConfiguration(Amazon.S3.Model.PutLifecycleConfigurationRequest)">
            <summary>
            <para>Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutLifecycleConfigurationAsync(Amazon.S3.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutLifecycleConfiguration(Amazon.S3.Model.PutLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutObject(Amazon.S3.Model.PutObjectRequest)">
            <summary>
            <para>Adds an object to a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject service method on AmazonS3.</param>
            
            <returns>The response from the PutObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutObjectAsync(Amazon.S3.Model.PutObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutObject(Amazon.S3.Model.PutObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.RestoreObject(Amazon.S3.Model.RestoreObjectRequest)">
            <summary>
            <para>Restores an archived copy of an object back into Amazon S3</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.RestoreObjectAsync(Amazon.S3.Model.RestoreObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.RestoreObject(Amazon.S3.Model.RestoreObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.UploadPart(Amazon.S3.Model.UploadPartRequest)">
            <summary>
            <para>Uploads a part in a multipart upload.</para>
            </summary>
            <remarks>
            <para>
            After you initiate a multipart upload and upload one or more parts, you must either complete or abort
            the multipart upload in order to stop getting charged for storage of the uploaded parts. Once you
            complete or abort the multipart upload, Amazon S3 will release the stored parts and stop charging you
            for their storage.
            </para>
            </remarks>
            <param name="request">Container for the necessary parameters to execute the UploadPart service method on AmazonS3.</param>
            
            <returns>The response from the UploadPart service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.UploadPartAsync(Amazon.S3.Model.UploadPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.UploadPart(Amazon.S3.Model.UploadPartRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetPreSignedURL(Amazon.S3.Model.GetPreSignedUrlRequest)">
            <summary>
            Create a signed URL allowing access to a resource that would 
            usually require authentication.
            </summary>
            <remarks>
            <para>
            When using query string authentication you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            </para>
            <para>
            A PreSigned URL can be generated for GET, PUT, DELETE and HEAD
            operations on your bucketName, keys, and versions.
            </para>
            </remarks>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.Marshall(Amazon.S3.Model.GetPreSignedUrlRequest,System.String,System.String,System.Boolean)">
            <summary>
            Marshalls the parameters for a presigned url for a preferred signing protocol.
            </summary>
            <param name="getPreSignedUrlRequest"></param>
            <param name="accessKey"></param>
            <param name="token"></param>
            <param name="aws4Signing">
            True if AWS4 signing will be used; if the expiry period in the request exceeds the
            maximum allowed for AWS4 (one week), an ArgumentException is thrown.
            </param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor">
             <summary>
             Constructs AmazonS3Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonS3Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.S3.AmazonS3Config)">
             <summary>
             Constructs AmazonS3Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonS3 Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials and an
            AmazonS3Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID, AWS Secret Key and an
            AmazonS3Client Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID, AWS Secret Key and an
            AmazonS3Client Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.AbortMultipartUpload(Amazon.S3.Model.AbortMultipartUploadRequest)">
            <summary>
            <para>Aborts a multipart upload.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.AbortMultipartUploadAsync(Amazon.S3.Model.AbortMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.AbortMultipartUpload(Amazon.S3.Model.AbortMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CompleteMultipartUpload(Amazon.S3.Model.CompleteMultipartUploadRequest)">
            <summary>
            <para>Completes a multipart upload by assembling previously uploaded parts.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload service method on
            AmazonS3.</param>
            
            <returns>The response from the CompleteMultipartUpload service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CompleteMultipartUploadAsync(Amazon.S3.Model.CompleteMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CompleteMultipartUpload(Amazon.S3.Model.CompleteMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyObject(Amazon.S3.Model.CopyObjectRequest)">
            <summary>
            <para>Creates a copy of an object that is already stored in Amazon S3.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject service method on AmazonS3.</param>
            
            <returns>The response from the CopyObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyObjectAsync(Amazon.S3.Model.CopyObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CopyObject(Amazon.S3.Model.CopyObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyPart(Amazon.S3.Model.CopyPartRequest)">
            <summary>
            <para>Uploads a part by copying data from an existing object as data source.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart service method on AmazonS3.</param>
            
            <returns>The response from the CopyPart service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyPartAsync(Amazon.S3.Model.CopyPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyPart operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.CopyPart(Amazon.S3.Model.CopyPartRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucket(Amazon.S3.Model.DeleteBucketRequest)">
            <summary>
            <para>Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket
            itself can be deleted.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketAsync(Amazon.S3.Model.DeleteBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucket(Amazon.S3.Model.DeleteBucketRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketPolicy(Amazon.S3.Model.DeleteBucketPolicyRequest)">
            <summary>
            <para>Deletes the policy from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketPolicyAsync(Amazon.S3.Model.DeleteBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketPolicy(Amazon.S3.Model.DeleteBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketTagging(Amazon.S3.Model.DeleteBucketTaggingRequest)">
            <summary>
            <para>Deletes the tags from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketTaggingAsync(Amazon.S3.Model.DeleteBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketTagging(Amazon.S3.Model.DeleteBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketWebsite(Amazon.S3.Model.DeleteBucketWebsiteRequest)">
            <summary>
            <para>This operation removes the website configuration from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketWebsiteAsync(Amazon.S3.Model.DeleteBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteBucketWebsite(Amazon.S3.Model.DeleteBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteCORSConfiguration(Amazon.S3.Model.DeleteCORSConfigurationRequest)">
            <summary>
            <para>Deletes the cors configuration information set for the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteCORSConfigurationAsync(Amazon.S3.Model.DeleteCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteCORSConfiguration(Amazon.S3.Model.DeleteCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteLifecycleConfiguration(Amazon.S3.Model.DeleteLifecycleConfigurationRequest)">
            <summary>
            <para>Deletes the lifecycle configuration from the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteLifecycleConfigurationAsync(Amazon.S3.Model.DeleteLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteLifecycleConfiguration(Amazon.S3.Model.DeleteLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObject(Amazon.S3.Model.DeleteObjectRequest)">
            <summary>
            <para>Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object.
            If there isn''t a null version, Amazon S3 does not remove any objects.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject service method on AmazonS3.</param>
            
            <returns>The response from the DeleteObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObjectAsync(Amazon.S3.Model.DeleteObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteObject(Amazon.S3.Model.DeleteObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObjects(Amazon.S3.Model.DeleteObjectsRequest)">
            <summary>
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects service method on AmazonS3.</param>
            
            <returns>The response from the DeleteObjects service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObjectsAsync(Amazon.S3.Model.DeleteObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObjects operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.DeleteObjects(Amazon.S3.Model.DeleteObjectsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetACL(Amazon.S3.Model.GetACLRequest)">
            <summary>
            <para>Returns the access control list (ACL) of an object.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL service method on AmazonS3.</param>
            
            <returns>The response from the GetACL service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetACLAsync(Amazon.S3.Model.GetACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetACL operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetACL(Amazon.S3.Model.GetACLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLocation(Amazon.S3.Model.GetBucketLocationRequest)">
            <summary>
            <para>Returns the region the bucket resides in.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketLocation service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLocationAsync(Amazon.S3.Model.GetBucketLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketLocation(Amazon.S3.Model.GetBucketLocationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLogging(Amazon.S3.Model.GetBucketLoggingRequest)">
            <summary>
            <para>Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the
            bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketLogging service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLoggingAsync(Amazon.S3.Model.GetBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLogging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketLogging(Amazon.S3.Model.GetBucketLoggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketNotification(Amazon.S3.Model.GetBucketNotificationRequest)">
            <summary>
            <para>Return the notification configuration of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketNotification service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketNotificationAsync(Amazon.S3.Model.GetBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketNotification operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketNotification(Amazon.S3.Model.GetBucketNotificationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketPolicy(Amazon.S3.Model.GetBucketPolicyRequest)">
            <summary>
            <para>Returns the policy of a specified bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketPolicy service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketPolicyAsync(Amazon.S3.Model.GetBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketPolicy(Amazon.S3.Model.GetBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketRequestPayment(Amazon.S3.Model.GetBucketRequestPaymentRequest)">
            <summary>
            <para>Returns the request payment configuration of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketRequestPayment service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketRequestPaymentAsync(Amazon.S3.Model.GetBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketRequestPayment operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketRequestPayment(Amazon.S3.Model.GetBucketRequestPaymentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketTagging(Amazon.S3.Model.GetBucketTaggingRequest)">
            <summary>
            <para>Returns the tag set associated with the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketTagging service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketTaggingAsync(Amazon.S3.Model.GetBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketTagging(Amazon.S3.Model.GetBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketVersioning(Amazon.S3.Model.GetBucketVersioningRequest)">
            <summary>
            <para>Returns the versioning state of a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketVersioning service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketVersioningAsync(Amazon.S3.Model.GetBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketVersioning operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketVersioning(Amazon.S3.Model.GetBucketVersioningRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketWebsite(Amazon.S3.Model.GetBucketWebsiteRequest)">
            <summary>
            <para>Returns the website configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite service method on
            AmazonS3.</param>
            
            <returns>The response from the GetBucketWebsite service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketWebsiteAsync(Amazon.S3.Model.GetBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetBucketWebsite(Amazon.S3.Model.GetBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetCORSConfiguration(Amazon.S3.Model.GetCORSConfigurationRequest)">
            <summary>
            <para>Returns the cors configuration for the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration service method on AmazonS3.</param>
            
            <returns>The response from the GetCORSConfiguration service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetCORSConfigurationAsync(Amazon.S3.Model.GetCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetCORSConfiguration(Amazon.S3.Model.GetCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetLifecycleConfiguration(Amazon.S3.Model.GetLifecycleConfigurationRequest)">
            <summary>
            <para>Returns the lifecycle configuration information set on the bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration service method on
            AmazonS3.</param>
            
            <returns>The response from the GetLifecycleConfiguration service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetLifecycleConfigurationAsync(Amazon.S3.Model.GetLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetLifecycleConfiguration(Amazon.S3.Model.GetLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObject(Amazon.S3.Model.GetObjectRequest)">
            <summary>
            <para>Retrieves objects from Amazon S3.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject service method on AmazonS3.</param>
            
            <returns>The response from the GetObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectAsync(Amazon.S3.Model.GetObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObject(Amazon.S3.Model.GetObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectMetadata(Amazon.S3.Model.GetObjectMetadataRequest)">
            <summary>
            Returns information about a specified object.
            </summary>
            <remarks>
            Retrieves information about a specific object or object size, without actually fetching the object itself.
            This is useful if you're only interested in the object metadata, and don't want to waste bandwidth on the object data.
            The response is identical to the GetObject response, except that there is no response body.
            </remarks>
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata service method on AmazonS3.</param>
            <returns>The response from the HeadObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectMetadataAsync(Amazon.S3.Model.GetObjectMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectMetadata operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObjectMetadata(Amazon.S3.Model.GetObjectMetadataRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectTorrent(Amazon.S3.Model.GetObjectTorrentRequest)">
            <summary>
            <para>Return torrent files from a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent service method on
            AmazonS3.</param>
            
            <returns>The response from the GetObjectTorrent service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectTorrentAsync(Amazon.S3.Model.GetObjectTorrentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectTorrent operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.GetObjectTorrent(Amazon.S3.Model.GetObjectTorrentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.InitiateMultipartUpload(Amazon.S3.Model.InitiateMultipartUploadRequest)">
            <summary>
            <para>Initiates a multipart upload and returns an upload ID.</para>
            </summary>
            <remarks>
            <para>
            After you initiate a multipart upload and upload one or more parts, you must either complete or abort
            the multipart upload in order to stop getting charged for storage of the uploaded parts. Once you
            complete or abort the multipart upload, Amazon S3 will release the stored parts and stop charging you
            for their storage.
            </para>
            </remarks>
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload service method on
            AmazonS3.</param>
            
            <returns>The response from the InitiateMultipartUpload service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.InitiateMultipartUploadAsync(Amazon.S3.Model.InitiateMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.InitiateMultipartUpload(Amazon.S3.Model.InitiateMultipartUploadRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListBuckets(Amazon.S3.Model.ListBucketsRequest)">
            <summary>
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets service method on AmazonS3.</param>
            
            <returns>The response from the ListBuckets service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListBucketsAsync(Amazon.S3.Model.ListBucketsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListBuckets operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListBuckets(Amazon.S3.Model.ListBucketsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListBuckets">
            <summary>
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
            
            
            <returns>The response from the ListBuckets service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListMultipartUploads(Amazon.S3.Model.ListMultipartUploadsRequest)">
            <summary>
            <para>This operation lists in-progress multipart uploads.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads service method on
            AmazonS3.</param>
            
            <returns>The response from the ListMultipartUploads service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListMultipartUploadsAsync(Amazon.S3.Model.ListMultipartUploadsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListMultipartUploads(Amazon.S3.Model.ListMultipartUploadsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListObjects(Amazon.S3.Model.ListObjectsRequest)">
            <summary>
            <para>Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a
            subset of the objects in a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects service method on AmazonS3.</param>
            
            <returns>The response from the ListObjects service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListObjectsAsync(Amazon.S3.Model.ListObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListObjects(Amazon.S3.Model.ListObjectsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListParts(Amazon.S3.Model.ListPartsRequest)">
            <summary>
            <para>Lists the parts that have been uploaded for a specific multipart upload.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts service method on AmazonS3.</param>
            
            <returns>The response from the ListParts service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListPartsAsync(Amazon.S3.Model.ListPartsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListParts(Amazon.S3.Model.ListPartsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListVersions(Amazon.S3.Model.ListVersionsRequest)">
            <summary>
            <para>Returns metadata about all of the versions of objects in a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions service method on
            AmazonS3.</param>
            
            <returns>The response from the ListVersions service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListVersionsAsync(Amazon.S3.Model.ListVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVersions operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.ListVersions(Amazon.S3.Model.ListVersionsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutACL(Amazon.S3.Model.PutACLRequest)">
            <summary>
            <para>uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObjectAcl service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutACLAsync(Amazon.S3.Model.PutACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutACL operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutACL(Amazon.S3.Model.PutACLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucket(Amazon.S3.Model.PutBucketRequest)">
            <summary>
            <para>Creates a new bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket service method on AmazonS3.</param>
            
            <returns>The response from the PutBucket service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketAsync(Amazon.S3.Model.PutBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucket operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucket(Amazon.S3.Model.PutBucketRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketLogging(Amazon.S3.Model.PutBucketLoggingRequest)">
            <summary>
            <para>Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the
            logging status of a bucket, you must be the bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketLoggingAsync(Amazon.S3.Model.PutBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketLogging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketLogging(Amazon.S3.Model.PutBucketLoggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketNotification(Amazon.S3.Model.PutBucketNotificationRequest)">
            <summary>
            <para>Enables notifications of specified events for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketNotificationAsync(Amazon.S3.Model.PutBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketNotification operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketNotification(Amazon.S3.Model.PutBucketNotificationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketPolicy(Amazon.S3.Model.PutBucketPolicyRequest)">
            <summary>
            <para>Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketPolicyAsync(Amazon.S3.Model.PutBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketPolicy operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketPolicy(Amazon.S3.Model.PutBucketPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketRequestPayment(Amazon.S3.Model.PutBucketRequestPaymentRequest)">
            <summary>
            <para>Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This
            configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the
            download.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketRequestPaymentAsync(Amazon.S3.Model.PutBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketRequestPayment operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketRequestPayment(Amazon.S3.Model.PutBucketRequestPaymentRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketTagging(Amazon.S3.Model.PutBucketTaggingRequest)">
            <summary>
            <para>Sets the tags for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketTaggingAsync(Amazon.S3.Model.PutBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketTagging operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketTagging(Amazon.S3.Model.PutBucketTaggingRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketVersioning(Amazon.S3.Model.PutBucketVersioningRequest)">
            <summary>
            <para>Puts the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketVersioningAsync(Amazon.S3.Model.PutBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketVersioning operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketVersioning(Amazon.S3.Model.PutBucketVersioningRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketWebsite(Amazon.S3.Model.PutBucketWebsiteRequest)">
            <summary>
            <para>Set the website configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketWebsiteAsync(Amazon.S3.Model.PutBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketWebsite operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutBucketWebsite(Amazon.S3.Model.PutBucketWebsiteRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutCORSConfiguration(Amazon.S3.Model.PutCORSConfigurationRequest)">
            <summary>
            <para>Sets the cors configuration for a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutCORSConfigurationAsync(Amazon.S3.Model.PutCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutCORSConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutCORSConfiguration(Amazon.S3.Model.PutCORSConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutLifecycleConfiguration(Amazon.S3.Model.PutLifecycleConfigurationRequest)">
            <summary>
            <para>Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration service method on
            AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutLifecycleConfigurationAsync(Amazon.S3.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleConfiguration operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutLifecycleConfiguration(Amazon.S3.Model.PutLifecycleConfigurationRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutObject(Amazon.S3.Model.PutObjectRequest)">
            <summary>
            <para>Adds an object to a bucket.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject service method on AmazonS3.</param>
            
            <returns>The response from the PutObject service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutObjectAsync(Amazon.S3.Model.PutObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.PutObject(Amazon.S3.Model.PutObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.RestoreObject(Amazon.S3.Model.RestoreObjectRequest)">
            <summary>
            <para>Restores an archived copy of an object back into Amazon S3</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject service method on AmazonS3.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.RestoreObjectAsync(Amazon.S3.Model.RestoreObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreObject operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.RestoreObject(Amazon.S3.Model.RestoreObjectRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.UploadPart(Amazon.S3.Model.UploadPartRequest)">
            <summary>
            <para>Uploads a part in a multipart upload.</para>
            </summary>
            <remarks>
            <para>
            After you initiate a multipart upload and upload one or more parts, you must either complete or abort
            the multipart upload in order to stop getting charged for storage of the uploaded parts. Once you
            complete or abort the multipart upload, Amazon S3 will release the stored parts and stop charging you
            for their storage.
            </para>
            </remarks>
            <param name="request">Container for the necessary parameters to execute the UploadPart service method on AmazonS3.</param>
            
            <returns>The response from the UploadPart service method, as returned by AmazonS3.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.UploadPartAsync(Amazon.S3.Model.UploadPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation.
            <seealso cref="M:Amazon.S3.IAmazonS3.UploadPart(Amazon.S3.Model.UploadPartRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.S3.AmazonS3Config">
            <summary>
            Configuration for accessing AmazonS3 service
            </summary>
        </member>
        <member name="M:Amazon.S3.AmazonS3Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.ForcePathStyle">
            <summary>
            When true, requests will always use path style addressing.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Exception.AmazonId2">
            <summary>
            A special token that helps AWS troubleshoot problems.
            </summary>
        </member>
        <member name="T:Amazon.S3.S3CannedACL">
            <summary>
            A list of all possible CannedACLs that can be used
            for S3 Buckets or S3 Objects. For more information about CannedACLs, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/RESTAccessPolicy.html#RESTCannedAccessPolicies"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.NoACL">
            <summary>
            Owner gets FULL_CONTROL.
            No one else has access rights (default).
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.Private">
            <summary>
            Owner gets FULL_CONTROL.
            No one else has access rights (default).
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.PublicRead">
            <summary>
            Owner gets FULL_CONTROL and the anonymous principal is granted READ access.
            If this policy is used on an object, it can be read from a browser with no authentication.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.PublicReadWrite">
            <summary>
            Owner gets FULL_CONTROL, the anonymous principal is granted READ and WRITE access.
            This can be a useful policy to apply to a bucket, but is generally not recommended.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.AuthenticatedRead">
            <summary>
            Owner gets FULL_CONTROL, and any principal authenticated as a registered Amazon
            S3 user is granted READ access.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.BucketOwnerRead">
            <summary>
            Object Owner gets FULL_CONTROL, Bucket Owner gets READ
            This ACL applies only to objects and is equivalent to private when used with PUT Bucket. 
            You use this ACL to let someone other than the bucket owner write content (get full control) 
            in the bucket but still grant the bucket owner read access to the objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.BucketOwnerFullControl">
            <summary>
            Object Owner gets FULL_CONTROL, Bucket Owner gets FULL_CONTROL.
            This ACL applies only to objects and is equivalent to private when used with PUT Bucket. 
            You use this ACL to let someone other than the bucket owner write content (get full control) 
            in the bucket but still grant the bucket owner full rights over the objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.LogDeliveryWrite">
            <summary>
            The LogDelivery group gets WRITE and READ_ACP permissions on the bucket.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3CannedACL.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3Region">
            <summary>
            A list of all possible S3 Bucket region possibilities. For
            more information, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/BucketConfiguration.html#LocationSelection"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.US">
            <summary>
            Specifies that the S3 Bucket should use US locality.
            This is the default value.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.EU">
            <summary>
            Specifies that the S3 Bucket should use EU locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.USW1">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.USW2">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-2 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APS1">
            <summary>
            Specifies that the S3 Bucket should use the AP-SOUTHEAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APS2">
            <summary>
            Specifies that the S3 Bucket should use the AP-SOUTHEAST-2 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APN1">
            <summary>
            Specifies that the S3 Bucket should use the AP-NORTHEAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.SAE1">
            <summary>
            Specifies that the S3 Bucket should use the SA-EAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.SFO">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-1 locality.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3Region.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3Permission">
            <summary>
            A list of all ACL permissions. For more information, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/S3_ACLs.html#S3_ACLs_Permissions"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.READ">
            <summary>
            When applied to a bucket, grants permission to list the bucket.
            When applied to an object, this grants permission to read the
            object data and/or metadata.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.WRITE">
            <summary>
            When applied to a bucket, grants permission to create, overwrite,
            and delete any object in the bucket. This permission is not
            supported for objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.READ_ACP">
            <summary>
            Grants permission to read the ACL for the applicable bucket or object.
            The owner of a bucket or object always has this permission implicitly.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.WRITE_ACP">
            <summary>
            Gives permission to overwrite the ACP for the applicable bucket or object.
            The owner of a bucket or object always has this permission implicitly.
            Granting this permission is equivalent to granting FULL_CONTROL because
            the grant recipient can make any changes to the ACP.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.FULL_CONTROL">
            <summary>
            Provides READ, WRITE, READ_ACP, and WRITE_ACP permissions.
            It does not convey additional rights and is provided only for convenience.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.RESTORE_OBJECT">
            <summary>
            Gives permission to restore an object that is currently stored in Amazon Glacier
            for archival storage.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3Permission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3MetadataDirective">
            <summary>
            An enumeration of all Metadata directives that
            can be used for the CopyObject operation.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3MetadataDirective.COPY">
            <summary>
            Specifies that the metadata is copied from the source object.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3MetadataDirective.REPLACE">
            <summary>
            Specifies that the metadata is replaced with metadata provided in the request.
            All original metadata is replaced by the metadata you specify.
            </summary>
        </member>
        <member name="T:Amazon.S3.Protocol">
            <summary>
            An enumeration of all protocols that the pre-signed
            URL can be created against.
            </summary>
        </member>
        <member name="F:Amazon.S3.Protocol.HTTPS">
            <summary>
            https protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="F:Amazon.S3.Protocol.HTTP">
            <summary>
            http protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="T:Amazon.S3.HttpVerb">
            <summary>
            An enumeration of supported HTTP verbs
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.GET">
            <summary>
            The GET HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.HEAD">
            <summary>
            The HEAD HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.PUT">
            <summary>
            The PUT HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.DELETE">
            <summary>
            The DELETE HTTP verb.
            </summary>
        </member>
        <member name="T:Amazon.S3.S3StorageClass">
            <summary>
            Specifies the Storage Class of of an S3 object. Possible values
            are: <list type="bullet">
            <item>ReducedRedundancy: provides a 99.99% durability guarantee</item>
            <item>Standard: provides a 99.999999999% durability guarantee</item>
            </list>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.Standard">
            <summary>
            The STANDARD storage class, which is the default
            storage class for S3 objects. Provides a 99.999999999%
            durability guarantee.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.ReducedRedundancy">
            <summary>
            The REDUCED_REDUNDANCY storage class for S3 objects. This
            provides a reduced (99.99%) durability guarantee at a lower
            cost as compared to the STANDARD storage class. Use this
            storage class for non-mission critical data or for data 
            that doesn’t require the higher level of durability that S3
            provides with the STANDARD storage class.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.Glacier">
            <summary>
            The GLACIER storage is for object that are stored in Amazon Glacier.
            This storage class is for objects that are for archival purpose and 
            get operations are rare.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3StorageClass.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.NotificationEvents">
            <summary>
            The constants for the known event names used by S3 notification. S3 might add new
            events before the SDK is updated. In which case the names listed in the S3 documentation
            will work as well as these constants.
            </summary>
        </member>
        <member name="F:Amazon.S3.NotificationEvents.ReducedRedundancyLostObject">
            <summary>
            An event that says an object has been lost in the reduced redundancy storage.
            </summary>
        </member>
        <member name="T:Amazon.S3.ServerSideEncryptionMethod">
            <summary>
            A list of all server-side encryption methods.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionMethod.None">
            <summary>
            No server side encryption to be used.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionMethod.AES256">
            <summary>
            Use AES 256 server side encryption.
            </summary>
        </member>
        <member name="M:Amazon.S3.ServerSideEncryptionMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.GranteeType">
            <summary>
            A list of all grantee types.
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.Group">
            <summary>
            The predefined group.
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.Email">
            <summary>
            The email address of an AWS account
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.CanonicalUser">
            <summary>
            The canonical user ID of an AWS account
            </summary>
        </member>
        <member name="M:Amazon.S3.GranteeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.LifecycleRuleStatus">
            <summary>
            A list of all lifecycle statuses.
            </summary>
        </member>
        <member name="F:Amazon.S3.LifecycleRuleStatus.Enabled">
            <summary>
            The rule is enabled.
            </summary>
        </member>
        <member name="F:Amazon.S3.LifecycleRuleStatus.Disabled">
            <summary>
            The rule is disabled.
            </summary>
        </member>
        <member name="M:Amazon.S3.LifecycleRuleStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.VersionStatus">
            <summary>
            A list of all version statuses.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Off">
            <summary>
            The rule is off.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Suspended">
            <summary>
            The rule is suspended.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Enabled">
            <summary>
            The rule is enabled.
            </summary>
        </member>
        <member name="M:Amazon.S3.VersionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.EncodingType">
            <summary>
            A list of all encoding types.
            </summary>
        </member>
        <member name="F:Amazon.S3.EncodingType.Url">
            <summary>
            Url encoding.
            </summary>
        </member>
        <member name="M:Amazon.S3.EncodingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with the Encryption materials and credentials loaded from the application's
            default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
            
            Example App.config with credentials set. 
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSAccessKey" value="********************"/&gt;
                    &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            
            </summary>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.RegionEndpoint,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with the Encryption materials and credentials loaded from the application's
            default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
            
            Example App.config with credentials set. 
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSAccessKey" value="********************"/&gt;
                    &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            
            </summary>
            <param name="region">
            The region to connect.
            </param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.S3.Encryption.AmazonS3CryptoConfiguration,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with the Encryption materials, 
            AmazonS3 CryptoConfiguration object and credentials loaded from the application's
            default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
            
            Example App.config with credentials set. 
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSAccessKey" value="********************"/&gt;
                    &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            
            </summary>
            <param name="config">
            The AmazonS3EncryptionClient CryptoConfiguration Object
            </param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
             Constructs AmazonS3EncryptionClient with AWS Credentials and Encryption materials.
            </summary>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Credentials, Region and Encryption materials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.S3.Encryption.AmazonS3CryptoConfiguration,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Credentials, AmazonS3CryptoConfiguration Configuration object
            and Encryption materials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">The AmazonS3EncryptionClient CryptoConfiguration Object</param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID,
            AWS Secret Key and Encryption materials
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="materials">The encryption materials to be used to encrypt and decrypt envelope key.</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,Amazon.RegionEndpoint,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID,
            AWS Secret Key, Region and Encryption materials
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
            <param name="materials">The encryption materials to be used to encrypt and decrypt envelope key.</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,Amazon.S3.Encryption.AmazonS3CryptoConfiguration,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID, Secret Key,
            AmazonS3 CryptoConfiguration object and Encryption materials.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="config">The AmazonS3EncryptionClient CryptoConfiguration Object</param>
            <param name="materials">The encryption materials to be used to encrypt and decrypt envelope key.</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,System.String,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID, Secret Key,
            SessionToken and Encryption materials.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID, Secret Key,
             SessionToken, Region and Encryption materials.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
            <param name="materials">The encryption materials to be used to encrypt and decrypt envelope key.</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.#ctor(System.String,System.String,System.String,Amazon.S3.Encryption.AmazonS3CryptoConfiguration,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Constructs AmazonS3EncryptionClient with AWS Access Key ID, Secret Key, SessionToken
            AmazonS3EncryptionClient CryptoConfiguration object and Encryption materials.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="config">The AmazonS3EncryptionClient CryptoConfiguration Object</param>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt envelope key.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.ProcessPreRequestHandlers(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Performs encryption for PutObject and MultiPartUpload,
            also adding encryption information to object metadata or
            instruction file
            </summary>
            <param name="request">AmazonWebServiceRequest on which encryption is performed </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.ProcessResponseHandlers(Amazon.Runtime.AmazonWebServiceResponse,Amazon.Runtime.Internal.IRequest,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Performs decryption of data by getting encryption information
            from object metadata or instruction file.
            </summary>
            <param name="response">AmazonWebServiceResponse on which decryption is performed</param>
            <param name="request">IRequest</param>
            <param name="webResponseData">IWebResponseData</param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.ProcessRequestHandlers(Amazon.Runtime.Internal.IRequest)">
            <summary>
            Adds user agent to headers
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.GenerateEncryptedObjectRequestUsingMetadata(Amazon.S3.Model.PutObjectRequest)">
            <summary>
            Updates the request where the metadata contains encryption information 
            and the input stream contains the encrypted object contents.
            </summary>
            <param name="putObjectRequest">
            The request whose contents are to be encrypted.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.GenerateEncryptedObjectRequestUsingInstructionFile(Amazon.S3.Model.PutObjectRequest)">
            <summary>
            Updates the request where the instruction file contains encryption information 
            and the input stream contains the encrypted object contents.
            </summary>
            <param name="putObjectRequest"></param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.GenerateEncryptedUploadPartRequest(Amazon.S3.Model.UploadPartRequest)">
            <summary>
            Updates the request where the input stream contains the encrypted object contents.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.DecryptObjectUsingInstructionFile(Amazon.S3.Model.GetObjectResponse,Amazon.S3.Model.GetObjectResponse)">
            <summary>
            Updates object where the object input stream contains the decrypted contents.
            </summary>
            <param name="instructionFileResponse">
            The getObject response of InstructionFile.
            </param>
            <param name="response">
            The getObject response whose contents are to be decrypted.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.AmazonS3EncryptionClient.DecryptObjectUsingMetadata(Amazon.S3.Model.GetObjectResponse)">
            <summary>
            Updates object where the object input stream contains the decrypted contents.
            </summary>
            <param name="objectResponse">
            The getObject response whose contents are to be decrypted.
            </param>
        </member>
        <member name="P:Amazon.S3.Encryption.AmazonS3EncryptionClient.SupportResponseLogging">
            <summary>
            Turn off response logging because it will interfere with decrypt of the data coming back from S3.
            </summary>
        </member>
        <member name="T:Amazon.S3.Encryption.AmazonS3CryptoConfiguration">
            <summary>
            AmazonS3CryptoConfiguration allows customers
            to set storage mode for encryption credentials
            </summary>
        </member>
        <member name="T:Amazon.S3.Encryption.EncryptionInstructions">
            <summary>
            Encryption Instructions store the encryption crdentials
            </summary>
        </member>
        <member name="T:Amazon.S3.Encryption.EncryptionUtils">
            <summary>
            The EncryptionUtils class encrypts and decrypts data stored in S3.
            It can be used to prepare requests for encryption before they are stored in S3
            and to decrypt objects that are retrieved from S3.
            </summary>
        </member>
        <member name="F:Amazon.S3.Encryption.EncryptionUtils.instructionfileSuffix">
            <summary>
            Encrypts a Envelope key using the provided encryption materials
            and returns it in raw byte array form.
            </summary>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.DecryptEnvelopeKey(System.Byte[],Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Decrypts an encrypted Envelope key using the provided encryption materials
            and returns it in raw byte array form.
            </summary>
            <param name="encryptedEnvelopeKey"> Encrypted envelope key</param>
            <param name="materials">Encryption materials needed to decrypt the encrypted envlelope key</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.EncryptRequestUsingInstruction(System.IO.Stream,Amazon.S3.Encryption.EncryptionInstructions)">
            <summary>
            Returns an updated stream where the stream contains the encrypted object contents.
            The specified instruction will be used to encrypt data.
            </summary>
            <param name="toBeEncrypted">
            The stream whose contents are to be encrypted.
            </param>
            <param name="instructions">
            The instruction that will be used to encrypt the object data.
            </param>
            <returns>
            Encrypted stream, i.e input stream wrapped into encrypted stream
            </returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.EncryptUploadPartRequestUsingInstructions(System.IO.Stream,Amazon.S3.Encryption.EncryptionInstructions)">
            <summary>
            Returns an updated input stream where the input stream contains the encrypted object contents.
            The specified instruction will be used to encrypt data.
            </summary>
            <param name="toBeEncrypted">
            The stream whose contents are to be encrypted.
            </param>
            <param name="instructions">
            The instruction that will be used to encrypt the object data.
            </param>
            <returns>
            Encrypted stream, i.e input stream wrapped into encrypted stream
            </returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.DecryptObjectUsingInstructions(Amazon.S3.Model.GetObjectResponse,Amazon.S3.Encryption.EncryptionInstructions)">
            <summary>
            Updates object where the object
            input stream contains the decrypted contents.
            </summary>
            <param name="response">
            The getObject response whose contents are to be decrypted.
            </param>
            <param name="instructions">
            The instruction that will be used to encrypt the object data.
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.GenerateInstructions(Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
             Generates an instruction that will be used to encrypt an object.
            </summary>
            <param name="materials">
            The encryption materials to be used to encrypt and decrypt data.
            </param>
            <returns>
            The instruction that will be used to encrypt an object.
            </returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.BuildInstructionsFromObjectMetadata(Amazon.S3.Model.GetObjectResponse,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
             Builds an instruction object from the object metadata.
            </summary>
            <param name="response">
            A non-null object response that contains encryption information in its metadata.
            </param>
            <param name="materials">
            The non-null encryption materials to be used to encrypt and decrypt Envelope key.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.BuildInstructionsUsingInstructionFile(Amazon.S3.Model.GetObjectResponse,Amazon.S3.Encryption.EncryptionMaterials)">
            <summary>
            Builds an instruction object from the instruction file.
            </summary>
            <param name="response"> Instruction file GetObject response</param>
            <param name="materials">
            The non-null encryption materials to be used to encrypt and decrypt Envelope key.
            </param>
            <returns>     
            A non-null instruction object containing encryption information.
            </returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.UpdateMetadataWithEncryptionInstructions(Amazon.Runtime.AmazonWebServiceRequest,Amazon.S3.Encryption.EncryptionInstructions)">
            <summary>
            Update the request's ObjectMetadata with the necessary information for decrypting the object.
            </summary>
            <param name="request">
            AmazonWebServiceRequest  encrypted using the given instruction
            </param>
            <param name="instructions">
            Non-null instruction used to encrypt the data in this AmazonWebServiceRequest .
            </param>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.AddUnencryptedContentLengthToMetadata(Amazon.S3.Model.PutObjectRequest)">
            <summary>
            Adds UnEncrypted content length to object metadata
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.IsEncryptionInfoInMetadata(Amazon.S3.Model.GetObjectResponse)">
            <summary>
            checks if encryption credentials are in object metadata
            </summary>
            <param name="response">Response of the object</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Encryption.EncryptionUtils.IsEncryptionInfoInInstructionFile(Amazon.S3.Model.GetObjectResponse)">
            <summary>
            checks if encryption credentials are in the instructionfile
            </summary>
            <param name="response">Instruction file response that contains encryption information</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.IO.S3DirectoryInfo">
            <summary>
            Mimics the System.IO.DirectoryInfo for a virtual directory in S3.  It exposes properties and methods for enumerating directories and files as well as 
            methods manipulate directories.
            </summary>
            <remarks>
            <note type='note'>It is important to keep in mind that S3 is not a filesystem. It is possible for S3 object keys to contain 
            characters which are not not legal file path characters, and so some pre-existing objects in a bucket that were created with 
            other software may not be compatible with this class.</note> 
            </remarks>
        </member>
        <member name="T:Amazon.S3.IO.IS3FileSystemInfo">
            <summary>
            Common interface for both S3FileInfo and S3DirectoryInfo.
            </summary>
        </member>
        <member name="M:Amazon.S3.IO.IS3FileSystemInfo.Delete">
            <summary>
            Deletes this item from S3.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.Exists">
            <summary>
            Return ture if the item exists in S3.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.Extension">
            <summary>
            Returns the extension of the item.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.FullName">
            <summary>
            Returns the fully qualified path to the item.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.LastWriteTime">
            <summary>
            Returns the last modified time for this item from S3 in local timezone.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.LastWriteTimeUtc">
            <summary>
            Returns the last modified time for this item from S3 in UTC timezone.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.Name">
            <summary>
            Returns the name of the item without parent information.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.IS3FileSystemInfo.Type">
            <summary>
            Indicated what time of item this object represents.
            </summary>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.#ctor(Amazon.S3.IAmazonS3,System.String)">
            <summary>
            Initialize a new instance of the S3DirectoryInfo class for the specified S3 bucket.
            </summary>
            <param name="s3Client">S3 client which is used to access the S3 resources.</param>
            <param name="bucket">Name of the S3 bucket.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.#ctor(Amazon.S3.IAmazonS3,System.String,System.String)">
            <summary>
            Initialize a new instance of the S3DirectoryInfo class for the specified S3 bucket and S3 object key.
            </summary>
            <param name="s3Client">S3 client which is used to access the S3 resources.</param>
            <param name="bucket">Name of the S3 bucket.</param>
            <param name="key">The S3 object key.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.Create">
            <summary>
            Creates the directory in S3.  If no object key was specified when creating the S3DirectoryInfo then the bucket will be created.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CreateSubdirectory(System.String)">
            <summary>
            Creates a sub directory inside the instance of S3DirectoryInfo.
            </summary>
            <param name="directory"></param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.Delete">
            <summary>
            Deletes all the files in this directory as well as this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <exception cref="T:Amazon.S3.Model.DeleteObjectsException"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.Delete(System.Boolean)">
            <summary>
            Deletes all the files in this directory as well as this directory.  If recursive is set to true then all sub directories will be 
            deleted as well.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <exception cref="T:Amazon.S3.Model.DeleteObjectsException"></exception>
            <param name="recursive">If true then sub directories will be deleted as well.</param>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateDirectories">
            <summary>
            Enumerate the sub directories of this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of directories.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateDirectories(System.String)">
            <summary>
            Enumerate the sub directories of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all directories.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of directories that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
            <summary>
            Enumerate the sub directories of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all directories.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of directories that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFiles">
            <summary>
            Enumerate the files of this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFiles(System.String)">
            <summary>
            Enumerate the sub directories of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
            <summary>
            Enumerate the files of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFileSystemInfos">
            <summary>
            Enumerate the files of this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFileSystemInfos(System.String)">
            <summary>
            Enumerate the files of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
            <summary>
            Enumerate the files of this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An enumerable collection of files that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetDirectory(System.String)">
            <summary>
            Returns the S3DirectoryInfo for the specified sub directory.
            </summary>
            <param name="directory">Directory to get the S3DirectroyInfo for.</param>
            <returns>The S3DirectoryInfo for the specified sub directory.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetDirectories">
            <summary>
            Returns an array of S3DirectoryInfos for the directories in this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of directories.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetDirectories(System.String)">
            <summary>
            Returns an array of S3DirectoryInfos for the directories in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <returns>An array of files that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
            <summary>
            Returns an array of S3DirectoryInfos for the directories in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all directories.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of directories that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFile(System.String)">
            <summary>
            Returns the S3FileInfo for the specified file.
            </summary>
            <param name="filename">File to get the S3FileInfo for.</param>
            <returns>The S3FileInfo for the specified file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFiles">
            <summary>
            Returns an array of S3FileInfos for the files in this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFiles(System.String)">
            <summary>
            Returns an array of S3FileInfos for the files in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
            <summary>
            Returns an array of S3FileInfos for the files in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFileSystemInfos">
            <summary>
            Returns an array of IS3FileSystemInfos for the files in this directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFileSystemInfos(System.String)">
            <summary>
            Returns an array of IS3FileSystemInfos for the files in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files that matches searchPattern.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
            <summary>
            Returns an array of IS3FileSystemInfos for the files in this directory.
            </summary>
            <param name="searchPattern">The search string. The default pattern is "*", which returns all files.</param>
            <param name="searchOption">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories. The default value is TopDirectoryOnly.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>An array of files that matches searchPattern and searchOption.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyTo(System.String,System.String)">
            <summary>
            Copies the files from this directory to the target directory specified by the bucket and object key.
            </summary>
            <param name="newBucket">The target bucket to copy to.</param>
            <param name="newKey">The target object key which represents a directory in S3.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyTo(System.String,System.String,System.DateTime)">
            <summary>
            Copies the files from this directory to the target directory specified by the bucket and object key.  Only
            files that have changed since the changeSince date will be copied.
            </summary>
            <param name="newBucket">The target bucket to copy to.</param>
            <param name="newKey">The target object key which represents a directory in S3.</param>
            <param name="changesSince">Date which files must have changed since in ordered to be copied.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyTo(Amazon.S3.IO.S3DirectoryInfo)">
            <summary>
            Copies the files from this directory to the target directory.
            </summary>
            <param name="newLoc">The target directory to copy to.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyTo(Amazon.S3.IO.S3DirectoryInfo,System.DateTime)">
            <summary>
            Copies the files from this directory to the target directory.  Only
            files that have changed since the changeSince date will be copied.
            </summary>
            <param name="newLoc">The target directory to copy to.</param>
            <param name="changesSince">Date which files must have changed since in ordered to be copied.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyToLocal(System.String)">
            <summary>
            Copies the files from the S3 directory to the local file system in the location indicated by the path parameter.
            </summary>
            <param name="path">The location on the local file system to copy the files to.</param>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>DirectoryInfo for the local directory where files are copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyToLocal(System.String,System.DateTime)">
            <summary>
            Copies the files from the S3 directory to the local file system in the location indicated by the path parameter.
            Only files that have been modified since the changesSince property will be copied.
            </summary>
            <param name="path">The location on the local file system to copy the files to.</param>
            <param name="changesSince">Date which files must have changed since in ordered to be copied.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>DirectoryInfo for the local directory where files are copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyFromLocal(System.String)">
            <summary>
            Copies files from the local file system to S3 in this directory.  Sub directories are copied as well.
            </summary>
            <param name="path">The local file system path where the files are to be copied.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo where the files are copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.CopyFromLocal(System.String,System.DateTime)">
            <summary>
            Copies files from the local file system to S3 in this directory.  Sub directories are copied as well.  
            Only files that have been modified since the changesSince property will be copied.
            </summary>
            <param name="path">The local file system path where the files are to copy.</param>
            <param name="changesSince">Date which files must have changed since in ordered to be copied.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo where the files are copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.MoveTo(System.String,System.String)">
            <summary>
            Moves the files from this directory to the target directory specified by the bucket and object key.
            </summary>
            <param name="newBucket">The target bucket to move to.</param>
            <param name="newKey">The target object key which represents a directory in S3.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.MoveTo(Amazon.S3.IO.S3DirectoryInfo)">
            <summary>
            Moves the files from this directory to the target S3 directory.
            </summary>
            <param name="newLoc">The target directory to copy to.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.MoveToLocal(System.String)">
            <summary>
            Moves the files from the S3 directory to the local file system in the location indicated by the path parameter.
            </summary>
            <param name="path">The location on the local file system to move the files to.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>DirectoryInfo for the local directory where files are moved to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.MoveFromLocal(System.String)">
            <summary>
            Moves files from the local file system to S3 in this directory.  Sub directories are moved as well.
            </summary>
            <param name="path">The local file system path where the files are to be moved.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3DirectoryInfo where the files are moved to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3DirectoryInfo.WaitTillBucketS3StateIsConsistent(System.Boolean)">
            <summary>
            Creating and deleting buckets can sometimes take a little bit of time.  To make sure
            users of this API do not experience the side effects of the eventual consistency
            we block until the state change has happened.
            </summary>
            <param name="exists"></param>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Bucket">
            <summary>
            The S3DirectoryInfo for the root of the S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Exists">
            <summary>
            Checks with S3 to see if the directory exists and if so returns true.
            
            Due to Amazon S3's eventual consistency model this property can return false for newly created buckets.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Amazon#S3#IO#IS3FileSystemInfo#Extension">
            <summary>
            Returns empty string for directories.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.FullName">
            <summary>
            The full path of the directory including bucket name.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.LastWriteTime">
            <summary>
            Returns the last write time of the the latest file written to the directory.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.LastWriteTimeUtc">
            <summary>
            UTC converted version of LastWriteTime.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Name">
            <summary>
            Returns the name of the folder.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Parent">
            <summary>
            Return the S3DirectoryInfo of the parent directory.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Root">
            <summary>
            Returns the S3DirectroyInfo for the S3 account.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3DirectoryInfo.Type">
            <summary>
            Returns the type of file system element.
            </summary>
        </member>
        <member name="T:Amazon.S3.IO.S3FileInfo">
            <summary>
            Mimics the System.IO.FileInfo for a file in S3.  It exposes properties and methods manipulating files in S3.
            </summary>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.#ctor(Amazon.S3.IAmazonS3,System.String,System.String)">
            <summary>
            Initialize a new instance of the S3FileInfo class for the specified S3 bucket and S3 object key.
            </summary>
            <param name="s3Client">S3 client which is used to access the S3 resources.</param>
            <param name="bucket">Name of the S3 bucket.</param>
            <param name="key">The S3 object key.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(System.String,System.String)">
            <summary>
            Copies this file's content to the file indicated by the S3 bucket and object key.
            If the file already exists in S3 than an ArgumentException is thrown.
            </summary>
            <param name="newBucket">S3 bucket to copy the file to.</param>
            <param name="newKey">S3 object key to copy the file to.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(System.String,System.String,System.Boolean)">
            <summary>
            Copies this file's content to the file indicated by the S3 bucket and object key.
            If the file already exists in S3 and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="newBucket">S3 bucket to copy the file to.</param>
            <param name="newKey">S3 object key to copy the file to.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3 and overwrite is set to false.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(Amazon.S3.IO.S3DirectoryInfo)">
            <summary>
            Copies this file to the target directory.
            If the file already exists in S3 than an ArgumentException is thrown.
            </summary>
            <param name="dir">Target directory where to copy the file to.</param>
            <exception cref="T:System.ArgumentException">If the directory does not exist.</exception>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(Amazon.S3.IO.S3DirectoryInfo,System.Boolean)">
            <summary>
            Copies this file to the target directory.
            If the file already exists in S3 and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="dir">Target directory where to copy the file to.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.ArgumentException">If the directory does not exist.</exception>
            <exception cref="T:System.IO.IOException">If the file already exists in S3 and overwrite is set to false.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(Amazon.S3.IO.S3FileInfo)">
            <summary>
            Copies this file to the location indicated by the passed in S3FileInfo.
            If the file already exists in S3 than an ArgumentException is thrown.
            </summary>
            <param name="file">The target location to copy this file to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyTo(Amazon.S3.IO.S3FileInfo,System.Boolean)">
            <summary>
            Copies this file to the location indicated by the passed in S3FileInfo.
            If the file already exists in S3 and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="file">The target location to copy this file to.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3 and overwrite is set to false.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the newly copied file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyToLocal(System.String)">
            <summary>
            Copies from S3 to the local file system.  
            If the file already exists on the local file system than an ArgumentException is thrown.
            </summary>
            <param name="destFileName">The path where to copy the file to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists locally.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>FileInfo for the local file where file is copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyToLocal(System.String,System.Boolean)">
            <summary>
            Copies from S3 to the local file system.  
            If the file already exists on the local file system and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="destFileName">The path where to copy the file to.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.IO.IOException">If the file already exists locally and overwrite is set to false.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>FileInfo for the local file where file is copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyFromLocal(System.String)">
            <summary>
            Copies the file from the local file system to S3.
            If the file already exists in S3 than an ArgumentException is thrown.
            </summary>
            <param name="srcFileName">Location of the file on the local file system to copy.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo where the file is copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CopyFromLocal(System.String,System.Boolean)">
            <summary>
            Copies the file from the local file system to S3.
            If the file already exists in S3 and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="srcFileName">Location of the file on the local file system to copy.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3 and overwrite is set to false.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo where the file is copied to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.Create">
            <summary>
            Returns a Stream that can be used to write data to S3. 
            </summary>
            <remarks>
            <note>The content will not be written to S3 until the Stream is closed.</note>
            </remarks>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>Stream to write content to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.CreateText">
            <summary>
            Returns a StreamWriter that can be used to write data to S3. 
            </summary>
            <remarks>
            <note>The content will not be written to S3 until the Stream is closed.</note>
            </remarks>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>Stream to write content to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.Delete">
            <summary>
            Deletes the from S3.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveTo(System.String,System.String)">
            <summary>
            Moves the file to a a new location in S3.
            </summary>
            <param name="bucket">Bucket to move the file to.</param>
            <param name="key">Object key to move the file to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveTo(Amazon.S3.IO.S3DirectoryInfo)">
            <summary>
            Moves the file to a a new location in S3.
            </summary>
            <param name="path">The target directory to copy to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveTo(Amazon.S3.IO.S3FileInfo)">
            <summary>
            Moves the file to a a new location in S3.
            </summary>
            <param name="file">The target file to copy to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo for the target location.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveToLocal(System.String)">
            <summary>
            Moves the file from S3 to the local file system in the location indicated by the path parameter.
            </summary>
            <param name="path">The location on the local file system to move the file to.</param>
            <exception cref="T:System.IO.IOException">If the file already exists locally.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>FileInfo for the local file where file is moved to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveFromLocal(System.String)">
            <summary>
            Moves the file from the local file system to S3 in this directory.
            If the file already exists in S3 than an ArgumentException is thrown.
            </summary>
            <param name="path">The local file system path where the files are to be moved.</param>
            <exception cref="T:System.IO.IOException">If the file already exists locally.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo where the file is moved to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.MoveFromLocal(System.String,System.Boolean)">
            <summary>
            Moves the file from the local file system to S3 in this directory.
            If the file already exists in S3 and overwrite is set to false than an ArgumentException is thrown.
            </summary>
            <param name="path">The local file system path where the files are to be moved.</param>
            <param name="overwrite">Determines whether the file can be overwritten.</param>
            <exception cref="T:System.IO.IOException">If the file already exists in S3 and overwrite is set to false.</exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo where the file is moved to.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.OpenRead">
            <summary>
            Returns a Stream for reading the contents of the file.
            </summary>
            <exception cref="T:System.IO.IOException">The file is already open.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>Stream to read from.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.OpenText">
            <summary>
            Returns a StreamReader for reading the contents of the file.
            </summary>
            <exception cref="T:System.IO.IOException">The file is already open.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>StreamReader to read from.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.OpenWrite">
            <summary>
            Returns a Stream for writing to S3.  If the file already exists it will be overwritten.
            </summary>
            <remarks>
            <note>The content will not be written to S3 until the Stream is closed.</note>
            </remarks>
            <exception cref="T:System.IO.IOException">The file is already open.</exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>Stream to write from.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.Replace(System.String,System.String,System.String,System.String)">
            <summary>
            Replaces the destination file with the content of this file and then deletes the orignial file.  If a backup location is specifed then the content of destination file is 
            backup to it.
            </summary>
            <param name="destinationBucket">Destination bucket of this file will be copy to.</param>
            <param name="destinationKey">Destination object key of this file will be copy to.</param>
            <param name="backupBucket">Backup bucket to store the contents of the destination file.</param>
            <param name="backupKey">Backup object key to store the contents of the destination file.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the destination file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.Replace(Amazon.S3.IO.S3DirectoryInfo,Amazon.S3.IO.S3DirectoryInfo)">
            <summary>
            Replaces the destination file with the content of this file and then deletes the orignial file.  If a backupDir is specifed then the content of destination file is 
            backup to it.
            </summary>
            <param name="destDir">Where the contents of this file will be copy to.</param>
            <param name="backupDir">If specified the destFile is backup to it.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the destination file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.Replace(Amazon.S3.IO.S3FileInfo,Amazon.S3.IO.S3FileInfo)">
            <summary>
            Replaces the destination file with the content of this file and then deletes the orignial file.  If a backupFile is specifed then the content of destination file is 
            backup to it.
            </summary>
            <param name="destFile">Where the contents of this file will be copy to.</param>
            <param name="backupFile">If specified the destFile is backup to it.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns>S3FileInfo of the destination file.</returns>
        </member>
        <member name="M:Amazon.S3.IO.S3FileInfo.ReplaceLocal(System.String,System.String)">
            <summary>
            Replaces the content of the destination file on the local file system with the content from this file from S3.
            If a backup file is specified then the content of the destination file is backup to it.
            </summary>
            <param name="destinationFileName"></param>
            <param name="destinationBackupFileName"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
            <returns></returns>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Directory">
            <summary>
            Returns the parent S3DirectoryInfo.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.DirectoryName">
            <summary>
            The full name of parent directory.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Exists">
            <summary>
            Checks S3 if the file exists in S3 and return true if it does.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Extension">
            <summary>
            Gets the file's extension.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.FullName">
            <summary>
            Returns the full path including the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.LastWriteTime">
            <summary>
            Returns the last time the file was modified.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.LastWriteTimeUtc">
            <summary>
            Returns the last time the fule was modified in UTC.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Length">
            <summary>
            Returns the content length of the file.
            </summary>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:Amazon.S3.AmazonS3Exception"></exception>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Name">
            <summary>
            Returns the file name without its directory name.
            </summary>
        </member>
        <member name="P:Amazon.S3.IO.S3FileInfo.Type">
            <summary>
            Returns the type of file system element.
            </summary>
        </member>
        <member name="T:Amazon.S3.IO.FileSystemType">
            <summary>
            Enumeration indicated whether a file system element is a file or directory.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.AbortMultipartUploadRequest">
            <summary>
            The parameters to request an abort of a multipart upload.
            </summary>
            <remarks>
            After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. 
            The storage consumed by any previously uploaded parts will be freed. However, if any part uploads 
            are currently in progress, those part uploads might or might not succeed. As a result, it might be 
            necessary to abort a given multipart upload multiple times in order to completely free all storage 
            consumed by all parts.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName containing the S3 object that was being uploaded in parts.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.Key">
            <summary>
            The key of the S3 object that was being uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.UploadId">
            <summary>
            The upload id for the in-progress multipart upload that should be aborted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.AbortMultipartUploadResponse">
            <summary>
            Returns information about the AbortMultipartUpload response metadata.
            The AbortMultipartUpload operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ByteRange">
            <summary>
            This class represents the byte range for a range GET from S3.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.ByteRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Constructs a ByteRange and sets the start and end.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.Start">
            <summary>
            The starting byte number of the range
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.End">
            <summary>
            The ending byte number of the range
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.FormattedByteRange">
            <summary>
            The formatted string representing the byte range to be set for the range header.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CompleteMultipartUploadRequest">
            <summary>
            Container for the parameters to the CompleteMultipartUpload operation.
            <para>Completes a multipart upload by assembling previously uploaded parts.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.PartETag[])">
            <summary>
            Adds a collection of part numbers and corresponding etags.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.PartETag})">
            <summary>
            Adds a collection of part numbers and corresponding etags.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.UploadPartResponse[])">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the UploadPartResponses into PartETags.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.UploadPartResponse})">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the UploadPartResponses into PartETags.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.CopyPartResponse[])">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the CopyPartResponse into PartETags.
            </summary>
            <param name="responses">The list of response objects return from CopyParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.CopyPartResponse})">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the CopyPartResponse into PartETags.
            </summary>
            <param name="responses">The list of response objects return from CopyParts.</param>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName containing the S3 object that was being uploaded in parts.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.Key">
            <summary>
            The key of the S3 object that was being uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.PartETags">
            <summary>
            A collection of part numbers and corresponding etags.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.UploadId">
            <summary>
            The upload id for the in-progress multipart upload that should be completed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CompleteMultipartUploadResponse">
            <summary>
            Returns information about the  CompleteMultipartUpload response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Location">
            <summary>
            Gets and sets the URI that identifies the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.BucketName">
            <summary>
            Gets and sets the name of the bucketName that contains the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Key">
            <summary>
            Gets and sets the object key of the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.ETag">
            <summary>
            Gets and sets Entity tag that identifies the newly created object's data. Objects with different
            object data will have different entity tags. The entity tag is an opaque string.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.ServerSideEncryptionMethod">
            <summary>
            Gets and sets the ServerSideEncryptionMethod property.
            Specifies the encryption used on the server to
            store the content.
            Default is None.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.VersionId">
            <summary>
            Gets and sets the VersionId property.
            This is the version-id of the S3 object
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyObjectRequest">
            <summary>
            Container for the parameters to the CopyObject operation.
            <para>Creates a copy of an object that is already stored in Amazon S3.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutWithACLRequest.Grants">
            <summary>
            Gets the access control lists (ACLs) for this request. 
            Please refer to <see cref="T:Amazon.S3.Model.Grant"/> for information on
            S3 Grants.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceBucket">
            <summary>
            Checks if SourceBucket property is set.
            </summary>
            <returns>true if SourceBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceKey">
            <summary>
            Checks if SourceKey property is set.
            </summary>
            <returns>true if SourceKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceVersionId">
            <summary>
            Checks if SourceVersionId property is set.
            </summary>
            <returns>true if SourceVersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetDestinationBucket">
            <summary>
            Checks if DestinationBucket property is set.
            </summary>
            <returns>true if DestinationBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetDestinationKey">
            <summary>
            Checks if DestinationKey property is set.
            </summary>
            <returns>true if DestinationKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagToMatch property is set.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) is different
            than the specified Etag; otherwise returns a 412 (failed condition).
            Constraints: This header can be used with IfModifiedSince, but cannot
            be used with other conditional copy properties.
            </remarks>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceBucket">
            <summary>
            The name of the bucket containing the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceKey">
            <summary>
            The key of the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceVersionId">
            <summary>
            Specifies a particular version of the source object to copy. By default the latest version is copied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.DestinationBucket">
            <summary>
            The name of the bucket to contain the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.DestinationKey">
            <summary>
            The key to be given to the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.CannedACL">
            <summary>
            A canned access control list (CACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ETagToMatch">
            <summary>
            ETag to be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) matches 
            the specified tag; otherwise return a 412 (precondition failed).
            Constraints: This property can be used with IfUnmodifiedSince,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ETagToNotMatch">
            <summary>
            ETag that must not be matched as a pre-condition for copying the source object,
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it has been modified since the
            specified time; otherwise returns a 412 (failed condition).
            Constraints: This property can be used with ETagToNotMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.UnmodifiedSinceDate">
            <summary>
            Copies the object if it has not been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it hasn't been modified since the
            specified time; otherwise returns a 412 (precondition failed).
            Constraints: This property can be used with ETagToMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.MetadataDirective">
            <summary>
            Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.StorageClass">
            <summary>
            The type of storage to use for the object. Defaults to 'STANDARD'.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.WebsiteRedirectLocation">
            <summary>
            If the bucketName is configured as a website, redirects requests for this object to another object in the same bucketName or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyObjectResponse">
            <summary>
            Returns information about the  CopyObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.LastModified">
            <summary>
            Gets and sets the LastModified property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.SourceVersionId">
            <summary>
            Gets and sets the SourceVersionId property.
            This is the Version Id of the Source Object
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyPartRequest">
            <summary>
            Container for the parameters to the CopyPart operation.
            <para>Uploads a part by copying data from an existing object as data source.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceBucket">
            <summary>
            Checks if SourceBucket property is set.
            </summary>
            <returns>true if SourceBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceKey">
            <summary>
            Checks if SourceKey property is set.
            </summary>
            <returns>true if SourceKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceVersionId">
            <summary>
            Checks if SourceVersionId property is set.
            </summary>
            <returns>true if SourceVersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetDestinationBucket">
            <summary>
            Checks if DestinationBucket property is set.
            </summary>
            <returns>true if DestinationBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetDestinationKey">
            <summary>
            Checks if DestinationKey property is set.
            </summary>
            <returns>true if DestinationKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagsToMatch property is set.
            </summary>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetPartNumber">
            <summary>
            Checks if PartNumber property is set.
            </summary>
            <returns>true if PartNumber property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetFirstByte">
            <summary>
            Checks if FirstByte property is set.
            </summary>
            <returns>true if FirstByte property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetLastByte">
            <summary>
            Checks if LastByte property is set.
            </summary>
            <returns>true if LastByte property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetServerSideEncryptionMethod">
            <summary>
            Checks if ServerSideEncryptionMethod property is set.
            </summary>
            <returns>true if ServerSideEncryptionMethod property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceBucket">
            <summary>
            The name of the bucket containing the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceKey">
            <summary>
            The key of the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceVersionId">
            <summary>
            Specifies a particular version of the source object to copy. By default the latest version is copied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.DestinationBucket">
            <summary>
            The name of the bucket to contain the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.DestinationKey">
            <summary>
            The key to be given to the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.UploadId">
            <summary>
            The ID identifying multipart upload for which we are copying a part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ETagToMatch">
            <summary>
            Collection of ETags to be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) matches one of
            the specified tags; otherwise return a 412 (precondition failed).
            Constraints: This property can be used with IfUnmodifiedSince,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ETagsToNotMatch">
            <summary>
            Collection of ETags that must not be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) does not match any of the specified
            tags; otherwise returns a 412 (failed condition).
            Constraints: This header can be used with IfModifiedSince, but cannot
            be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it has been modified since the
            specified time; otherwise returns a 412 (failed condition).
            Constraints: This property can be used with ETagToNotMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.UnmodifiedSinceDate">
            <summary>
            Copies the object if it has not been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it hasn't been modified since the
            specified time; otherwise returns a 412 (precondition failed).
            Constraints: This property can be used with ETagToMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.PartNumber">
            <summary>
            The number of the part to be copied.
            </summary>
            <remarks>
            Valid part numbers are from 1 to 10,000 inclusive and will uniquely identify the part 
            and determine the relative ordering within the destination object.  If a part already
            exists with the PartNumber it will be overwritten.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.FirstByte">
            <summary>
            The location of the first byte in the range if only a portion of the 
            source object is to be copied as the part. 
            </summary>
            <remarks>
            The LastByte property must also be set or this value will be ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.LastByte">
            <summary>
            The location of the last byte in the range if only a portion of the 
            source object is to be copied as the part.  
            </summary>
            <remarks>
            The FirstByte property must also be set or this value will be ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ServerSideEncryptionMethod">
            <summary>
            <para>
            Specifies the encryption to be used on the server for the new object.
            </para>
            <para>
            Default: None
            </para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyPartResponse">
            <summary>
            Returns information about the  CopyPart response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.CopySourceVersionId">
            <summary>
            The version of the source object that was copied, if you have enabled versioning on the source bucketName.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.ETag">
            <summary>
            Entity tag of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.LastModified">
            <summary>
            Date and time at which the object was uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.PartNumber">
            <summary>
            Gets and sets the PartNumber property.
            This is the part number in it's multi-part upload that will uniquely identify the part 
            and determine the relative ordering within the destination object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CORSConfiguration">
            <summary>
            A collection of up to 100 cross-origin resource sharing (CORS) rules.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSConfiguration.Rules">
            <summary>
            The collection of rules in this configuration.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CORSRule">
            <summary>C O R S Rule
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CORSRule.IsSetId">
            <summary>
            Checks if Id property is set.
            </summary>
            <returns>true if Id property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CORSRule.IsSetAllowedHeaders">
            <summary>
            Checks if AllowedHeaders property is set.
            </summary>
            <returns>true if AllowedHeaders property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedMethods">
            <summary>
            Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedOrigins">
            <summary>
            One or more origins you want customers to be able to access the bucket from.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.Id">
            <summary>
            An optional unique identifier for the rule.
            </summary>
            <remarks>
            The ID value can be up to 255 characters long. The IDs help you find a rule in the configuration.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.ExposeHeaders">
            <summary>
            One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript
            XMLHttpRequest object).
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.MaxAgeSeconds">
            <summary>
            The time in seconds that your browser is to cache the preflight response for the specified resource.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedHeaders">
            <summary>
            Specifies which headers are allowed in a pre-flight OPTIONS request through the 
            Access-Control-Request-Headers header. 
            </summary>
            <remarks>
            Each header name specified in the Access-Control-Request-Headers must have a corresponding 
            entry in the rule. Only the headers that were requested will be sent back. 
            This element can contain at most one * wildcard character.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketPolicyRequest">
            <summary>
            Container for the parameters to the DeleteBucketPolicy operation.
            <para>Deletes the policy from the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketPolicyRequest.BucketName">
            <summary>
            The bucket on which the policy is to be deleted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketPolicyResponse">
            <summary>
            Returns information about the DeleteBucketPolicy response metadata.
            The DeleteBucketPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketRequest">
            <summary>
            Container for the parameters to the DeleteBucket operation.
            <para>Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket
            itself can be deleted.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.BucketName">
            <summary>
            The name of the bucket to be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.BucketRegion">
            <summary>
            The region locality for the bucket.
            </summary>
            <remarks>
            When set, this will determine the region the bucket exists in.
            Refer <see cref="T:Amazon.S3.Model.S3Region"/>
            for a list of possible values.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.UseClientRegion">
            <summary>
            If set to true the bucket will be deleted in the same region as the configuration of the AmazonS3 client.
            DeleteBucketRequest.BucketRegion takes precedence over this property if both are set.
            Default: true.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketResponse">
            <summary>
            Returns information about the DeleteBucket response metadata.
            The DeleteBucket operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketTaggingRequest">
            <summary>
            The parameters to request deletion of a tag set from a bucket.
            </summary>
            <remarks>
            To use this operation, you must have permission to perform the s3:PutBucketTagging action. 
            By default, the bucket owner has this permission and can grant this permission to others.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket on which the tag set is to be removed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketTaggingResponse">
            <summary>
            Returns information about the DeleteBucketTagging response metadata.
            The DeleteBucketTagging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketWebsiteRequest">
            <summary>
            Container for the parameters to the DeleteBucketWebsite operation.
            <para>This operation removes the website configuration from the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket on which website configuration is to be removed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketWebsiteResponse">
            <summary>
            Returns information about the DeleteBucketWebsite response metadata.
            The DeleteBucketWebsite operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteCORSConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteCORSConfiguration operation.
            <para>Deletes the cors configuration information set for the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteCORSConfigurationResponse">
            <summary>
            Returns information about the DeleteCORSConfiguration response metadata.
            The DeleteCORSConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeletedObject">
            <summary>
            Contains information about a successful delete operation against a specific S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.DeleteMarker">
            <summary>
            Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a 
            delete marker. In a simple DELETE, this header indicates whether (true) or not (false) a delete 
            marker was created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.DeleteMarkerVersionId">
            <summary>
            The version ID of the delete marker created as a result of the DELETE operation. If you delete a 
            specific object version, the value returned by this header is the version ID of the object version 
            deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.Key">
            <summary>
            The key of the deleted S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.VersionId">
            <summary>
            The version of the deleted S3 object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteError">
            <summary>
            Contains information about a failed delete operation against a specific S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Key">
            <summary>
            The key of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.VersionId">
            <summary>
            The version of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Code">
            <summary>
            The failure code for the delete error.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Message">
            <summary>
            The failure message for the delete error.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteLifecycleConfigurationRequest">
            <summary>
            The parameters to request deletion of the lifecycle configuration on a bucket. 
            </summary>
            <remarks>
            <para>
            Amazon S3 removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. 
            Your objects never expire, and Amazon S3 no longer automatically deletes any objects on the basis of rules contained 
            in the deleted lifecycle configuration.
            </para>
            <para>
            To use this operation, you must have permission to perform the s3:PutLifecycleConfiguration action. By default, the 
            bucket owner has this permission and the bucket owner can grant this permission to others.
            </para>
            <para>
            There is usually some time lag before lifecycle configuration deletion is fully propagated to all the Amazon S3 systems.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteLifecycleConfigurationRequest.BucketName">
            <summary>
            The name of the bucket on which the lifecycle configuration is to be deleted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteLifecycleConfigurationResponse">
            <summary>
            Returns information about the DeleteLifecycleConfiguration response metadata.
            The DeleteLifecycleConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectRequest">
            <summary>
            The parameters to request deletion of an object in a bucket. 
            The operation removes the null version (if there is one) of an object and inserts a delete marker, which 
            becomes the latest version of the object.
            </summary>
            <remarks>
            <para>
            To remove a specific version, you must be the bucket owner and you must use the versionId subresource. 
            Using this subresource permanently deletes the version.
            </para>
            <para>
            If the object you want to delete is in a bucket where the bucket versioning configuration is MFA Delete enabled, 
            you must include specify the MFA serial number and value in the request.
            </para>
            <para>
            If there isn't a null version, Amazon S3 does not remove any objects.     
            </para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.BucketName">
            <summary>
            The name of the bucket containing the object to delete.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.Key">
            <summary>
            The key identifying the object to delete.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.VersionId">
            <summary>
            The identifier for the specific version of the object to be deleted, if required.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectResponse">
            <summary>
            Returns information about the  DeleteObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectResponse.DeleteMarker">
            <summary>
            Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectResponse.VersionId">
            <summary>
            Returns the version ID of the delete marker created as a result of the DELETE operation.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.DeleteObjectsException">
            <summary>
            AmazonS3 exception.
            Thrown when DeleteObjects returns successfully, but some of the objects
            were not deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.DeleteObjectsException.Response">
            <summary>
            Gets and sets the ErrorResponse property.
            The DeleteObjectsErrorResponse associated with this exception.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectsRequest">
            <summary>
            Container for the parameters to the DeleteObjects operation.
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
            <summary>
            Container for the parameters to the DeleteObjects operation.
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(System.String)">
            <summary>
            Add a key to the set of keys of objects to be deleted.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(System.String,System.String)">
            <summary>
            Add a key and a version to be deleted.
            </summary>
            <param name="key">Key of the object to be deleted.</param>
            <param name="version">Version of the object to be deleted.</param>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(Amazon.S3.Model.KeyVersion)">
            <summary>
            Add a KeyVersion object representing the S3 object to be deleted.
            </summary>
            <param name="keyVersion">KeyVersion representation of object to be deleted.</param>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.Quiet">
            <summary>
            Toggles between Quiet and Verbose mode for the operation.
            If set to true (Quiet mode), the response includes only those keys for objects on which
            the delete operation failed.
            </summary>
            <remarks>
            By default this property is false and keys for both successful deletes
            and failures are returned in the response.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectsResponse">
            <summary>
            Returns information about the  DeleteObjects response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsResponse.DeletedObjects">
            <summary>
            Gets and sets the DeletedObjects property.
            A list of successful deletes.
            Set only when Quiet=false on DeleteObjectsRequest.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsResponse.DeleteErrors">
            <summary>
            Gets and sets the DeleteErrors property.
            A list of errors encountered while deleting objects.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Expiration">
            <summary>
            Defines the expiration policy for a given object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.Expiration.#ctor">
            <summary>
            Constructs an empty instance of an Expiration object
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Expiration.ExpiryDate">
            <summary>
            The date and time for expiry.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Expiration.RuleId">
            <summary>
            Id of the configuration rule for this expiry.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetACLRequest">
            <summary>
            Container for the parameters to the GetACL operation.
            <para>Returns the access control list (ACL) of an object.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.BucketName">
            <summary>
            The name of the bucket to be queried or containing the object to be queried.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.Key">
            <summary>
            The key of the S3 object to be queried.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetACLResponse">
            <summary>
            Returns information about the GetACL response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLResponse.AccessControlList">
            <summary>
            Gets and sets the AccessControlList property.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLocationRequest">
            <summary>
            Container for the parameters to the GetBucketLocation operation.
            <para>Returns the region the bucket resides in.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLocationResponse">
            <summary>
            Returns information about the  GetBucketLocation response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLocationResponse.Location">
            <summary>
            Gets and sets the Location property.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLoggingRequest">
            <summary>
            Container for the parameters to the GetBucketLogging operation.
            <para>Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the
            bucket owner.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLoggingRequest.BucketName">
            <summary>
            The name of the bucket to query.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLoggingResponse">
            <summary>
            Returns information about the  GetBucketLogging response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLoggingResponse.BucketLoggingConfig">
            <summary>
            Gets and sets the LoggingConfig property.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketNotificationRequest">
            <summary>
            Container for the parameters to the GetBucketNotification operation.
            <para>Return the notification configuration of a bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketNotificationResponse">
            <summary>
            Returns information about the  GetBucketNotification response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketPolicyRequest">
            <summary>
            Container for the parameters to the GetBucketPolicy operation.
            <para>Returns the policy of a specified bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketPolicyRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketPolicyResponse">
            <summary>
            Get BucketName Policy Response
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketPolicyResponse.Policy">
            <summary>
            The bucket policy as a JSON document.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketRequestPaymentRequest">
            <summary>
            Container for the parameters to the GetBucketRequestPayment operation.
            <para>Returns the request payment configuration of a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketRequestPaymentRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketRequestPaymentResponse">
            <summary>
            Returns information about the  GetBucketRequestPayment response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketRequestPaymentResponse.Payer">
            <summary>
            Specifies who pays for the download and request fees.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketTaggingRequest">
            <summary>
            Container for the parameters to the GetBucketTagging operation.
            <para>Returns the tag set associated with the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketTaggingResponse">
            <summary>
            Returns information about the  GetBucketTagging response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketTaggingResponse.TagSet">
            <summary>
            The collection of tags.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketVersioningRequest">
            <summary>
            Container for the parameters to the GetBucketVersioning operation.
            <para>Returns the versioning state of a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketVersioningRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketVersioningResponse">
            <summary>
            Returns information about the  GetBucketVersioning response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketVersioningResponse.VersioningConfig">
            <summary>
            Gets and sets the Versioning property.
            Unless Versioning has been explicitly "Enabled" on a bucket,
            Versioning Status is "Off". Once Versioning has been 
            "Enabled", it can be "Suspended" but cannot be switched "Off".
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketWebsiteRequest">
            <summary>
            Container for the parameters to the GetBucketWebsite operation.
            <para>Returns the website configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketWebsiteResponse">
            <summary>
            Returns information about the  GetBucketWebsite response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketWebsiteResponse.WebsiteConfiguration">
            <summary>
            Gets and sets the WebsiteConfiguration property.
            
            This is where the index document suffix and custom error page are defined.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetCORSConfigurationRequest">
            <summary>
            Container for the parameters to the GetBucketCors operation.
            <para>Returns the cors configuration for the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetCORSConfigurationResponse">
            <summary>
            Returns information about the  GetBucketCors response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetCORSConfigurationResponse.Configuration">
            <summary>
            The current CORSConfiguration for the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the GetLifecycleConfiguration operation.
            <para>Returns the lifecycle configuration information set on the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetLifecycleConfigurationResponse">
            <summary>
            Returns information about the  GetLifecycleConfiguration response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetLifecycleConfigurationResponse.Configuration">
            <summary>
            Gets and Sets the property that governs whether
            the response includes successful deletes as well as errors
            following the DeleteObjects call against S3.
            
            By default this property is false and successful deletes
            are returned in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectMetadataRequest">
            <summary>
            Container for the parameters to the HeadObject operation.
            <para>The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you''re only
            interested in an object''s metadata. To use HEAD, you must have READ access to the object.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.BucketName">
            <summary>
            The name of the bucket that contains the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.EtagToMatch">
            <summary>
            ETag to be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.ModifiedSinceDate">
            <summary>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.EtagToNotMatch">
            <summary>
            ETag that should not be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.UnmodifiedSinceDate">
            <summary>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectMetadataResponse">
            <summary>
            Returns information about the  HeadObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.DeleteMarker">
            <summary>
            Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the
            response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.RestoreExpiration">
            <summary>
            Gets and sets the RestoreExpiration property.
            RestoreExpiration will be set for objects that have been restored from Amazon Glacier.  
            It indiciates for those objects how long the restored object will exist.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.RestoreInProgress">
            <summary>
            Gets and sets the RestoreInProgress
            Will be true when the object is in the process of being restored from Amazon Glacier.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.LastModified">
            <summary>
            Last modified date of the object
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.ETag">
            <summary>
            An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.MissingMeta">
            <summary>
            This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like
            SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal
            HTTP headers.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectRequest">
            <summary>
            Container for the parameters to the GetObject operation.
            <para>Retrieves objects from Amazon S3.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.BucketName">
            <summary>
            The name of the bucket containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.EtagToMatch">
            <summary>
            ETag to be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ModifiedSinceDate">
            <summary>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.EtagToNotMatch">
            <summary>
            ETag that should not be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.UnmodifiedSinceDate">
            <summary>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ByteRange">
            <summary>
            Downloads the specified range bytes of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ResponseHeaderOverrides">
            <summary>
            A set of response headers that should be returned with the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ResponseExpires">
            <summary>
            Sets the Expires header of the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectResponse">
            <summary>
            Returns information about the  GetObject response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.StreamResponse">
            <summary>
            Base class for responses that return a stream.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.StreamResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.StreamResponse.ResponseStream">
            <summary>
            An open stream read from to get the data from S3. In order to
            use this stream without leaking the underlying resource, please
            wrap access to the stream within a using block.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectResponse.WriteResponseStreamToFile(System.String)">
            <summary>
            Writes the content of the ResponseStream a file indicated by the filePath argument.
            </summary>
            <param name="filePath">The location where to write the ResponseStream</param>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectResponse.WriteResponseStreamToFile(System.String,System.Boolean)">
            <summary>
            Writes the content of the ResponseStream a file indicated by the filePath argument.
            </summary>
            <param name="filePath">The location where to write the ResponseStream</param>
            <param name="append">Whether or not to append to the file if it exists</param>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectResponse.OnRaiseProgressEvent(System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            This method is called by a producer of write object progress
            notifications. When called, all the subscribers in the 
            invocation list will be called sequentially.
            </summary>
            <param name="file">The file being written.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectResponse.WriteResponseStreamToFileAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Writes the content of the ResponseStream a file indicated by the filePath argument.
            </summary>
            <param name="filePath">The location where to write the ResponseStream</param>
            <param name="append">Whether or not to append to the file if it exists</param>
            <param name="cancellationToken">Cancellation token which can be used to cancel this operation.</param>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.DeleteMarker">
            <summary>
            Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the
            response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.RestoreExpiration">
            <summary>
            Gets and sets the RestoreExpiration property.
            RestoreExpiration will be set for objects that have been restored from Amazon Glacier.  
            It indiciates for those objects how long the restored object will exist.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.RestoreInProgress">
            <summary>
            Gets and sets the RestoreInProgress
            Will be true when the object is in the process of being restored from Amazon Glacier.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.LastModified">
            <summary>
            Last modified date of the object
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.ETag">
            <summary>
            An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.MissingMeta">
            <summary>
            This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like
            SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal
            HTTP headers.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="E:Amazon.S3.Model.GetObjectResponse.WriteObjectProgressEvent">
            <summary>
            The event for Write Object progress notifications. All
            subscribers will be notified when a new progress
            event is raised.
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            put object progress notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, WriteObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the Put Object Progress Event delegate's invocation list
            <code>
            GetObjectResponse response = s3Client.GetObject(request);
            response.WriteObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.WriteObjectProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            download progress for the Write Object Event.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.TransferProgressArgs">
            <summary>
            Arguments containing event details for an in-flight transfer.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.TransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Model.TransferProgressArgs.ToString">
            <summary>
            Returns a string representation of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.PercentDone">
            <summary>
            Gets the percentage of transfer completed
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.IncrementTransferred">
            <summary>
            Gets the number of bytes transferred since last event
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.TransferredBytes">
            <summary>
            Gets the number of bytes transferred
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.TotalBytes">
            <summary>
            Gets the total number of bytes to be transferred
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.WriteObjectProgressArgs.#ctor(System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="bucketName">The bucket name for the S3 object being written.</param>
            <param name="key">The object key for the S3 object being written.</param>
            <param name="versionId">The version-id of the S3 object.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Model.WriteObjectProgressArgs.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="bucketName">The bucket name for the S3 object being written.</param>
            <param name="key">The object key for the S3 object being written.</param>
            <param name="filePath">The file for the S3 object being written.</param>
            <param name="versionId">The version-id of the S3 object.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.BucketName">
            <summary>
            Gets the bucket name for the S3 object being written.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.Key">
            <summary>
            Gets the object key for the S3 object being written.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.VersionId">
            <summary>
            Gets the version-id of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.FilePath">
            <summary>
            The file for the S3 object being written.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectTorrentRequest">
            <summary>
            Container for the parameters to the GetObjectTorrent operation.
            <para>Return torrent files from a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectTorrentRequest.BucketName">
            <summary>
            The name of the bucket containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectTorrentRequest.Key">
            <summary>
            The key identifying the object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectTorrentResponse">
            <summary>
            Returns information about the  GetObjectTorrent response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetPreSignedUrlRequest">
            <summary>
            The parameters to create a pre-signed URL to a bucket or object. 
            </summary>
            <remarks>
            For more information, refer to: <see href="http://docs.amazonwebservices.com/AmazonS3/latest/dev/S3_QSAuth.html"/>.
            <br />Required Parameters: BucketName, Expires
            <br />Optional Parameters: Key, VersionId, Verb: default is GET
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetExpires">
            <summary>
            Checks if Expires property is set.
            </summary>
            <returns>true if Expires property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.BucketName">
            <summary>
            The name of the bucket to create a pre-signed url to, or containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Key">
            <summary>
            The key to the object for which a pre-signed url should be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
            </summary>
            <remarks>
            <para>
            The content type for the content being uploaded. This property defaults to "binary/octet-stream".
            For more information, refer to: <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17"/>.
            </para>
            <para>
            Note that if content type is specified, it should also be included in the HttpRequest headers
            of the eventual upload request, otherwise a signature error may result.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Expires">
            <summary>
            The expiry date and time for the pre-signed url.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Protocol">
            <summary>
            The requested protocol (http/https) for the pre-signed url.
            </summary>
            <remarks>
            Defaults to https.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Verb">
            <summary>
            The verb for the pre-signed url. 
            </summary>
            <remarks>
            Accepted verbs are GET, PUT, DELETE and HEAD.
            Default is GET.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.VersionId">
            <summary>
            Version id for the object that the pre-signed url will reference. If not set,
            the url will reference the latest version of the object.
            </summary>
            <remarks>
            This is the VersionId for the S3 Object you want to get
            a PreSigned URL for. The VersionId property will be ignored
            for PreSigned "PUT" requests and for requests that don't specify
            the Key property.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ServerSideEncryptionMethod">
            <summary>
            Specifies the encryption used on the server to store the content.
            </summary>
            <remarks>
            <para>
            Default is None.
            </para>
            <para>
            If specifying encryption (not None), the corresponding request must include header
            "x-amz-server-side-encryption" with the value of the encryption.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ResponseHeaderOverrides">
            <summary>
            A set of response headers that should be returned with the pre-signed url creation response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadBucketRequest">
            <summary>
            Container for the parameters to the HeadBucket operation.
            <para>This operation is useful to determine if a bucket exists and you have permission to access it.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadBucketResponse">
            <summary>
            Returns information about the HeadBucket response metadata.
            The HeadBucket operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadersCollection">
            <summary>
            This class contains the headers for an S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Item(System.String)">
            <summary>
            Gets and sets headers to set for the object.
            </summary>
            <param name="name">The name of the header</param>
            <returns>The value for the header</returns>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Count">
            <summary>
            Gets the count of headers.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Keys">
            <summary>
            Gets the names of the headers set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.CacheControl">
            <summary>
            Specifies caching behavior along the request/reply chain.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentDisposition">
            <summary>
            Specifies presentational information for the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentEncoding">
            <summary>
            Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type
            referenced by the Content-Type header field.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentLength">
            <summary>
            The size of the object, in bytes.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentMD5">
            <summary>
            The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This 
            header can be used as a message integrity check to verify that the data is the same data that was originally sent.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.InitiateMultipartUploadRequest">
            <summary>
            Container for the parameters to the InitiateMultipartUpload operation.
            <para>Initiates a multipart upload and returns an upload ID.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.EnvelopeKey">
            <summary>
            Symmetric Envelope Key to Encrypt data
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.IV">
            <summary>
            Initialization Vector for encryption
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.CannedACL">
            <summary>
            A canned access control list (ACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName where the new object will be created, or existing object updated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Key">
            <summary>
            The key of the object to create or update.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ServerSideEncryptionMethod">
            <summary>
            <para>
            Specifies the encryption to be used on the server for the new object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.StorageClass">
            <summary>
            StorageClass property for the object.
            </summary>
            <remarks>
            Default: S3StorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:Amazon.S3.S3StorageClass"/> for
            information on S3 Storage Classes.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.WebsiteRedirectLocation">
            <summary>
            If the bucketName is configured as a website, redirects requests for this object to another object in the same bucketName or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.InitiateMultipartUploadResponse">
            <summary>
            Returns information about the  InitiateMultipartUpload response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.Key">
            <summary>
            Object key for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.UploadId">
            <summary>
            Gets and sets the initiated multipart upload id.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Initiator">
            <summary>
            <para>Identifies who initiated the multipart upload.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Initiator.DisplayName">
            <summary>
            Name of the Principal.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Initiator.Id">
            <summary>
            If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.KeyVersion">
            <summary>
            Specifies an object key and optional object version.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.KeyVersion.Key">
            <summary>
            Key name of the object to delete.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.KeyVersion.VersionId">
            <summary>
            VersionId for the specific version of the object to delete.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleConfiguration">
            <summary>Lifecycle Configuration
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRule">
            <summary>Rules Item
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Expiration">
            <summary>
            Defines the length of time, in days, before objects expire.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Id">
            <summary>
            Unique identifier for the rule. The value cannot be longer than 255 characters.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Prefix">
            <summary>
            Prefix identifying one or more objects to which the rule applies.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Status">
            <summary>
            If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRuleExpiration">
            <summary>Expiration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleExpiration.Date">
            <summary>
            Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleExpiration.Days">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleTransition">
            <summary>
            LifecycleTransition defines when and how objects transition.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.Date">
            <summary>
            Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.Days">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListBucketsRequest">
            <summary>
            Container for the parameters to the ListBuckets operation.
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListBucketsResponse">
            <summary>
            Returns information about the  ListBuckets response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListBucketsResponse.Buckets">
            <summary>
            List of buckets.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListBucketsResponse.Owner">
            <summary>
            Owner of the buckets.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListMultipartUploadsRequest">
            <summary>
            Container for the parameters to the ListMultipartUploads operation.
            <para>This operation lists in-progress multipart uploads.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.BucketName">
            <summary>
            The name of the bucketName receiving the multipart upload(s)
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Delimiter">
            <summary>
            Character you use to group keys.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.KeyMarker">
            <summary>
            Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.MaxUploads">
            <summary>
            Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that
            can be returned in a response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Prefix">
            <summary>
            Lists in-progress uploads only for those keys that begin with the specified prefix.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.UploadIdMarker">
            <summary>
            Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the
            upload-id-marker parameter is ignored.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListMultipartUploadsResponse">
            <summary>
            Returns information about the  ListMultipartUploads response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.KeyMarker">
            <summary>
            The key at or after which the listing began.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.UploadIdMarker">
            <summary>
            Upload ID after which listing began.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.NextKeyMarker">
            <summary>
            When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.NextUploadIdMarker">
            <summary>
            When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent
            request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.MaxUploads">
            <summary>
            Maximum number of multipart uploads that could have been included in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.IsTruncated">
            <summary>
            Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can
            be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.MultipartUploads">
            <summary>
            Gets and sets the MultipartUploads property.
            <para>
            Container for elements related to a particular multipart upload. A response
            can contain zero or more Upload elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListObjectsRequest">
            <summary>
            Container for the parameters to the ListObjects operation.
            <para>Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a
            subset of the objects in a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects whose keys are to be listed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Delimiter">
            <summary>
            A delimiter is a character you use to group keys.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Marker">
            <summary>
            Specifies the key to start with when listing objects in a bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.MaxKeys">
            <summary>
            Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Prefix">
            <summary>
            Limits the response to keys that begin with the specified prefix.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListObjectsResponse">
            <summary>
            Returns information about the  ListObjects response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.IsTruncated">
            <summary>
            A flag that indicates whether or not Amazon S3 returned all of the results that satisfied 
            the search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.NextMarker">
            <summary>
            Gets and sets the NextMarker property.
            NextMarker is set by S3 only if a Delimiter was specified
            in the original ListObjects request. If a delimiter was
            not specified, the AWS SDK for .NET returns the last Key
            of the List of Objects retrieved from S3 as the NextMarker.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.S3Objects">
            <summary>
            Gets the S3Objects property. This is a list of 
            objects in the bucket that match your search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.ListPartsRequest">
            <summary>
            Container for the parameters to the ListParts operation.
            <para>Lists the parts that have been uploaded for a specific multipart upload.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.BucketName">
            <summary>
            The name of the bucketName receiving the multipart upload.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.Key">
            <summary>
            The object key for which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.MaxParts">
            <summary>
            Sets the maximum number of parts to return.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.PartNumberMarker">
            <summary>
            Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose parts are being listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListPartsResponse">
            <summary>
            Returns information about the  ListParts response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Key">
            <summary>
            Object key for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose parts are being listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.PartNumberMarker">
            <summary>
            Part number after which listing begins.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.NextPartNumberMarker">
            <summary>
            When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request
            parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.MaxParts">
            <summary>
            Maximum number of parts that were allowed in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.IsTruncated">
            <summary>
            Indicates whether the returned list of parts is truncated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Parts">
            <summary>
            Gets and sets the Parts property.
            <para>
            PartDetails is a container for elements related to a particular part. A response can contain
            zero or more Part elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Initiator">
            <summary>
            Identifies who initiated the multipart upload.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Owner">
            <summary>
            Gets and sets the Owner property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListVersionsRequest">
            <summary>
            Container for the parameters to the ListVersions operation.
            <para>Returns metadata about all of the versions of objects in a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Delimiter">
            <summary>
            A delimiter is a character you use to group keys.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.KeyMarker">
            <summary>
            Specifies the key to start with when listing objects in a bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.MaxKeys">
            <summary>
            Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Prefix">
            <summary>
            Limits the response to keys that begin with the specified prefix.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.VersionIdMarker">
            <summary>
            Specifies the object version you want to start listing from.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListVersionsResponse">
            <summary>
            Returns information about the  ListVersions response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.IsTruncated">
            <summary>
            A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were
            truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting
            place in another request to return the rest of the results.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.KeyMarker">
            <summary>
            Marks the last Key returned in a truncated response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.VersionIdMarker">
            <summary>
            Gets and sets the VersionIdMarker property.
            Marks the last Version-Id returned in a truncated response.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.NextKeyMarker">
            <summary>
            Use this value for the key marker request parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.NextVersionIdMarker">
            <summary>
            Use this value for the next version id marker parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Versions">
            <summary>
            Gets and sets the Versions property. This is a list of 
            object versions in the bucket that match your search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Name">
            <summary>
            Gets and sets the Name property.
            The bucket's name.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            Keys that begin with the indicated prefix are listed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.MaxKeys">
            <summary>
            Gets and sets the MaxKeys property.
            This is the maximum number of keys in the S3ObjectVersions collection.
            The value is derived from the MaxKeys parameter to ListVersionsRequest.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.MetadataCollection">
            <summary>
            This class contains the meta data for an S3 object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.MetadataCollection.Add(System.String,System.String)">
            <summary>
            Adds the metadata to the collection, if the name already exists it will be overwritten.
            </summary>
            <param name="name">The name of the metadata element</param>
            <param name="value">The value for the metadata</param>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Item(System.String)">
            <summary>
            Gets and sets meta data for the object. Meta data names must start with "x-amz-meta-". If the name passeed in as the indexer 
            doesn't start with "x-amz-meta-" then it will be prepended.
            </summary>
            <param name="name">The name of the meta data.</param>
            <returns>The value for the meta data</returns>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Count">
            <summary>
            Gets the count of headers.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Keys">
            <summary>
            Gets the names of the meta data elements.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.MfaCodes">
            <summary>
            This class contains the mfa codes used authentication
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.SerialNumber">
            <summary>
            Gets and sets the serial number of the authentication device
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.AuthenticationValue">
            <summary>
            Gets and sets the displated value on the authentication device
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.FormattedMfaCodes">
            <summary>
            The formatted string of the mfa codes to be passed to S3.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.MultipartUpload">
            <summary>
            Container for elements related to a particular multipart upload.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Initiated">
            <summary>
            Date and time at which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Initiator">
            <summary>
            Identifies who initiated the multipart upload.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Key">
            <summary>
            Key of the object for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.UploadId">
            <summary>
            Upload ID that identifies the multipart upload.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Owner">
            <summary>
            The owner of an S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Owner.DisplayName">
            <summary>
            The display name of the owner.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Owner.Id">
            <summary>
            The unique identifier of the owner.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PartDetail">
            <summary>
            A container for elements related to a particular part in a multipart operation. 
            A response can contain zero or more Part elements.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PartETag">
            <summary>
            A container holding the part number and etag used when completing a multipart upload.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.#ctor(System.Int32,System.String)">
            <summary>
            Constructs an instance of PartETag and sets the part number and etag.
            </summary>
            <param name="partNumber">The part number.</param>
            <param name="eTag">the associated ETag for the part number.</param>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.CompareTo(Amazon.S3.Model.PartETag)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Amazon.S3.Model.PartETag.PartNumber">
            <summary>
            The part number identifying the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartETag.ETag">
            <summary>
            The entity tag associated with the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartDetail.LastModified">
            <summary>
            The date and time at which the part was uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartDetail.Size">
            <summary>
            The size of the uploaded part data.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutACLRequest">
            <summary>
            Container for the parameters to the PutAcl operation.
            <para>uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutACLRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.CannedACL">
            <summary>
            The canned ACL to apply to the bucket.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.AccessControlList">
            <summary>
            Custom ACLs to be applied to the bucket or object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.BucketName">
            <summary>
            The name of the bucket.
            If an object key is not specified, the ACLs are applied to the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.Key">
            <summary>
            The key of an S3 object.
            If not specified, the ACLs are applied to the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.VersionId">
            <summary>
            If set and an object key has been specified, the ACLs are applied
            to the specific version of the object.
            This property is ignored if the ACL is to be set on a Bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutACLResponse">
            <summary>
            Returns information about the PutObjectAcl response metadata.
            The PutAcl operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketLoggingRequest">
            <summary>
            Container for the parameters to the PutBucketLoggingRequest operation.
            <para>Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the
            logging status of a bucket, you must be the bucket owner.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketLoggingResponse">
            <summary>
            Returns information about the PutBucketLogging response metadata.
            The EnableBucketLogging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketNotificationRequest">
            <summary>
            Container for the parameters to the PutBucketNotification operation.
            <para>Enables notifications of specified events for a bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketNotificationResponse">
            <summary>
            Returns information about the PutBucketNotification response metadata.
            The PutBucketNotification operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketPolicyRequest">
            <summary>
            Container for the parameters to the PutBucketPolicy operation.
            <para>Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.ContentMD5">
            <summary>
            The base64 encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. 
            </summary>
            <remarks>
            This header can be used as a message integrity check to verify that the data is the same data that was originally sent. 
            Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. 
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.Policy">
            <summary>
            The bucket policy as a JSON document.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketPolicyResponse">
            <summary>
            Returns information about the PutBucketPolicy response metadata.
            The PutBucketPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequest">
            <summary>
            Container for the parameters to the PutBucket operation.
            <para>Creates a new bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.CannedACL">
            <summary>
            The canned ACL to apply to the bucket.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.UseClientRegion">
            <summary>
            If set to true the bucket will be created in the same region
            as the configuration of the AmazonS3 client.
            If PutBucketRequest.BucketRegion or PutBucketRequest.BucketRegionName are set they take precedence over
            this property.
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketName">
            <summary>
            The name of the bucket to be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketRegion">
            <summary>
            The region locality for the bucket.
            </summary>
            <remarks>
            When set, this will determine where your data will
            reside in S3. Refer <see cref="T:Amazon.S3.Model.S3Region"/>
            for a list of possible values.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketRegionName">
            <summary>
            The bucket region locality expressed using the name of the region.
            When set, this will determine where your data will reside in S3.
            Valid values: us-east-1, us-west-1, us-west-2, eu-west-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequestPaymentRequest">
            <summary>
            Container for the parameters to the PutBucketRequestPayment operation.
            <para>Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This
            configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the
            download.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequestPaymentRequest.BucketName">
            <summary>
            The name of the bucket to set payment config.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequestPaymentRequest.RequestPaymentConfiguration">
            <summary>
            Gets and sets request payment configuration
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequestPaymentResponse">
            <summary>
            Returns information about the PutBucketRequestPayment response metadata.
            The PutBucketRequestPayment operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketResponse">
            <summary>
            Returns information about the  PutBucket response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketTaggingRequest">
            <summary>
            Container for the parameters to the PutBucketTagging operation.
            <para>Sets the tags for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket to apply the tags to.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketTaggingRequest.TagSet">
            <summary>
            The collection of tags.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketTaggingResponse">
            <summary>
            Returns information about the PutBucketTagging response metadata.
            The PutBucketTagging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketVersioningRequest">
            <summary>
            Container for the parameters to the PutBucketVersioning operation.
            <para>Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutBucketVersioningRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.BucketName">
            <summary>
            The name of the bucket to be updated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.VersioningConfig">
            <summary>
            The versioning configuration to apply to the bucket.
            </summary>
            <remarks>
            Once Versioning has been "Enabled" on a bucket, it can be "Suspended" 
            but cannot be switched "Off". If EnableMfaDelete is set,
            the MfaCodes property needs to contain the Serial of and current Token
            displayed on the MFA device.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketVersioningResponse">
            <summary>
            Returns information about the PutBucketVersioning response metadata.
            The PutBucketVersioning operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketWebsiteRequest">
            <summary>
            Container for the parameters to the PutBucketWebsite operation.
            <para>Set the website configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket to apply the configuration to.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketWebsiteRequest.WebsiteConfiguration">
            <summary>
            The website configuration to apply. The configuration defines the index
            document suffix and custom error page.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketWebsiteResponse">
            <summary>
            Returns information about the PutBucketWebsite response metadata.
            The PutBucketWebsite operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutCORSConfigurationRequest">
            <summary>
            Container for the parameters to the PutCORSConfiguration operation.
            <para>Sets the cors configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutCORSConfigurationRequest.BucketName">
            <summary>
            The name of the bucket to have the CORS configuration applied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutCORSConfigurationRequest.Configuration">
            <summary>
            The CORS configuration to apply.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutCORSConfigurationResponse">
            <summary>
            Returns information about the PutCORSConfiguration response metadata.
            The PutCORSConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the PutLifecycleConfiguration operation.
            <para>Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutLifecycleConfigurationRequest.BucketName">
            <summary>
            The name of the bucket to have the lifecycle configuration applied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutLifecycleConfigurationRequest.Configuration">
            <summary>
            The lifecycle configuration to be applied.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutLifecycleConfigurationResponse">
            <summary>
            Returns information about the PutLifecycleConfiguration response metadata.
            The PutLifecycleConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutObjectRequest">
            <summary>
            Container for the parameters to the PutObject operation.
            <para>Adds an object to a bucket.</para>
            </summary>
            <summary>
            Container for the parameters to the PutObject operation.
            <para>Adds an object to a bucket.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutObjectRequest.IsSetMD5Digest">
            <summary>
            Checks if MD5Digest property is set.
            </summary>
            <returns>true if MD5Digest property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.CannedACL">
            <summary>
            A canned access control list (CACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.FilePath">
            <summary>
            <para>
            The full path and name to a file to be uploaded.
            If this is set the request will upload the specified file to S3. 
            </para>
            <para>
            For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ContentBody">
            <summary>
            Text content to be uploaded. Use this property if you want to upload plaintext to S3. 
            The content type will be set to 'text/plain'.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.AutoCloseStream">
            <summary>
            If this value is set to true then the stream used with this request will be closed when all the content 
            is read from the stream.  
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.AutoResetStreamPosition">
            <summary>
            If this value is set to true then the stream will be seeked back to the start before being read for upload.
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.BucketName">
            <summary>
            The name of the bucket to contain the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.StorageClass">
            <summary>
            The type of storage to use for the object. Defaults to 'STANDARD'.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.MD5Digest">
            <summary>
            An MD5 digest for the content.
            </summary>
            <remarks>
            <para>
            The base64 encoded 128-bit MD5 digest of the message
            (without the headers) according to RFC 1864. This header
            can be used as a message integrity check to verify that
            the data is the same data that was originally sent.
            </para>
            <para>
            If supplied, after the file has been uploaded to S3,
            S3 checks to ensure that the MD5 hash of the uploaded file
            matches the hash supplied.
            </para>
            <para>
            Although it is optional, we recommend using the
            Content-MD5 mechanism as an end-to-end integrity check.
            </para>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.PutObjectResponse">
            <summary>
            Returns information about the  PutObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.ETag">
            <summary>
            Entity tag for the uploaded object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RequestPaymentConfiguration">
            <summary>
            Request Payment Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RequestPaymentConfiguration.Payer">
            <summary>
            Specifies who pays for the download and request fees.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ResponseHeaderOverrides">
            <summary>
            Container for values of the response headers that will be set on a response from a GetObject request. 
            These values override any headers that were set when the object was uploaded to S3.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
            </summary>
            <remarks>
            The content type for the content being uploaded. This property defaults to "binary/octet-stream".
            For more information, refer to: <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17"/>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentLanguage">
            <summary>
            ContentLanguage header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.Expires">
            <summary>
            Expiry header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.CacheControl">
            <summary>
            CacheControl header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentDisposition">
            <summary>
            The ContentDisposition header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentEncoding">
            <summary>
            The ContentEncoding header value.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RestoreObjectRequest">
            <summary>
            Container for the parameters to the RestoreObject operation.
            <para>Restores an archived copy of an object back into Amazon S3</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RestoreObjectRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RestoreObjectRequest.Days">
            <summary>
            Lifetime of the active copy in days
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RestoreObjectResponse">
            <summary>
            Returns information about the RestoreObject response metadata.
            The RestoreObject operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRule">
            <summary>Routing Rule
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRule.Condition">
            <summary>
            A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the
            /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might
            process the error.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRule.Redirect">
            <summary>
            Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an
            error, you can can specify a different error code to return.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRuleCondition">
            <summary>
            <para>A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages
            in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you
            might process the error.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleCondition.HttpErrorCodeReturnedEquals">
            <summary>
            The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect
            is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then
            both must be true for the redirect to be applied.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleCondition.KeyPrefixEquals">
            <summary>
            The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be
            ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the
            docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both
            conditions are specified, both must be true for the redirect to be applied.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRuleRedirect">
            <summary>
            <para>Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event
            of an error, you can can specify a different error code to return.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.HostName">
            <summary>
            Name of the host where requests will be redirected.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.HttpRedirectCode">
            <summary>
            The HTTP redirect code to use on the response. Not required if one of the siblings is present.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.Protocol">
            <summary>
            Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.ReplaceKeyPrefixWith">
            <summary>
            The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the
            docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to
            /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.ReplaceKeyWith">
            <summary>
            The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is
            present. Can be present only if ReplaceKeyPrefixWith is not provided.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3AccessControlList">
            <summary>
            Represents an access control list (ACL) for S3. An AccessControlList is represented by an Owner,
            and a List of Grants, where each Grant is a Grantee and a Permission.
            </summary>
            <remarks>
            <para>
            Each bucket and object in Amazon S3 has an ACL that defines its access control policy.
            When a request is made, Amazon S3 authenticates the request using its standard
            authentication procedure and then checks the ACL to verify the sender was granted access
            to the bucket or object. If the sender is approved, the request proceeds.
            Otherwise, Amazon S3 returns an error.
            </para>
            <para>
            An ACL is a list of grants. A grant consists of one grantee and one permission.
            ACLs only grant permissions; they do not deny them.
            </para>
            <para>
            For convenience, some commonly used Access Control Lists are defined in
            S3CannedACL.
            </para>
            <para>
            Note: BucketName and object ACLs are completely independent; an object does not inherit the ACL
            from its bucket. For example, if you create a bucket and grant write access to another user,
            you will not be able to access the user's objects unless the user explicitly grants access.
            This also applies if you grant anonymous write access to a bucket. Only the user "anonymous"
            will be able to access objects the user created unless permission is explicitly granted to
            the bucket owner.
            </para>
            <para>
            Important: We highly recommend that you do not grant the anonymous group write access to your
            buckets as you will have no control over the objects others can store and their associated charges.
            For more information, see Grantees and Permissions</para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.AddGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Creates a S3Grant and adds it to the list of grants.
            </summary>
            <param name="grantee">The grantee for the grant.</param>
            <param name="permission">The permission for the grantee.</param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.RemoveGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Removes a specific permission for the given grantee.
            </summary>
            <param name="grantee">The grantee</param>
            <param name="permission">The permission for the grantee to remove</param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.RemoveGrant(Amazon.S3.Model.S3Grantee)">
            <summary>
            Removes all permissions for the given grantee.
            </summary>
            <param name="grantee"></param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.IsSetOwner">
            <summary>
            Checks if Owner property is set.
            </summary>
            <returns>true if Owner property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.IsSetGrants">
            <summary>
            Checks if Grants property is set.
            </summary>
            <returns>true if Grants property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.S3AccessControlList.Owner">
            <summary>
            The owner of the bucket or object.
            </summary>
            <remarks>
            <para>
            Every bucket and object in Amazon S3 has an owner, the user that
            created the bucket or object. The owner of a bucket or object cannot
            be changed. However, if the object is overwritten by another user
            (deleted and rewritten), the new object will have a new owner.
            </para>
            <para>
            Note: Even the owner is subject to the ACL. For example, if an owner
            does not have Permission.READ access to an object, the owner cannot read
            that object. However, the owner of an object always has write access to the
            access control policy (Permission.WriteAcp) and can change the ACL to
            read the object.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.S3AccessControlList.Grants">
            <summary>
            A collection of grants.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Bucket">
            <summary>Bucket
            Represents an S3 bucket, contains the name of the S3 bucket and the date that the bucket was created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Bucket.CreationDate">
            <summary>
            Date the bucket was created.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Bucket.BucketName">
            <summary>
            The name of the bucket.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3BucketLoggingConfig">
            <summary>Logging Enabled
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.AddGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Creates a S3Grant and adds it to the list of grants.
            </summary>
            <param name="grantee">The grantee for the grant.</param>
            <param name="permission">The permission for the grantee.</param>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.RemoveGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Removes a specific permission for the given grantee.
            </summary>
            <param name="grantee">The grantee</param>
            <param name="permission">The permission for the grantee to remove</param>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.RemoveGrant(Amazon.S3.Model.S3Grantee)">
            <summary>
            Removes all permissions for the given grantee.
            </summary>
            <param name="grantee"></param>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.TargetBucketName">
            <summary>
            Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own,
            including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In
            this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.Grants">
            <summary>
            A collection of grants.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.TargetPrefix">
            <summary>
            This element lets you specify a prefix for the keys that the log files will be stored under.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3BucketVersioningConfig">
            <summary>
            An S3 bucket versioning configuration.
            </summary>
            <remarks>
            Contains the bucket's versioning status (Off, Enabled, Suspended) and whether an MFADelete 
            has been enabled for the bucket.
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketVersioningConfig.IsSetStatus">
            <summary>
            Checks if Status property is set
            </summary>
            <returns>true if Status property is set</returns>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketVersioningConfig.IsSetEnableMfaDelete">
            <summary>
            Checks if EnableMfaDelete property is set.
            </summary>
            <returns>true if Status property is set</returns>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketVersioningConfig.Status">
            <summary>
            Versioning status for the bucket.
            Accepted values: Off, Enabled, Suspended.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketVersioningConfig.EnableMfaDelete">
            <summary>
            Specifies whether MFA Delete is enabled on this S3 Bucket.
            </summary>
            <remarks>
            If this property is set, please ensure that the 
            PutBucketVersioningRequest's MfaCodes property is set with 
            the Serial of and Token on the MFA device.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.S3Grant">
            <summary>Grant
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grant.Grantee">
            <summary>
            The grantee details.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grant.Permission">
            <summary>
            Specifies the permission given to the grantee.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Grantee">
            <summary>Grantee
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.Type">
            <summary>
            Type of grantee
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.DisplayName">
            <summary>
            Screen name of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.EmailAddress">
            <summary>
            Email address of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.CanonicalUser">
            <summary>
            The canonical user ID of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.URI">
            <summary>
            URI of the grantee group.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Object">
            <summary>
            Represents an S3 Object. Contains all attributes that an S3 Object has.
            For more information about S3 Objects refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/UsingObjects.html"/>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.ETag">
            <summary>
            Any ETag set on the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.LastModified">
            <summary>
            The date and time the object was last modified.
            <remarks>
            The date retrieved from S3 is in ISO8601 format. A GMT formatted date is passed back to the user.
            </remarks>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Owner">
            <summary>
            The owner of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Size">
            <summary>
            The size of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3ObjectVersion">
            <summary>
            Represents a version of an object in an S3 Bucket. An S3 object version is an S3 object
            that also has a version identifier, an indication of whether this is the latest version of the object 
            and whether it's a DeleteMarker or not.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.IsLatest">
            <summary>
            Specifies whether the object is (true) or is not (false) the latest version of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.VersionId">
            <summary>
            Version ID of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.IsDeleteMarker">
            <summary>
            If true, the object is a delete marker for a deleted object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Tag">
            <summary>Tag
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Tag.Key">
            <summary>
            Name of the tag.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Tag.Value">
            <summary>
            Value of the tag.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.TopicConfiguration">
            <summary>Topic Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TopicConfiguration.Event">
            <summary>
            Bucket event for which to send notifications.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TopicConfiguration.Topic">
            <summary>
            Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.UploadPartRequest">
            <summary>
            The parameters to request upload of a part in a multipart upload operation.
            </summary>
            <remarks>
            <para>
            If PartSize is not specified then the rest of the content from the file
            or stream will be sent to Amazon S3.
            </para>
            <para>
            You must set either the FilePath or InputStream.  If FilePath is set then the FilePosition
            property must be set.
            </para>
            </remarks>
            <summary>
            The parameters to request upload of a part in a multipart upload operation.
            </summary>
            <remarks>
            <para>
            If PartSize is not specified then the rest of the content from the file
            or stream will be sent to Amazon S3.
            </para>
            <para>
            You must set either the FilePath or InputStream.  If FilePath is set then the FilePosition
            property must be set.
            </para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetPartSize">
            <summary>
            Checks if PartSize property is set.
            </summary>
            <returns>true if PartSize property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetFilePath">
            <summary>
            Checks if the FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetFilePosition">
            <summary>
            Checks if the FilePosition property is set.
            </summary>
            <returns>true if FilePosition property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetMD5Digest">
            <summary>
            Checks if the MD5Digest property is set.
            </summary>
            <returns>true if Md5Digest property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.IsLastPart">
            <summary>
            Caller needs to set this to true when uploading the last part. This property only needs to be set
            when using the AmazonS3EncryptionClient.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.BucketName">
            <summary>
            The name of the bucket containing the object to receive the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.PartNumber">
            <summary>
            Part number of part being uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.PartSize">
            <summary>
            The size of the part to be uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose part is being uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.MD5Digest">
            <summary>
            An MD5 digest for the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.FilePath">
            <summary>
            <para>
            Full path and name of a file from which the content for the part is retrieved.
            </para>
            <para>
            For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.FilePosition">
            <summary>
            Position in the file specified by FilePath from which to retrieve the content of the part. 
            This field is required when a file path is specified. It is ignored when using the InputStream property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.UploadPartResponse">
            <summary>
            Returns information about the  UploadPart response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.ETag">
            <summary>
            Entity tag for the uploaded object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.PartNumber">
            <summary>
            Gets and sets the part number specified for the part upload.  This is needed when
            completing the multipart upload.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.WebsiteConfiguration">
            <summary>Website Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.ErrorDocument">
            <summary>
            The ErrorDocument value, an object key name to use when a 4XX class error occurs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.IndexDocumentSuffix">
            <summary>
            <para>
            This value is a suffix that is appended to a request that is for a "directory" 
            on the website endpoint (e.g. if the suffix is index.html and
            you make a request to samplebucket/images/ the data that
            is returned will be for the object with the key name
            images/index.html)
            </para>
            <para>
            The suffix must not be empty and must not include a slash
            character.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.RedirectAllRequestsTo">
            <summary>
            Container for redirect information where all requests will be redirect
            to. You can redirect requests to another host, to another page, or with
            another protocol. In the event of an error, you can can specify a
            different error code to return. .
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.RoutingRules">
            <summary>
            The list of routing rules that can be used for configuring redirects if certain conditions are meet.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller">
            <summary>
            Abort Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AbortMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.BucketUnmarshaller">
            <summary>
              Bucket Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CommonPrefixesItemUnmarshaller">
            <summary>
              CommonPrefixesItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller">
            <summary>
            Complete Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CompleteMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ContentsItemUnmarshaller">
            <summary>
              ContentsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectRequestMarshaller">
            <summary>
            Copy Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CopyObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyPartRequestMarshaller">
            <summary>
            Upload Part Copy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyPartResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CopyPart operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CORSRuleUnmarshaller">
            <summary>
              CORSRule Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyRequestMarshaller">
            <summary>
            Delete Bucket Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketRequestMarshaller">
            <summary>
            Delete Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingRequestMarshaller">
            <summary>
            Delete Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteRequestMarshaller">
            <summary>
            Delete Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationRequestMarshaller">
            <summary>
            Delete Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeletedObjectUnmarshaller">
            <summary>
              DeletedObject Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationRequestMarshaller">
            <summary>
            Delete Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketLifecycle operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectRequestMarshaller">
            <summary>
            Delete Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsRequestMarshaller">
            <summary>
            Delete Objects Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteObjects operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ErrorsItemUnmarshaller">
            <summary>
              ErrorsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ExpirationUnmarshaller">
            <summary>
              Expiration Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetACLRequestMarshaller">
            <summary>
            Get Object Acl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetACLResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetACL operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationRequestMarshaller">
            <summary>
            Get Bucket Location Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketLocation operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingRequestMarshaller">
            <summary>
            Get Bucket Logging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketLogging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationRequestMarshaller">
            <summary>
            Get Bucket Notification Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketNotification operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyRequestMarshaller">
            <summary>
            Get BucketName Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentRequestMarshaller">
            <summary>
            Get Bucket Request Payment Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketRequestPayment operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingRequestMarshaller">
            <summary>
            Get Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningRequestMarshaller">
            <summary>
            Get Bucket Versioning Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketVersioning operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteRequestMarshaller">
            <summary>
            Get Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationRequestMarshaller">
            <summary>
            Get Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationRequestMarshaller">
            <summary>
            Get Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetLifecycleConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataRequestMarshaller">
            <summary>
            GetObjectMetadata Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObjectMetadata operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectRequestMarshaller">
            <summary>
            Get Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentRequestMarshaller">
            <summary>
            Get Object Torrent Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObjectTorrent operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GranteeUnmarshaller">
            <summary>
              Grantee Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GrantUnmarshaller">
            <summary>
              Grant Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketRequestMarshaller">
            <summary>
            Head Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for HeadBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller">
            <summary>
            Create Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for InitiateMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiatorUnmarshaller">
            <summary>
              Initiator Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsRequestMarshaller">
            <summary>
            List Buckets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListBuckets operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller">
            <summary>
            List Multipart Uploads Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListMultipartUploads operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsRequestMarshaller">
            <summary>
            List Objects Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListObjects operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller">
            <summary>
            List Parts Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListParts operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsRequestMarshaller">
            <summary>
            List Object Versions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListVersions operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.LoggingEnabledUnmarshaller">
            <summary>
              LoggingEnabled Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.MultipartUploadUnmarshaller">
            <summary>
              UploadsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.OwnerUnmarshaller">
            <summary>
              Owner Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PartDetailUnmarshaller">
            <summary>
              PartsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutACLRequestMarshaller">
            <summary>
            Put Object Acl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutACLResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutObjectAcl operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingRequestMarshaller">
            <summary>
            Enable Bucket Logging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketLogging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationRequestMarshaller">
            <summary>
            Put Bucket Notification Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketNotification operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyRequestMarshaller">
            <summary>
            Put Bucket Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestMarshaller">
            <summary>
            Put Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentRequestMarshaller">
            <summary>
            Put Bucket Request Payment Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketRequestPayment operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingRequestMarshaller">
            <summary>
            Put Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningRequestMarshaller">
            <summary>
            Put Bucket Versioning Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketVersioning operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteRequestMarshaller">
            <summary>
            Put Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationRequestMarshaller">
            <summary>
            Put Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller">
            <summary>
            Put Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutLifecycleConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutObjectRequestMarshaller">
            <summary>
            Put Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectRequestMarshaller">
            <summary>
            Restore Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for RestoreObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleConditionUnmarshaller">
            <summary>
              Condition Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleRedirectUnmarshaller">
            <summary>
              Redirect Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleUnmarshaller">
            <summary>
              RoutingRule Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RulesItemUnmarshaller">
            <summary>
              RulesItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Build an S3ErrorResponse from XML 
            </summary>
            <param name="context">The XML parsing context. 
            Usually an <c>Amazon.Runtime.Internal.UnmarshallerContext</c>.</param>
            <returns>An <c>S3ErrorResponse</c> object.</returns>
        </member>
        <member name="M:Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller.GetInstance">
            <summary>
            Return an instance of and ErrorResponseUnmarshaller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
              Tag Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TopicConfigurationUnmarshaller">
            <summary>
              TopicConfiguration Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TransitionUnmarshaller">
            <summary>
              Transition Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.UploadPartRequestMarshaller">
            <summary>
            Upload Part Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.UploadPartResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UploadPart operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.VersionsItemUnmarshaller">
            <summary>
              VersionsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.BaseDownloadRequest">
            <summary>
            The base class for requests that return Amazon S3 objects.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetBucketName">
            <summary>
            Gets whether or not the bucket name is set.
            </summary>
            <returns>
            	A value of <c>true</c> if the bucket name is set.
               Returns <c>false</c> if otherwise.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetKey">
            <summary>
            	Gets whether or not the key property is set.
            </summary>
            <returns>
            	A value of <c>true</c> if key property is set.
            	Returns <c>false</c> if otherwise.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.Key">
            <summary>
            	Gets or sets the key under which the Amazon S3 object is stored.
            </summary>
            <value>
            	The key under which the Amazon S3 object is stored. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.VersionId">
            <summary>
            	Gets or sets the version ID of the Amazon S3 object.
            </summary>
            <value>
            	The version ID of the Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.ModifiedSinceDate">
            <summary>
            	Gets or sets the <c>ModifiedSinceDate</c> property.
            </summary>
            <value>
            	The <c>ModifiedSinceDate</c> property. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.UnmodifiedSinceDate">
            <summary>
            	Gets or sets the <c>UnmodifiedSinceDate</c> property.
            </summary>
            <value>
            	The <c>UnmodifiedSinceDate</c> property.
            </value>
        </member>
        <member name="T:Amazon.S3.Transfer.BaseUploadRequest">
            <summary>
            The base class TransferUtility request classes.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtility">
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible. In this situation, if necessary, 
            	you should clean up any multipart uploads that are incomplete.
            	</para>
            </remarks>
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible. In this situation, if necessary, 
            	you should clean up any multipart uploads that are incomplete.
            	</para>
            </remarks>
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible.  In this situation, if necessary, 
            	you should clean up any multipart uploads that are incomplete.
            	</para>
            </remarks>
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible.  In this situation, if necessary, 
            	you should clean up any multipart uploads	that are incomplete.
            	</para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(Amazon.RegionEndpoint)">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="region">
                The region to configure the transfer utility for.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String)">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="region">
                The region to configure the transfer utility for.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="config">
            	Specifies advanced settings.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.RegionEndpoint,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="region">
                The region to configure the transfer utility for.
            </param>
            <param name="config">
            	Specifies advanced settings.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(Amazon.S3.IAmazonS3)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="s3Client">
            	The Amazon S3 client.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(Amazon.S3.IAmazonS3,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Initializes a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="s3Client">
            	The Amazon S3 client.
            </param>
            <param name="config">
            	Specifies advanced configuration settings for <see cref="T:Amazon.S3.Transfer.TransferUtility"/>.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectoryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="directory">
            	The source directory, that is, the directory containing the files to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the files to.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectoryAsync(System.String,System.String,System.String,System.IO.SearchOption,System.Threading.CancellationToken)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="directory">
            	The source directory, that is, the directory containing the files to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the files to.
            </param>
            <param name="searchPattern">
            	A pattern used to identify the files from the source directory to upload.
            </param>                                                                 
            <param name="searchOption">
            	A search option that specifies whether to recursively search for files to upload
            	in subdirectories.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectoryAsync(Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="request">
            	The request that contains all the parameters required to upload a directory.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadDirectoryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Downloads the objects in Amazon S3 that have a key that starts with the value 
            	specified by <c>s3Directory</c>.
            </summary>
            <param name="bucketName">
            	The name of the bucket containing the Amazon S3 objects to download.
            </param>
            <param name="s3Directory">
            	The directory in Amazon S3 to download.
            </param>
            <param name="localDirectory">
            	The local directory to download the objects to.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadDirectoryAsync(Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            	Downloads the objects in Amazon S3 that have a key that starts with the value 
            	specified by the <c>S3Directory</c>
            	property of the passed in <c>TransferUtilityDownloadDirectoryRequest</c> object.
            </summary>
            <param name="request">
            	Contains all the parameters required to download objects from Amazon S3 
            	into a local directory.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Downloads the content from Amazon S3 and writes it to the specified file.    
            </summary>
            <param name="filePath">
            	The file path where the content from Amazon S3 will be written to.
            </param>
            <param name="bucketName">
            	The name of the bucket containing the Amazon S3 object to download.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the specified file.  
            	The object key is derived from the file's name.
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the specified file.  
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.IO.Stream,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the contents of the specified stream.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="stream">
            	The stream to read to obtain the content to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the stream to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(Amazon.S3.Transfer.TransferUtilityUploadRequest,System.Threading.CancellationToken)">
            <summary>
            	Uploads the file or stream specified by the request.  
            	To track the progress of the upload,
            	add an event listener to the request's <c>UploadProgressEvent</c>.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="request">
            	Contains all the parameters required to upload to Amazon S3.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.AbortMultipartUploadsAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            	Aborts the multipart uploads that were initiated before the specified date.
            </summary>
            <param name="bucketName">
            	The name of the bucket containing multipart uploads.
            </param>
            <param name="initiatedDate">
            	The date before which the multipart uploads were initiated.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadAsync(Amazon.S3.Transfer.TransferUtilityDownloadRequest,System.Threading.CancellationToken)">
            <summary>
            	Downloads the content from Amazon S3 and writes it to the specified file.    
            	If the key is not specified in the request parameter,
            	the file name will used as the key name.
            </summary>
            <param name="request">
            	Contains all the parameters required to download an Amazon S3 object.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Returns a stream from which the caller can read the content from the specified
            	Amazon S3  bucket and key.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="bucketName">
            	The name of the bucket.
            </param>
            <param name="key">
            	The object key.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStreamAsync(Amazon.S3.Transfer.TransferUtilityOpenStreamRequest,System.Threading.CancellationToken)">
            <summary>
            	Returns a stream to read the contents from Amazon S3 as 
            	specified by the <c>TransferUtilityOpenStreamRequest</c>.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="request">
            	Contains all the parameters required for the OpenStream operation.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectory(System.String,System.String)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="directory">
            	The source directory, that is, the directory containing the files to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the files to.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectory(System.String,System.String,System.String,System.IO.SearchOption)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="directory">
            	The source directory, that is, the directory containing the files to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the files to.
            </param>
            <param name="searchPattern">
            	A pattern used to identify the files from the source directory to upload.
            </param>                                                                 
            <param name="searchOption">
            	A search option that specifies whether to recursively search for files to upload
            	in subdirectories.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadDirectory(Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest)">
            <summary>
            	Uploads files from a specified directory.  
            	The object key is derived from the file names
            	inside the directory.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="request">
            	The request that contains all the parameters required to upload a directory.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Upload(System.String,System.String)">
            <summary>
            	Uploads the specified file.  
            	The object key is derived from the file's name.
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Upload(System.String,System.String,System.String)">
            <summary>
            	Uploads the specified file.  
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Upload(System.IO.Stream,System.String,System.String)">
            <summary>
            	Uploads the contents of the specified stream.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="stream">
            	The stream to read to obtain the content to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the stream to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Upload(Amazon.S3.Transfer.TransferUtilityUploadRequest)">
            <summary>
            	Uploads the file or stream specified by the request.  
            	To track the progress of the upload,
            	add an event listener to the request's <c>UploadProgressEvent</c>.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploads() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="request">
            	Contains all the parameters required to upload to Amazon S3.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStream(System.String,System.String)">
            <summary>
            	Returns a stream from which the caller can read the content from the specified
            	Amazon S3  bucket and key.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="bucketName">
            	The name of the bucket.
            </param>
            <param name="key">
            	The object key.
            </param>
            <returns>
            	A stream of the contents from the specified Amazon S3 and key.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStream(Amazon.S3.Transfer.TransferUtilityOpenStreamRequest)">
            <summary>
            	Returns a stream to read the contents from Amazon S3 as 
            	specified by the <c>TransferUtilityOpenStreamRequest</c>.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="request">
            	Contains all the parameters required to open a stream to an S3 object.
            </param>
            <returns>
            	A stream of the contents from Amazon S3.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Download(System.String,System.String,System.String)">
            <summary>
            	Downloads the content from Amazon S3 and writes it to the specified file.  
            </summary>
            <param name="filePath">
            	The file path where the content from Amazon S3 will be written to.
            </param>
            <param name="bucketName">
            	The name of the bucket containing the Amazon S3 object to download.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Download(Amazon.S3.Transfer.TransferUtilityDownloadRequest)">
            <summary>
            	Downloads the content from Amazon S3 and writes it to the specified file.    
            	If the key is not specified in the request parameter,
            	the file name will used as the key name.
            </summary>
            <param name="request">
            	Contains all the parameters required to download an Amazon S3 object.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadDirectory(System.String,System.String,System.String)">
            <summary>
            	Downloads the objects in Amazon S3 that have a key that starts with the value 
            	specified by <c>s3Directory</c>.
            </summary>
            <param name="bucketName">
            	The name of the bucket containing the Amazon S3 objects to download.
            </param>
            <param name="s3Directory">
            	The directory in Amazon S3 to download.
            </param>
            <param name="localDirectory">
            	The local directory to download the objects to.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadDirectory(Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest)">
            <summary>
            	Downloads the objects in Amazon S3 that have a key that starts with the value 
            	specified by the <c>S3Directory</c>
            	property of the passed in <c>TransferUtilityDownloadDirectoryRequest</c> object.
            </summary>
            <param name="request">
            	Contains all the parameters required to download objects from Amazon S3 
            	into a local directory.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.AbortMultipartUploads(System.String,System.DateTime)">
            <summary>
            	Aborts the multipart uploads that were initiated before the specified date.
            </summary>
            <param name="bucketName">
            	The name of the bucket containing multipart uploads.
            </param>
            <param name="initiatedDate">
            	The date before which the multipart uploads were initiated.
            </param>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtility.S3Client">
            <summary>
            	Gets the Amazon S3 client used for making calls into Amazon S3.
            </summary>
            <value>
            	The Amazon S3 client used for making calls into Amazon S3.
            </value>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityConfig">
            <summary>
            	<para>
            	Provides configuration options for how <see cref="T:Amazon.S3.Transfer.TransferUtility"/> processes requests.
            	</para>
            	<para>
            	The best configuration settings depend on network
            	configuration, latency and bandwidth. 
            	The default configuration settings are suitable
            	for most applications, but this class enables developers to experiment with
            	different configurations and tune transfer manager performance.
            	</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityConfig.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.MinSizeBeforePartUpload">
            <summary>
            Gets or sets the minimum part size for upload parts in bytes. The default is 16 MB.
            Decreasing the minimum part size causes 
            multipart uploads to be split into a larger number
            of smaller parts. Setting this value too low has a negative effect
            on transfer speeds, causing extra latency and network
            communication for each part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.ConcurrentServiceRequests">
            <summary>
            This property determines how many active threads
            or the number of concurrent asynchronous web requests 
            will be used to upload/download the file .
            The default value is 10.
            </summary>
            <remarks>
            	A value less than or equal to 0 will be silently ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.NumberOfUploadThreads">
            <summary>
            	Gets or sets the number of executing threads.
            	This property determines how many active threads will be used to upload 
            	the file. The default value is 10 threads.
            </summary>
            <remarks>
            	A value less than or equal to 0 will be silently ignored.
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.IsSetBucketName">
            <summary>
            Gets whether or not the bucket name is set.
            </summary>
            <returns>
            	A value of <c>true</c> if the bucket name is set.
               Otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.IsSetLocalDirectory">
            <summary>
            	Gets whether or not the LocalDirectory property is set.
            </summary>
            <returns>
            	A value of <c>true</c> if LocalDirectory property is set.
            	Otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.IsSetS3Directory">
            <summary>
            	Gets whether or not the S3Directory property is set.
            </summary>
            <returns>
            	A value of <c>true</c> if S3Directory property is set.
            	Otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>A value of <c>true</c> if ModifiedSinceDate property is set.
            	Otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.LocalDirectory">
            <summary>
            	Gets or sets the local directory where objects from Amazon S3 will be downloaded.  
            	If the directory doesn't exist, it will be created.
            </summary>
            <value>
            	The local directory where objects from Amazon S3 will be downloaded.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.S3Directory">
            <summary>
            Gets or sets the Amazon S3 directory to download from.  
            This is translated to a key prefix; keys that have this prefix will be
            downloaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.ModifiedSinceDate">
            <summary>
            	Gets or sets the <c>ModifiedSinceDate</c> property.  
            	Only objects that have been modified since this date will be
            	downloaded.
            </summary>
            <value>
            	The <c>ModifiedSinceDate</c> property. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.UnmodifiedSinceDate">
            <summary>
            	Gets or sets the <c>UnmodifiedSinceDate</c> property.  
            	Only objects that have not been modified since this date will be downloaded.
            </summary>
            <value>
            	The <c>UnmodifiedSinceDate</c> property.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.DownloadFilesConcurrently">
            <summary>
            Gets or sets the DownloadFilesConcurrently property.
            Specifies if multiple files will be downloaded concurrently.
            The number of concurrent web requests used is controlled 
            by the TransferUtilityConfig.ConcurrencyLevel property.
            </summary>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityDownloadDirectoryRequest.DownloadedDirectoryProgressEvent">
            <summary>
            The event for DownloadedDirectoryProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The DownloadedDirectoryProgressEvent is fired as data
            is downloaded from Amazon S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been downloaded as well as how much will be downloaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            DownloadedDirectoryProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, DownloadDirectoryProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the DownloadedDirectoryProgressEvent delegate's invocation list
            <code>
            TransferUtilityDownloadDirectoryRequest request = new TransferUtilityDownloadDirectoryRequest();
            request.DownloadedDirectoryProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Transfer.DownloadDirectoryProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the <c>DownloadDirectory</c>
            event.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.#ctor(System.Int32,System.Int32,System.String,System.Int64,System.Int64)">
            <summary>
            Constructs a new instance of <c>DownloadDirectoryProgressArgs</c>.
            </summary>
            <param name="numberOfFilesDownloaded">
            The number of files downloaded.
            </param>
            <param name="totalNumberOfFiles">
            The total number of files to download.
            </param>
            <param name="currentFile">
            The current file being downloaded
            </param>
            <param name="transferredBytesForCurrentFile">
            The number of transferred bytes for the current file.
            </param>
            <param name="totalNumberOfBytesForCurrentFile">
            The size of the current file in bytes.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.#ctor(System.Int32,System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.Int64)">
            <summary>
            Constructs a new instance of <c>DownloadDirectoryProgressArgs</c>.
            </summary>
            <param name="numberOfFilesDownloaded">
            The number of files downloaded.
            </param>
            <param name="totalNumberOfFiles">
            The total number of files to download.
            </param>
            <param name="transferredBytes">
            The bytes transferred across all files being downloaded.
            </param>
            <param name="totalBytes">
            The total number of bytes across all files being downloaded.
            </param>
            <param name="currentFile">
            The current file being downloaded.
            </param>
            <param name="transferredBytesForCurrentFile">
            The number of transferred bytes for the current file.
            </param>
            <param name="totalNumberOfBytesForCurrentFile">
            The size of the current file in bytes.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.ToString">
            <summary>
            The string representation of this instance of DownloadDirectoryProgressArgs.
            </summary>
            <returns>The string representation of this instance of DownloadDirectoryProgressArgs.</returns>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.TotalNumberOfFiles">
            <summary>
            Gets or sets the total number of files.
            </summary>
            <value>The total number of files.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.NumberOfFilesDownloaded">
            <summary>
            Gets or sets the number of files downloaded so far.
            </summary>
            <value>The number of files downloaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.TotalBytes">
            <summary>
            Gets or sets the total number of bytes across all files being downloaded.
            </summary>
            <value>The total number of bytes across all files being downloaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.TransferredBytes">
            <summary>
            Gets or sets the bytes transferred across all files being downloaded.
            </summary>
            <value>The bytes transferred across all files being downloaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.CurrentFile">
            <summary>
            Gets or sets the current file being downloaded.
            </summary>
            <remarks>
            This property is only valid if DownloadDirectory is used without enabling concurrent file downloads (by default concurrent download is disabled).
            If concurrent file downloads are enabled by setting TransferUtilityDownloadDirectoryRequest.DownloadFilesConcurrently to true, this property
            will return null.
            </remarks>
            <value>The current file being downloaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.TransferredBytesForCurrentFile">
            <summary>
            Gets or sets the transferred bytes for the current file.
            </summary>
            <remarks>
            This property is only valid if DownloadDirectory is used without enabling concurrent file downloads (by default concurrent download is disabled).
            If concurrent file downloads are enabled by setting TransferUtilityDownloadDirectoryRequest.DownloadFilesConcurrently to true, this property
            will return 0.
            </remarks>
            <value>The transferred bytes for the current file.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.DownloadDirectoryProgressArgs.TotalNumberOfBytesForCurrentFile">
            <summary>
            Gets or sets the total number of bytes for the current file.
            </summary>
            <remarks>
            This property is only valid if DownloadDirectory is used without enabling concurrent file downloads (by default concurrent download is disabled).
            If concurrent file downloads are enabled by setting TransferUtilityDownloadDirectoryRequest.DownloadFilesConcurrently to true, this property
            will return 0.
            </remarks>
            <value>The total number of bytes for the current file.</value>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityDownloadRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadRequest.IsSetFilePath">
            <summary>
            Checks if FilePath property is set.
            </summary>
            <returns>True if FilePath property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadRequest.OnRaiseProgressEvent(Amazon.S3.Model.WriteObjectProgressArgs)">
            <summary>
            Causes the WriteObjectProgressEvent event to be fired.
            </summary>
            <param name="progressArgs">Progress data for the stream being written to file.</param>        
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadRequest.FilePath">
            <summary>
            	Get or sets the file path location of where the
            	downloaded Amazon S3 object will be written to.
            </summary>
            <value>
            	The file path location of where the downloaded Amazon S3 object will be written to.
            </value>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityDownloadRequest.WriteObjectProgressEvent">
            <summary>
            The event for WriteObjectProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The WriteObjectProgressEvent is fired as data
            is downloaded from S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been downloaded as well as how much will be downloaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            WriteObjectProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, WriteObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the WriteObjectProgressEvent delegate's invocation list
            <code>
            TransferUtilityDownloadRequest request = new TransferUtilityDownloadRequest();
            request.WriteObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityOpenStreamRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.IsSetDirectory">
            <summary>
            Checks if Directory property is set.
            </summary>
            <returns>true if Directory property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.IsSetKeyPrefix">
            <summary>
            Checks if KeyPrefix property is set.
            </summary>
            <returns>true if KeyPrefix property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.IsSetSearchPattern">
            <summary>
            Checks if SearchPattern property is set.
            </summary>
            <returns>true if SearchPattern property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.IsSetCannedACL">
            <summary>
            Checks if the CannedACL property is set.
            </summary>
            <returns>true if there is the CannedACL property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.OnRaiseProgressEvent(Amazon.S3.Transfer.UploadDirectoryProgressArgs)">
            <summary>
            Causes the UploadDirectoryProgressEvent event to be fired.
            </summary>
            <param name="uploadDirectoryProgress">Progress data for files currently being uploaded.</param>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.Directory">
            <summary>
            	Gets or sets the directory where files are uploaded from.
            </summary>
            <value>
            	The directory where files are uploaded from.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.KeyPrefix">
            <summary>
            	Gets or sets the KeyPrefix property.  As object keys are generated for the
            	files being uploaded this value will prefix the key.  This is useful when a directory
            	needs to be uploaded into sub directory in the S3 Bucket.
            </summary>
            <value>
            	The directory where files are uploaded from.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.SearchPattern">
            <summary>
            	Gets and sets the search pattern used to determine which
            	files in the directory are uploaded.    
            </summary>
            <value>
            	The search pattern used to deterimine which
            	files in the directory are uploaded.
            	The default value is "*", specifying that all files
            	in the directory will be uploaded.  
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.SearchOption">
            <summary>
            	Gets or sets the recursive options for the directory upload.
            </summary>
            <value>
            	The recursive options for the directory upload.
            	Set by default to <c>TopDirectoryOnly</c>,
            	specifying that files will be uploaded from the root directory only.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.CannedACL">
            <summary>
            	Gets or sets the canned access control list (ACL)
            	for the uploaded objects.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            	information on Amazon S3 canned ACLs.
            </summary>
            <value>
            	The canned access control list (ACL)
            	for the uploaded objects.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.StorageClass">
            <summary>
            	Gets or sets the storage class for the uploaded Amazon S3 objects.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3StorageClass"/> for
            	information on S3 Storage Classes.
            </summary>
            <value>
            	The storage class for the uploaded Amazon S3 objects.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.ServerSideEncryptionMethod">
            <summary>
            Gets or sets the ServerSideEncryptionMethod property.
            Specifies the encryption used on the server to
            store the content.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.UploadFilesConcurrently">
            <summary>
            Gets or sets the UploadFilesConcurrently property.
            Specifies if multiple files will be uploaded concurrently.
            The number of concurrent web requests used is controlled 
            by the TransferUtilityConfig.ConcurrencyLevel property.
            </summary>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest.UploadDirectoryProgressEvent">
            <summary>
            The event for UploadDirectoryProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The UploadDirectoryProgressEvent is fired as data
            is uploaded to S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been uploaded as well as how much will be uploaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            UploadDirectoryProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, UploadDirectoryProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the UploadDirectoryProgressEvent delegate's invocation list
            <code>
            TransferUtilityUploadDirectoryRequest request = new TransferUtilityUploadDirectoryRequest();
            request.UploadDirectoryProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Transfer.UploadDirectoryProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the <c>UploadDirectory</c>
            event.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadDirectoryProgressArgs.#ctor(System.Int32,System.Int32,System.String,System.Int64,System.Int64)">
            <summary>
            Constructs a new instance of <c>UploadDirectoryProgressArgs</c>.
            </summary>
            <param name="numberOfFilesUploaded">
            The number of files uploaded.
            </param>
            <param name="totalNumberOfFiles">
            The total number of files to upload.
            </param>
            <param name="currentFile">
            The current file 
            </param>
            <param name="transferredBytesForCurrentFile">
            The number of transferred bytes for current file.
            </param>
            <param name="totalNumberOfBytesForCurrentFile">
            The size of the current file in bytes.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadDirectoryProgressArgs.#ctor(System.Int32,System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.Int64)">
            <summary>
            Constructs a new instance of <c>UploadDirectoryProgressArgs</c>.
            </summary>
            <param name="numberOfFilesUploaded">
            The number of files uploaded.
            </param>
            <param name="totalNumberOfFiles">
            The total number of files to upload.
            </param>
            <param name="transferredBytes">
            The bytes transferred across all files being uploaded.
            </param>
            <param name="totalBytes">
            The total number of bytes across all files being uploaded.
            </param>
            <param name="currentFile">
            The current file being uploaded.
            </param>
            <param name="transferredBytesForCurrentFile">
            The number of transferred bytes for current file.
            </param>
            <param name="totalNumberOfBytesForCurrentFile">
            The size of the current file in bytes.
            </param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadDirectoryProgressArgs.ToString">
            <summary>
            The string representation of this instance of UploadDirectoryProgressArgs.
            </summary>
            <returns>The string representation of this instance of UploadDirectoryProgressArgs.</returns>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.TotalNumberOfFiles">
            <summary>
            Gets or sets the total number of files.
            </summary>
            <value>The total number of files.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.NumberOfFilesUploaded">
            <summary>
            Gets or sets the number of files uploaded.
            </summary>
            <value>The number of files uploaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.TotalBytes">
            <summary>
            Gets or sets the total number of bytes across all files being uploaded.
            </summary>
            <value>The total number of bytes across all files being uploaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.TransferredBytes">
            <summary>
            Gets or sets the bytes transferred across all files being uploaded.
            </summary>
            <value>The bytes transferred across all files being uploaded.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.CurrentFile">
            <summary>
            Gets or sets the current file.
            </summary>
            <remarks>
            This property is only valid if UploadDirectory is used without enabling concurrent file uploads (by default concurrent upload is disabled).
            If concurrent file uploads are enabled by setting TransferUtilityUploadDirectoryRequest.UploadFilesConcurrently to true, this property
            will return null.
            </remarks>
            <value>The current file.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.TransferredBytesForCurrentFile">
            <summary>
            Gets or sets the transferred bytes for current file.
            </summary>
            <remarks>
            This property is only valid if UploadDirectory is used without enabling concurrent file uploads (by default concurrent upload is disabled).
            If concurrent file uploads are enabled by setting TransferUtilityUploadDirectoryRequest.UploadFilesConcurrently to true, this property
            will return 0.
            </remarks>
            <value>The transferred bytes for current file.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.UploadDirectoryProgressArgs.TotalNumberOfBytesForCurrentFile">
            <summary>
            Gets or sets the total number of bytes for current file.
            </summary>
            <remarks>
            This property is only valid if UploadDirectory is used without enabling concurrent file uploads (by default concurrent upload is disabled).
            If concurrent file uploads are enabled by setting TransferUtilityUploadDirectoryRequest.UploadFilesConcurrently to true, this property
            will return 0.
            </remarks>
            <value>The total number of bytes for current file.</value>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityUploadRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetCannedACL">
            <summary>
            Checks if the CannedACL property is set.
            </summary>
            <returns>true if there is the CannedACL property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.RemoveCannedACL">
            <summary>
            	Removes the cannned access control list (ACL)
            	for the uploaded object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetFilePath">
            <summary>
            Checks if FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetPartSize">
            <summary>
            Checks if PartSize property is set.
            </summary>
            <returns>true if PartSize property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.OnRaiseProgressEvent(Amazon.S3.Transfer.UploadProgressArgs)">
            <summary>
            Causes the UploadProgressEvent event to be fired.
            </summary>
            <param name="progressArgs">Progress data for the file being uploaded.</param>        
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.WithAutoCloseStream(System.Boolean)">
            <summary>
            	Sets whether or not the stream used with this request is
            	automatically closed when all of the content is read from the stream
              	and returns this object instance, 
            	enabling additional method calls to be chained together.
            </summary>
            <param name="autoCloseStream">
            	A value of <c>true</c> if the if the stream is
            	automatically closed when all of the content is read from the stream.
            	A value of <c>false</c> if otherwise. 	
            </param>
            <returns>
            	This object instance, enabling additional method calls to be chained together.
            </returns>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Key">
            <summary>
            	Gets or sets the key under which the Amazon S3 object is to be stored.
            </summary>
            <value>
            	The key under which the Amazon S3 object is to be stored. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.CannedACL">
            <summary>
            	Gets or sets the canned access control list (ACL)
            	for the uploaded object.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            	information on Amazon S3 canned ACLs.
            </summary>
            <value>
            	The canned access control list (ACL)
            	for the uploaded object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ContentType">
            <summary>
            	Gets or sets the content type of the uploaded Amazon S3 object.
            </summary>
            <value>
            	The content type of the uploaded Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.StorageClass">
            <summary>
            	Gets or sets the storage class for the uploaded Amazon S3 object.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3StorageClass"/> for
            	information on S3 Storage Classes.
            </summary>
            <value>
            	The storage class for the uploaded Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ServerSideEncryptionMethod">
            <summary>
            Gets and sets the ServerSideEncryptionMethod property.
            Specifies the encryption used on the server to
            store the content.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.FilePath">
            <summary>
            <para>
            	Gets or sets the file path
            	where the Amazon S3 object will be uploaded from.
            </para>
            <para>
                For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
            <value>
            	The file path where the Amazon S3 object will be uploaded from.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.PartSize">
            <summary>
            	Gets or sets the part size of the upload in bytes.
            	The uploaded file will be divided into 
            	parts the size specified and
            	uploaded to Amazon S3 individually.
            </summary>
            <value>
            	The part size of the upload.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityUploadRequest.UploadProgressEvent">
            <summary>
            The event for UploadProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The UploadProgressEvent is fired as data
            is uploaded to S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been uploaded as well as how much will be uploaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            UploadProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, UploadProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the UploadProgressEvent delegate's invocation list
            <code>
            TransferUtilityUploadRequest request = new TransferUtilityUploadRequest();
            request.UploadProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ContentLength">
            <summary>
            Gets the length of the content by either checking the FileInfo.Length property or the Stream.Length property.
            </summary>
            <value>The length of the content.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.AutoCloseStream">
            <summary>
            	Gets or sets whether or not the stream used with this request is
            	automatically closed when all of the content is read from the stream.         
            </summary>
            <value>
            	A value of <c>true</c> if the if the stream is
            	automatically closed when all of the content is read from the stream.
            	A value of <c>false</c> if otherwise. 		
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.AutoResetStreamPosition">
            <summary>
            If this value is set to true then the stream's position will be reset to the start before being read for upload.
            Default: true.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.UploadProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the Put Object
            Event.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>        
            <param name="filePath">The file being uploaded</param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
            <param name="compensationForRetry">A compensation for any upstream aggregators if this event to correct theit totalTransferred count,
            in case the underlying request is retried.</param>
            <param name="filePath">The file being uploaded</param>
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.BaseCommand.WhenAllOrFirstExceptionAsync``1(System.Collections.Generic.List{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
             Waits for all of the tasks to complete or till any task fails.
            </summary>        
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.BaseCommand.WhenAllOrFirstExceptionAsync(System.Collections.Generic.List{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Waits for all of the tasks to complete or till any task fails.
            </summary>        
        </member>
        <member name="T:Amazon.S3.Transfer.Internal.MultipartUploadCommand">
            <summary>
            The command to manage an upload using the S3 multipart API.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.MultipartUploadCommand.#ctor(Amazon.S3.IAmazonS3,Amazon.S3.Transfer.TransferUtilityConfig,Amazon.S3.Transfer.TransferUtilityUploadRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Amazon.S3.Transfer.Internal.MultipartUploadCommand"/> class.
            </summary>
            <param name="s3Client">The s3 client.</param>
            <param name="config">The config object that has the number of threads to use.</param>
            <param name="fileTransporterRequest">The file transporter request.</param>
        </member>
        <member name="T:Amazon.S3.Transfer.Internal.SimpleUploadCommand">
            <summary>
            This command is for doing regular PutObject requests.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.Internal.UploadDirectoryCommand">
            <summary>
            This command files all the files that meets the criteria specified in the TransferUtilityUploadDirectoryRequest request
            and uploads them.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.AmazonS3Util">
            <summary>
            Provides utilities used by the Amazon S3 client implementation.
            These utilities might be useful to consumers of the Amazon S3
            library.
            </summary>
            <summary>
            Provides utilities used by the Amazon S3 client implementation.
            These utilities might be useful to consumers of the Amazon S3
            library.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.MimeTypeFromExtension(System.String)">
            <summary>
            Determines MIME type from a file extension
            </summary>
            <param name="ext">The extension of the file</param>
            <returns>The MIME type for the extension, or text/plain</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.MakeStreamSeekable(System.IO.Stream)">
            <summary>
            Converts a non-seekable stream into a System.IO.MemoryStream.
            A MemoryStream's position can be moved arbitrarily
            </summary>
            <param name="input">The stream to be converted</param>
            <returns>A seekable MemoryStream</returns>
            <remarks>MemoryStreams use byte arrays as their backing store.
            Please use this judicially as it is likely that a very large
            stream will cause system resources to be used up.
            </remarks>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.GenerateChecksumForContent(System.String,System.Boolean)">
            <summary>
            Generates an MD5 Digest for the string-based content
            </summary>
            <param name="content">The content for which the MD5 Digest needs
            to be computed.
            </param>
            <param name="fBase64Encode">Whether the returned checksum should be
            base64 encoded.
            </param>
            <returns>A string representation of the hash with or w/o base64 encoding
            </returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.ValidateV2Bucket(System.String)">
            <summary>
            Version2 S3 buckets adhere to RFC 1035:
            <list type="number">
            <item>Less than 255 characters, with each label less than 63 characters.</item>
            <item>Label must start with a letter</item>
            <item>Label must end with a letter or digit</item>
            <item>Label can have a string of letter, digits and hyphens in the middle.</item>
            <item>Although names can be case-sensitive, no significance is attached to the case.</item>
            <item>RFC 1123: Allow label to start with letter or digit (e.g. 3ware.com works)</item>
            <item>RFC 2181: No restrictions apart from the length restrictions.</item>
            </list>
            S3 V2 will start with RFCs 1035 and 1123 and impose the following additional restrictions:
            <list type="number">
            <item>Length between 3 and 63 characters (to allow headroom for upper-level domains,
                as well as to avoid separate length restrictions for bucket-name and its labels</item>
            <item>Only lower-case to avoid user confusion.</item>
            <item>No dotted-decimal IPv4-like strings</item>
            </list>
            </summary>
            <param name="bucketName">The BucketName to validate if V2 addressing should be used</param>
            <returns>True if the BucketName should use V2 bucket addressing, false otherwise</returns>
            <seealso href="http://docs.amazonwebservices.com/AmazonS3/2006-03-01/dev/index.html?BucketRestrictions.html">
            S3 v2 Bucket restrictions</seealso>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.DoesS3BucketExist(Amazon.S3.IAmazonS3,System.String)">
            <summary>
            Determines whether an S3 bucket exists or not.
            This is done by:
            1. Creating a PreSigned Url for the bucket (with an expiry date at the end of this decade)
            2. Making a HEAD request to the Url
            </summary>
            <param name="bucketName">The name of the bucket to check.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetObjectStorageClass(Amazon.S3.IAmazonS3,System.String,System.String,Amazon.S3.S3StorageClass)">
            <summary>
            Sets the storage class for the S3 Object to the value
            specified.
            </summary>
            <param name="bucketName">The name of the bucket in which the key is stored</param>
            <param name="key">The key of the S3 Object whose storage class needs changing</param>
            <param name="sClass">The new Storage Class for the object</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <seealso cref="T:Amazon.S3.Model.S3StorageClass"/>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetObjectStorageClass(Amazon.S3.IAmazonS3,System.String,System.String,System.String,Amazon.S3.S3StorageClass)">
            <summary>
            Sets the storage class for the S3 Object's Version to the value
            specified.
            </summary>
            <param name="bucketName">The name of the bucket in which the key is stored</param>
            <param name="key">The key of the S3 Object whose storage class needs changing</param>
            <param name="version">The version of the S3 Object whose storage class needs changing</param>
            <param name="sClass">The new Storage Class for the object</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <seealso cref="T:Amazon.S3.Model.S3StorageClass"/>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetServerSideEncryption(Amazon.S3.IAmazonS3,System.String,System.String,Amazon.S3.ServerSideEncryptionMethod)">
            <summary>
            Sets the server side encryption method for the S3 Object to the value
            specified.
            </summary>
            <param name="bucketName">The name of the bucket in which the key is stored</param>
            <param name="key">The key of the S3 Object</param>
            <param name="method">The server side encryption method</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetServerSideEncryption(Amazon.S3.IAmazonS3,System.String,System.String,System.String,Amazon.S3.ServerSideEncryptionMethod)">
            <summary>
            Sets the server side encryption method for the S3 Object's Version to the value
            specified.
            </summary>
            <param name="bucketName">The name of the bucket in which the key is stored</param>
            <param name="key">The key of the S3 Object</param>
            <param name="version">The version of the S3 Object</param>
            <param name="method">The server side encryption method</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetWebsiteRedirectLocation(Amazon.S3.IAmazonS3,System.String,System.String,System.String)">
            <summary>
            Sets the redirect location for the S3 Object's when being accessed through the S3 website endpoint.
            </summary>
            <param name="bucketName">The name of the bucket in which the key is stored</param>
            <param name="key">The key of the S3 Object</param>
            <param name="websiteRedirectLocation">The redirect location</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.SetupForObjectModification(Amazon.S3.IAmazonS3,System.String,System.String,System.String,Amazon.S3.Model.CopyObjectRequest@,Amazon.S3.Model.PutACLRequest@)">
            <summary>
            Sets up the request needed to make an exact copy of the object leaving the parent method
            the ability to change just the attribute being requested to change.
            </summary>
            <param name="bucketName"></param>
            <param name="key"></param>
            <param name="version"></param>
            <param name="s3Client"></param>
            <param name="copyRequest"></param>
            <param name="putACLRequest"></param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.DeleteS3BucketWithObjects(Amazon.S3.IAmazonS3,System.String)">
            <summary>
            Deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. This method deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.DeleteS3BucketWithObjects(Amazon.S3.IAmazonS3,System.String,Amazon.S3.Util.S3DeleteBucketWithObjectsOptions)">
            <summary>
            Deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. This method deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <param name="deleteOptions">Options to control the behavior of the delete operation.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.BeginDeleteS3BucketWithObjects(Amazon.S3.IAmazonS3,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteS3BucketWithObjects operation. 
            DeleteS3BucketWithObjects deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. This method deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <returns>An IAsyncCancelableResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteS3BucketWithObjects. IAsyncCancelableResult can also 
            be used to cancel the operation while it's in progress.</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.BeginDeleteS3BucketWithObjects(Amazon.S3.IAmazonS3,System.String,Amazon.S3.Util.S3DeleteBucketWithObjectsOptions,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteS3BucketWithObjects operation. 
            DeleteS3BucketWithObjects deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. This method deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <param name="deleteOptions">Options to control the behavior of the delete operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <returns>An IAsyncCancelableResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteS3BucketWithObjects. IAsyncCancelableResult can also 
            be used to cancel the operation while it's in progress.</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.BeginDeleteS3BucketWithObjects(Amazon.S3.IAmazonS3,System.String,Amazon.S3.Util.S3DeleteBucketWithObjectsOptions,System.Action{Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate},System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteS3BucketWithObjects operation. 
            DeleteS3BucketWithObjects deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. This method deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <param name="deleteOptions">>Options to control the behavior of the delete operation.</param>
            <param name="updateCallback">An callback that is invoked to send updates while delete operation is in progress.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <returns>An IAsyncCancelableResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteS3BucketWithObjects. IAsyncCancelableResult can also 
            be used to cancel the operation while it's in progress.</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.EndDeleteS3BucketWithObjects(Amazon.S3.Util.IAsyncCancelableResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteS3BucketWithObjects operation.
            </summary>
            <param name="asyncCancelableResult">The IAsyncCancelableResult returned by the call to BeginDeleteS3BucketWithObjects.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.InvokeDeleteS3BucketWithObjects(System.Object)">
            <summary>
            Invokes the DeleteS3BucketWithObjectsInternal method.
            </summary>
            <param name="state">The Request object that has all the data to complete the operation. </param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.DeleteS3BucketWithObjectsInternal(Amazon.S3.IAmazonS3,System.String,Amazon.S3.Util.S3DeleteBucketWithObjectsOptions,System.Action{Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate},Amazon.S3.Util.AsyncCancelableResult)">
            <summary>
            Deletes an S3 bucket which contains objects.
            An S3 bucket which contains objects cannot be deleted until all the objects 
            in it are deleted. The function deletes all the objects in the specified 
            bucket and then deletes the bucket itself.
            </summary>
            <param name="bucketName">The bucket to be deleted.</param>
            <param name="s3Client">The Amazon S3 Client to use for S3 specific operations.</param>
            <param name="deleteOptions">Options to control the behavior of the delete operation.</param>
            <param name="updateCallback">The callback which is used to send updates about the delete operation.</param>
            <param name="asyncCancelableResult">An IAsyncCancelableResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteS3BucketWithObjects. IAsyncCancelableResult can also 
            be used to cancel the operation while it's in progress.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.InvokeS3DeleteBucketWithObjectsUpdateCallback(System.Action{Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate},Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate)">
            <summary>
            Invokes the callback which provides updated about the delete operation.
            </summary>
            <param name="updateCallback">The callback to be invoked.</param>
            <param name="update">The data being passed to the callback.</param>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.ConvertToS3StorageClass(System.String)">
            <summary>
            Converts the string representing a storage class that would come back from a ListObjects request
            to the S3StorageClass enumeration.
            </summary>
            <param name="value">Amazon S3 string values for storage class</param>
            <returns>The converted S3StorageClass enumeration</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.PostUpload(Amazon.S3.Util.S3PostUploadRequest)">
            <summary>
            Upload data to Amazon S3 using HTTP POST.
            </summary>
            <remarks>
            For more information, <see href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingHTTPPOST.html"/>
            </remarks>
            <param name="request">Request object which describes the data to POST</param>
            <exception cref="T:Amazon.S3.Util.S3PostUploadException">Thrown if the service returns an error</exception>
        </member>
        <member name="P:Amazon.S3.Util.AmazonS3Util.FormattedCurrentTimestamp">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:Amazon.S3.Util.AsyncCancelableResult">
            <summary>
            Represents the status of an asynchronous operation. 
            It adds support for Cancelation of the asynchronous operation.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.IAsyncCancelableResult">
            <summary>
            Represents the status of an asynchronous operation. This interface extends 
            IAsyncResult and adds support for Cancelation of the asynchronous operation.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.IAsyncCancelableResult.Cancel">
            <summary>
            Cancels the asynchronous operation if it's in progress.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.IAsyncCancelableResult.IsCanceled">
            <summary>
            Gets a value that indicated whether the asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Constructor for AsyncCancelableResult.
            </summary>
            <param name="callback">The callback to be invoked when the asynchronous operation is completed.</param>
            <param name="state">Gets a user-defined object that qualifies or contains information about an
            asynchronous operation.
            </param>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.Cancel">
            <summary>
            Cancels the asynchronous operation if it's in progress.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.SignalWaitHandleOnCanceled">
            <summary>
            Signals that the operaton is canceled and invokes the callback.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.SignalWaitHandleOnCompleted">
            <summary>
            Signals that the operation is completed and invoked the callback.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AsyncCancelableResult.Dispose(System.Boolean)">
            <summary>
            Disposes any managed and unmanaged resources.
            </summary>
            <param name="disposing">Should pass true if called by Dispose(), pass false if
            called during finalization.</param>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.IsCanceled">
            <summary>
            Gets a value that indicated whether the asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an
            asynchronous operation.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.AsyncWaitHandle">
            <summary>
            Gets a System.Threading.WaitHandle that is used to wait for an asynchronous
            operation to complete.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed
            synchronously.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.IsCancelRequested">
            <summary>
            Gets a value that indicates whether a cancel is requested.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.LastException">
            <summary>
            The last exception that when the asynchronous operation was executed.
            This is used to capture the exception and re-throw it when EndOperation is called.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.AsyncCancelableResult.Callback">
            <summary>
            The callback to be invoked when the asynchronous operation is completed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.S3DeleteBucketWithObjectsOptions">
            <summary>
            Options which control the behaviour of the DeleteS3BucketWithObjects operation.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsOptions.ContinueOnError">
            <summary>
            Gets or sets a value which indicates whether the 
            operation should be aborted if an error is encountered during execution.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsOptions.QuietMode">
            <summary>
            Gets or sets a value which indicated whether verbose results shoule be returned to the
            <see cref="T:System.Action`1"/> callback.
            If quiet mode is true the callback will receive only keys where the delete operation encountered an error.
            If quiet mode is false the callback will receive keys for both successful and unsuccessful delete operations.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest">
            <summary>
            Internal class used to pass the parameters for DeleteS3BucketWithObjects operation.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest.BucketName">
            <summary>
            Name of the bucket to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest.S3Client">
            <summary>
            The Amazon S3 Client to use for S3 specific operations.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest.DeleteOptions">
            <summary>
            Options to control the behavior of the delete operation.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest.AsyncCancelableResult">
            <summary>
            Represents the status of an asynchronous operation. 
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsRequest.UpdateCallback">
            <summary>
            The callback which is used to send updates about the delete operation.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate">
            <summary>
            Contains updates from DeleteS3BucketWithObjects operation.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate.DeletedObjects">
            <summary>
            The list of objects which were successfully deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3DeleteBucketWithObjectsUpdate.DeleteErrors">
            <summary>
            The list of objects for which the delete operation failed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.S3PostUploadException">
            <summary>
            An exception detailing a failed HTTP POST upload atempt to Amazon S3.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadException.#ctor(System.String)">
            <summary>
            Initializes a new instance of S3PostUploadException with a specified error message
            </summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of S3PostUploadException with a specified error code and error message
            </summary>
            <param name="errorCode">The error code</param>
            <param name="message">The error message</param>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadException.FromResponse(System.Net.HttpWebResponse)">
            <summary>
            Parse an S3 Error response and create an S3PostUploadException
            </summary>
            <param name="response">The response from S3</param>
            <returns>An S3PostUploadException with the information from the response</returns>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadException.ErrorCode">
            <summary>
            The error code returned by S3
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadException.RequestId">
            <summary>
            The S3 request id
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadException.HostId">
            <summary>
            The S3 host id
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadException.StatusCode">
            <summary>
            The HTTP error status code returned by S3
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadException.ExtraFields">
            <summary>
            Additional information about the error
            </summary>
            <remarks>
            Some errors are accompanied by more specific information, which vary from error to error
            </remarks>
        </member>
        <member name="T:Amazon.S3.Util.S3PostUploadError">
            <summary>
            Class for unmarshalling response XML
            </summary>
        </member>
        <member name="T:Amazon.S3.Util.S3PostUploadRequest">
            <summary>
            Parameters for uploading to Amazon S3 a file using HTTP POS
            </summary>
            <remarks>
            <para>
            If a S3PostUploadSignedPolicy is assigned, then values set (other than InputStream or Path) on this object must adhere to the policy. 
            This includes metadata. If metadata is specified in the policy, then it must be included in the request. Adding metadata not in the
            policy will cause the POST to fail.
            </para><para>
            For more information, <see href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingHTTPPOST.html"/>
            </para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadRequest.WriteFormData(System.String,System.IO.Stream)">
            <summary>
            Write the multipart/form-data for this request for all fields except the file data to a stream
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.Bucket">
            <summary>
            S3 Bucket to upload the object to
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.Key">
            <summary>
            The name of the uploaded key.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.InputStream">
            <summary>
            Stream to read the upload data for
            </summary>
            <remarks>
            If you use InputStream, then you also need to set ContentLength
            </remarks>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.Path">
            <summary>
            File path to read the upload data from
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.ContentType">
            <summary>
            Content type for the uploaded data
            </summary>
            <remarks>
            If this is not set, an attempt will be made to infer it from the extension on Key or Path (in that order), 
            otherwise 'application/octet-stream' will be assumed.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.CannedACL">
            <summary>
            Specifies an Amazon S3 access control list
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.SignedPolicy">
            <summary>
            Signed policy from bucket owner.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.SuccessActionRedirect">
            <summary>
            Where to redirect browsers on a successful upload
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.SuccessActionStatus">
            <summary>
            The status code returned to the client upon successful upload if success_action_redirect is not specified
            </summary>
            <remarks>
            <para>
            Accepts the values OK (200) , Created (201), or NoContent (204, default).
            </para><para>
            If the value is set to OK or NoContent, Amazon S3 returns an empty document with a 200 or 204 status code.
            </para><para>
            If the value is set to Created, Amazon S3 returns an XML document with a 201 status code.
            </para><para>
            If the value is not set or if it is set to an invalid value, Amazon S3 returns an empty document with a 204 status code. 
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.StorageClass">
            <summary>
            Storage class to use for storing the object
            </summary>
            <remarks>
            Default: STANDARD
            </remarks>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.SecurityToken">
            <summary>
            Security token for the post
            </summary>
            <remarks>
            Some policies may require an additional security token.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadRequest.Metadata">
            <summary>
            Metadata to set on the uploaded object
            </summary>
            <remarks>
            If keys do not begin with 'x-amz-meta-' it will be added at POST time.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Util.S3PostUploadSignedPolicy">
            <summary>
            Utility class for managing and exchanging HTTP POST uploads of objects to Amazon S3.
            </summary>
            <remarks>
            <para>
            This object supports creating, marshalling, and unmarshalling of the information needed to build 
            an authenticated HTTP POST request to S3 for uploading objects according to a policy. 
            </para>
            For more information, <see href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingHTTPPOST.html"/>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.GetSignedPolicy(System.String,Amazon.Runtime.AWSCredentials)">
            <summary>
             Given a policy and AWS credentials, produce a S3PostUploadSignedPolicy.
            </summary>
            <param name="policy">JSON string representing the policy to sign</param>
            <param name="credentials">Credentials to sign the policy with</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.GetReadablePolicy">
            <summary>
            Get the policy document as a human readable string.
            </summary>
            <returns>Human readable policy document.</returns>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.ToJson">
            <summary>
            JSON representation of this object
            </summary>
            <returns>JSON string</returns>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.ToXml">
            <summary>
            XML Representation of this object
            </summary>
            <returns>XML String</returns>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.GetSignedPolicyFromJson(System.String)">
            <summary>
            Create an instance of this class from a JSON string.
            </summary>
            <param name="policyJson">JSON string</param>
            <returns>Instance of S3PostUploadSignedPolicy</returns>
        </member>
        <member name="M:Amazon.S3.Util.S3PostUploadSignedPolicy.GetSignedPolicyFromXml(System.String)">
            <summary>
            Create an instance of this class from an XML string.
            </summary>
            <param name="policyXml">XML string generated by ToXml()</param>
            <returns>Instance of S3PostUploadSignedPolicy</returns>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadSignedPolicy.Policy">
            <summary>
            The policy document which governs what uploads can be done.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadSignedPolicy.Signature">
            <summary>
            The signature for the policy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Util.S3PostUploadSignedPolicy.AccessKeyId">
            <summary>
            The AWS Access Key Id for the credential pair that produced the signature.
            </summary>
        </member>
        <member name="T:Amazon.Util.AWSSDKUtils">
            <summary>
            This class defines utilities and constants that can be used by 
            all the client libraries of the SDK.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.UserAgentHeader">
            <summary>
            The user agent string header
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidUrlCharacters">
            <summary>
            The Set of accepted and valid Url characters per RFC3986. 
            Characters outside of this set will be encoded.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidUrlCharactersRFC1738">
            <summary>
            The Set of accepted and valid Url characters per RFC1738. 
            Characters outside of this set will be encoded.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.UrlEncodedContent">
            <summary>
            The string representing Url Encoded Content in HTTP requests
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.GMTDateFormat">
            <summary>
            The GMT Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601DateFormat">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601DateFormatNoMS">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601BasicDateTimeFormat">
            <summary>
            The ISO8601 Basic date/time format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601BasicDateFormat">
            <summary>
            The ISO8601 basic date format. Used during AWS4 signature computation.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.RFC822DateFormat">
            <summary>
            The RFC822Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.PreserveStackTrace(System.Exception)">
            <summary>
            This method is used preserve the stacktrace used from clients that support async calls.  This 
            make sure that exceptions thrown during EndXXX methods has the orignal stacktrace that happen 
            in the background thread.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidPathCharacters">
            <summary>
            The set of accepted and valid Url path characters per RFC3986.
            </summary>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetParametersAsString(System.Collections.Generic.IDictionary{System.String,System.String})">
            Convert Dictionary of paremeters to Url encoded query string
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.Join(System.Collections.Generic.List{System.String})">
            <summary>
            Returns a new string created by joining each of the strings in the
            specified list together, with a comma between them.
            </summary>
            <parma name="strings">The list of strings to join into a single, comma delimited
            string list.</parma>
            <returns> A new string created by joining each of the strings in the
            specified list together, with a comma between strings.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.DetermineRegion(System.String)">
            <summary>
            Attempt to infer the region for a service request based on the endpoint
            </summary>
            <param name="url">Endpoint to the service to be called</param>
            <returns>
            Region parsed from the endpoint; DefaultRegion (or DefaultGovRegion) 
            if it cannot be determined/is not explicit
            </returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.DetermineService(System.String)">
            <summary>
            Attempt to infer the service name for a request (in short form, eg 'iam') from the
            service endpoint.
            </summary>
            <param name="url">Endpoint to the service to be called</param>
            <returns>
            Short-form name of the service parsed from the endpoint; empty string if it cannot 
            be determined
            </returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ConvertFromUnixEpochSeconds(System.Int32)">
            <summary>
            Utility method for converting Unix epoch seconds to DateTime structure.
            </summary>
            <param name="seconds">The number of seconds since January 1, 1970.</param>
            <returns>Converted DateTime structure</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ToHex(System.Byte[],System.Boolean)">
            <summary>
            Helper function to format a byte array into string
            </summary>
            <param name="data">The data blob to process</param>
            <param name="lowercase">If true, returns hex digits in lower case form</param>
            <returns>String version of the data</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.InvokeInBackground``1(System.EventHandler{``0},``0,System.Object)">
            <summary>
            Calls a specific EventHandler in a background thread
            </summary>
            <param name="handler"></param>
            <param name="args"></param>
            <param name="sender"></param>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ParseQueryParameters(System.String)">
            <summary>
            Parses a query string of a URL and returns the parameters as a string-to-string dictionary.
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetFormattedTimestampISO8601(System.Int32)">
            <summary>
            Gets the ISO8601 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetFormattedTimestampRFC822(System.Int32)">
            <summary>
            Gets the RFC822 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string per RFC3986. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns>The encoded string</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.UrlEncode(System.Int32,System.String,System.Boolean)">
            <summary>
            URL encodes a string per the specified RFC. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="rfcNumber">RFC number determing safe characters</param>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns>The encoded string</returns>
            <remarks>
            Currently recognised RFC versions are 1738 (Dec '94) and 3986 (Jan '05). 
            If the specified RFC is not recognised, 3986 is used by default.
            </remarks>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.BytesToHexString(System.Byte[])">
            <summary>
            Convert bytes to a hex string
            </summary>
            <param name="bytes">Bytes to convert.</param>
            <returns>Hexadecimal string representing the byte array.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.HexStringToBytes(System.String)">
            <summary>
            Convert a hex string to bytes
            </summary>
            <param name="hex">Hexadecimal string</param>
            <returns>Byte array corresponding to the hex string.</returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.SDKUserAgent">
            <summary>
            The AWS SDK User Agent
            </summary>        
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampGMT">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampISO8601">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampRFC822">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig">
            <summary>
            Configuration for accessing AWS Security Token Service service
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceRequest">
            <summary>
            Base class for AmazonSecurityTokenService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumedRoleUser">
            <summary>
            <para>The identifiers for the temporary security credentials that the operation returns. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumedRoleUser.AssumedRoleId">
            <summary>
            A unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS
            when the role is created.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 96</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@:-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumedRoleUser.Arn">
            <summary>
            The ARN of the temporary security credentials that are returned from the <a>AssumeRole</a> action. For more information about ARNs and how
            to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html" target="_blank"> Identifiers
            for IAM Entities </a> in <i>Using IAM</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleRequest">
            <summary>
            Container for the parameters to the AssumeRole operation.
            <para>Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) that you
            can use to access AWS resources that you might not normally have access to. Typically, you use <c>AssumeRole</c> for cross-account access or
            federation. </para> <para> <b>Important:</b> You cannot call <c>AssumeRole</c> by using AWS account credentials; access will be denied. You
            must use IAM user credentials or temporary security credentials to call <c>AssumeRole</c> .
            </para> <para> For cross-account access, imagine that you own multiple accounts and need to access resources in each account. You could
            create long-term credentials in each account to access those resources. However, managing all those credentials and remembering which one
            can access which account can be time consuming. Instead, you can create one set of long-term credentials in one account and then use
            temporary security credentials to access all the other accounts by assuming roles in those accounts. For more information about roles, see
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html" >Roles</a> in <i>Using IAM</i> . </para> <para> For
            federation, you can, for example, grant single sign-on access to the AWS Management Console. If you already have an identity and
            authentication system in your corporate network, you don't have to recreate user identities in AWS in order to grant those user identities
            access to AWS. Instead, after a user has been authenticated, you call <c>AssumeRole</c> (and specify the role with the appropriate
            permissions) to get temporary security credentials for that user. With those temporary security credentials, you construct a sign-in URL
            that users can use to access the console. For more information, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html" >Scenarios for Granting Temporary Access</a> in <i>AWS Security Token
            Service</i> . </para> <para> The temporary security credentials are valid for the duration that you specified when calling <c>AssumeRole</c>
            , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). The default is 1 hour. </para> <para>Optionally, you can pass an AWS
            IAM access policy to this operation. The temporary security credentials that are returned by the operation have the permissions that are
            associated with the access policy of the role that is being assumed, except for any permissions explicitly denied by the policy you pass.
            This gives you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> To assume a role,
            your AWS account must be trusted by the role. The trust relationship is defined in the role's trust policy when the IAM role is created. You
            must also have a policy that allows you to call <c>sts:AssumeRole</c> . </para> <para> <b>Using MFA with AssumeRole</b> </para> <para> You
            can optionally include multi-factor authentication (MFA) information when you call <c>AssumeRole</c> . This is useful for cross-account
            scenarios in which you want to make sure that the user who is assuming the role has been authenticated using an AWS MFA device. In that
            scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication; if the caller does not include
            valid MFA information, the request to assume the role is denied. The condition in a a trust policy that tests for MFA authentication might
            look like the following example.</para> <para> <c>"Condition": {"Null": {"aws:MultiFactorAuthAge": false}}</c> </para> <para>For more
            information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html" >Configuring MFA-Protected API Access</a> in
            the <i>Using AWS IAM</i> guide. </para> <para>To use MFA with <c>AssumeRole</c> , you pass values for the <c>SerialNumber</c> and
            <c>TokenCode</c> parameters. The <c>SerialNumber</c> value identifies the user's hardware or virtual MFA device. The <c>TokenCode</c> is the
            temporary one-time password (TOTP) that the MFA devices produces. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.RoleArn">
            <summary>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.RoleSessionName">
            <summary>
            An identifier for the assumed role session. The session name is included as part of the <c>AssumedRoleUser</c>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.Policy">
            <summary>
            An AWS IAM policy in JSON format. The temporary security credentials that are returned by the operation have the permissions that are
            associated with the access policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. This gives
            you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2048</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.DurationSeconds">
            <summary>
            The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the
            value is set to 3600 seconds.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>900 - 3600</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.ExternalId">
            <summary>
            A unique identifier that is used by third parties to assume a role in their customers' accounts. For each role that the third party can
            assume, they should instruct their customers to create a role with the external ID that the third party generated. Each time the third party
            assumes the role, they must pass the customer's external ID. The external ID is useful in order to help third parties bind a role to the
            customer who created it. For more information about the external ID, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/sts-delegating-externalid.html" target="_blank">About the External ID</a> in <i>Using
            Temporary Security Credentials</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 96</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@:-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.SerialNumber">
            <summary>
            The identification number of the MFA device that is associated with the user who is making the <c>AssumeRole</c> call. Specify this value if
            the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for
            a hardware device (such as <c>GAHT12345678</c>) or an Amazon Resource Name (ARN) for a virtual device (such as
            <c>arn:aws:iam::123456789012:mfa/user</c>).
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.TokenCode">
            <summary>
            The value provided by the MFA device, if the trust policy of the role being assumed requires MFA (that is, if the policy includes a
            condition that tests for MFA). If the role being assumed requires MFA and if the <c>TokenCode</c> value is missing or expired, the
            <c>AssumeRole</c> call returns an "access denied" errror.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleResponse">
            <summary>
            Returns information about the  AssumeRole response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleResult">
            <summary>
            <para> Contains the result of a successful call to the AssumeRole action, including temporary AWS credentials that can be used to make AWS
            requests. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.Credentials">
            <summary>
            The temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.AssumedRoleUser">
            <summary>
            The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security
            credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID.
            The ARN and ID include the <c>RoleSessionName</c> that you specified when you called <c>AssumeRole</c>.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.PackedPolicySize">
            <summary>
            A percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100
            percent, which means the policy exceeded the allowed space.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResponse.AssumeRoleResult">
            <summary>
            Gets and sets the AssumeRoleResult property.
            Contains the result of a successful call to the AssumeRole action, including temporary AWS credentials that can be used to make AWS
            requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest">
            <summary>
            Container for the parameters to the AssumeRoleWithSAML operation.
            <para> Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This
            operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific
            credentials or configuration. </para> <para> The temporary security credentials returned by this operation consist of an access key ID, a
            secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services. The
            credentials are valid for the duration that you specified when calling <c>AssumeRoleWithSAML</c> , which can be up to 3600 seconds (1 hour)
            or until the time specified in the SAML authentication response's <c>NotOnOrAfter</c> value, whichever is shorter.</para>
            <para><b>NOTE:</b>The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range
            are specified. </para> <para>Optionally, you can pass an AWS IAM access policy to this operation. The temporary security credentials that
            are returned by the operation have the permissions that are associated with the access policy of the role being assumed, except for any
            permissions explicitly denied by the policy you pass. This gives you a way to further restrict the permissions for the resulting temporary
            security credentials. These policies and any applicable resource-based policies are evaluated when calls to AWS are made using the temporary
            security credentials. </para> <para> Before your application can call <c>AssumeRoleWithSAML</c> , you must configure your SAML identity
            provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (AWS IAM) to create a SAML
            provider entity in your AWS account that represents your identity provider, and create an AWS IAM role that specifies this SAML provider in
            its trust policy. </para> <para> Calling <c>AssumeRoleWithSAML</c> does not require the use of AWS security credentials. The identity of the
            caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider. </para>
            <para>For more information, see the following resources:</para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html" >Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Security Credentials</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html" >SAML Providers</a> in the <i>Using
            IAM</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html" >Configuring a Relying Party and Claims in
            the Using IAM guide. </a> </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html" >Creating a Role for SAML-Based Federation</a> in the
            <i>Using IAM</i> guide. </li>
            
            </ul>
            
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.RoleArn">
            <summary>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.PrincipalArn">
            <summary>
            The Amazon Resource Name (ARN) of the SAML provider in AWS IAM that describes the IdP.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.SAMLAssertion">
            <summary>
            The base-64 encoded SAML authentication response provided by the IdP. For more information, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring a Relying Party and Adding Claims</a> in
            the <i>Using IAM</i> guide.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>4 - 50000</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.Policy">
            <summary>
            An AWS IAM policy in JSON format. The temporary security credentials that are returned by this operation have the permissions that are
            associated with the access policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. These
            policies and any applicable resource-based policies are evaluated when calls to AWS are made using the temporary security credentials.
            <note>The policy must be 2048 bytes or shorter, and its packed size must be less than 450 bytes.</note>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2048</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.DurationSeconds">
            <summary>
            The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the
            value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response's <c>NotOnOrAfter</c> value. The
            actual expiration time is whichever value is shorter. <note>The maximum duration for a session is 1 hour, and the minimum duration is 15
            minutes, even if values outside this range are specified. </note>
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>900 - 129600</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse">
            <summary>
            Returns information about the  AssumeRoleWithSAML response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult">
            <summary>
            <para> Contains the result of a successful call to the AssumeRoleWithSAML action, including temporary AWS credentials that can be used to
            make AWS requests. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.Credentials">
            <summary>
            AWS credentials for API authentication.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.AssumedRoleUser">
            <summary>
            The identifiers for the temporary security credentials that the operation returns.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.PackedPolicySize">
            <summary>
            A percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100
            percent, which means the policy exceeded the allowed space.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse.AssumeRoleWithSAMLResult">
            <summary>
            Gets and sets the AssumeRoleWithSAMLResult property.
            Contains the result of a successful call to the AssumeRoleWithSAML action, including temporary AWS credentials that can be used to make AWS
            requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest">
            <summary>
            Container for the parameters to the AssumeRoleWithWebIdentity operation.
            <para> Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web
            identity provider, such as Login with Amazon, Facebook, or Google. </para> <para> Calling <c>AssumeRoleWithWebIdentity</c> does not require
            the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary
            security credentials without including long-term AWS credentials in the application, and without deploying server-based proxy services that
            use long-term AWS credentials. Instead, the identity of the caller is validated by using a token from the web identity provider. </para>
            <para> The temporary security credentials returned by this API consist of an access key ID, a secret access key, and a security token.
            Applications can use these temporary security credentials to sign calls to AWS service APIs. The credentials are valid for the duration that
            you specified when calling <c>AssumeRoleWithWebIdentity</c> , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By
            default, the temporary security credentials are valid for 1 hour. </para> <para>Optionally, you can pass an AWS IAM access policy to this
            operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the access
            policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. This gives you a way to further
            restrict the permissions for the resulting temporary security credentials. These policies and any applicable resource-based policies are
            evaluated when calls to AWS are made using the temporary security credentials. </para> <para> Before your application can call
            <c>AssumeRoleWithWebIdentity</c> , you must have an identity token from a supported identity provider and create a role that the application
            can assume. The role that your application assumes must trust the identity provider that is associated with the identity token. In other
            words, the identity provider must be specified in the role's trust policy. </para> <para> For more information about how to use web identity
            federation and the <c>AssumeRoleWithWebIdentity</c> , see the following resources: </para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html#MobileApplication-KnownProvider" > Creating a Mobile
            Application with Third-Party Sign-In</a> and <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html" > Creating Temporary
            Security Credentials for Mobile Apps Using Third-Party Identity Providers</a> in <i>Using Temporary Security Credentials</i> . </li>
            <li> <a href="https://web-identity-federation-playground.s3.amazonaws.com/index.html" > Web Identity Federation Playground</a> . This
            interactive website lets you walk through the process of authenticating via Login with Amazon, Facebook, or Google, getting temporary
            security credentials, and then using those credentials to make a request to AWS. </li>
            <li> <a href="http://aws.amazon.com/sdkforios/" >AWS SDK for iOS</a> and <a href="http://aws.amazon.com/sdkforandroid/" >AWS SDK for
            Android</a> . These toolkits contain sample apps that show how to invoke the identity providers, and then how to use the information from
            these providers to get and use temporary security credentials. </li>
            <li> <a href="http://aws.amazon.com/articles/4617974389850313" >Web Identity Federation with Mobile Applications</a> . This article
            discusses web identity federation and shows an example of how to use web identity federation to get access to content in Amazon S3. </li>
            
            </ul>
            
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.RoleArn">
            <summary>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.RoleSessionName">
            <summary>
            An identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your
            application. That way, the temporary security credentials that your application will use are associated with that user. This session name is
            included as part of the ARN and assumed role ID in the <c>AssumedRoleUser</c> response element.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.WebIdentityToken">
            <summary>
            The OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity provider. Your application must get this token by
            authenticating the user who is using your application with a web identity provider before the application makes an
            <c>AssumeRoleWithWebIdentity</c> call.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>4 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.ProviderId">
            <summary>
            The fully-qualified host component of the domain name of the identity provider. Specify this value only for OAuth access tokens. Do not
            specify this value for OpenID Connect ID tokens, such as <c>accounts.google.com</c>. Do not include URL schemes and port numbers. Currently,
            <c>www.amazon.com</c> and <c>graph.facebook.com</c> are supported.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>4 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.Policy">
            <summary>
            An AWS IAM policy in JSON format. The temporary security credentials that are returned by the operation have the permissions that are
            associated with the access policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. This gives
            you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2048</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.DurationSeconds">
            <summary>
            The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the
            value is set to 3600 seconds.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>900 - 129600</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse">
            <summary>
            Returns information about the  AssumeRoleWithWebIdentity response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult">
            <summary>
            <para> Contains the result of a successful call to the AssumeRoleWithWebIdentity action, including temporary AWS credentials that can be
            used to make AWS requests. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.Credentials">
            <summary>
            The temporary security credentials, which include an access key ID, a secret access key, and a security token.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.SubjectFromWebIdentityToken">
            <summary>
            The unique user identifier that is returned by the identity provider. This identifier is associated with the <c>WebIdentityToken</c> that
            was submitted with the <c>AssumeRoleWithWebIdentity</c> call. The identifier is typically unique to the user and the application that
            acquired the <c>WebIdentityToken</c> (pairwise identifier). If an OpenID Connect ID token was submitted in the <c>WebIdentityToken</c>, this
            value is returned by the identity provider as the token's <c>sub</c> (Subject) claim.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 255</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.AssumedRoleUser">
            <summary>
            The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security
            credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID.
            The ARN and ID include the <c>RoleSessionName</c> that you specified when you called <c>AssumeRole</c>.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.PackedPolicySize">
            <summary>
            A percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100
            percent, which means the policy exceeded the allowed space.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse.AssumeRoleWithWebIdentityResult">
            <summary>
            Gets and sets the AssumeRoleWithWebIdentityResult property.
            Contains the result of a successful call to the AssumeRoleWithWebIdentity action, including temporary AWS credentials that can be used to
            make AWS requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Credentials">
            <summary>
            <para>AWS credentials for API authentication.</para>
            </summary>
            <summary>
            <para>AWS credentials for API authentication.</para>
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.Credentials.GetCredentials">
            <summary>
            Returns a copy of ImmutableCredentials corresponding to these credentials
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.AccessKeyId">
            <summary>
            The access key ID that identifies the temporary security credentials.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>16 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.SecretAccessKey">
            <summary>
            The secret access key that can be used to sign requests.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.SessionToken">
            <summary>
            The token that users must pass to the service API to use the temporary credentials.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.Expiration">
            <summary>
            The date on which the current credentials expire.
             
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest">
            <summary>
            Container for the parameters to the DecodeAuthorizationMessage operation.
            <para> Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS
            request. </para> <para> For example, if a user is not authorized to perform an action that he or she has requested, the request returns a
            <c>Client.UnauthorizedOperation</c> response (an HTTP 403 response). Some AWS actions additionally return an encoded message that can
            provide details about this authorization failure. </para> <para><b>NOTE:</b> Only certain AWS actions return an encoded authorization
            message. The documentation for an individual action indicates whether that action returns an encoded message in addition to returning an
            HTTP code. </para> <para>The message is encoded because the details of the authorization status can constitute privileged information that
            the user who requested the action should not see. To decode an authorization status message, a user must be granted permissions via an AWS
            IAM policy to request the <c>DecodeAuthorizationMessage</c> (
            <c>sts:DecodeAuthorizationMessage</c> ) action. </para> <para> The decoded message includes the following type of
            information: </para>
            <ul>
            <li>Whether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow" >Determining Whether
            a Request is Allowed or Denied</a> in <i>Using AWS IAM</i> . </li>
            <li>The principal who made the request.</li>
            <li>The requested action.</li>
            <li>The requested resource.</li>
            <li>The values of condition keys in the context of the user's request.</li>
            
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest.EncodedMessage">
            <summary>
            The encoded message that was returned with the response.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 10240</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse">
            <summary>
            Returns information about the  DecodeAuthorizationMessage response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResult">
            <summary>
            <para>A document that contains additional information about the authorization status of a request from an encoded message that is returned
            in response to an AWS request. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResult.DecodedMessage">
            <summary>
            An XML document that contains the decoded message. For more information, see <c>DecodeAuthorizationMessage</c>.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse.DecodeAuthorizationMessageResult">
            <summary>
            Gets and sets the DecodeAuthorizationMessageResult property.
            A document that contains additional information about the authorization status of a request from an encoded message that is returned in
            response to an AWS request.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.ExpiredTokenException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.ExpiredTokenException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.FederatedUser">
            <summary>
            <para>Identifiers for the federated user that is associated with the credentials.</para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.FederatedUser.FederatedUserId">
            <summary>
            The string that identifies the federated user associated with the credentials, similar to the unique ID of an IAM user.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 96</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@\:-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.FederatedUser.Arn">
            <summary>
            The ARN that specifies the federated user that is associated with the credentials. For more information about ARNs and how to use them in
            policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html" target="_blank">Identifiers for IAM
            Entities</a> in <i>Using IAM</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>20 - 2048</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenRequest">
            <summary>
            Container for the parameters to the GetFederationToken operation.
            <para> Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a
            federated user. A typical use is in a proxy application that is getting temporary security credentials on behalf of distributed applications
            inside a corporate network. Because you must call the <c>GetFederationToken</c> action using the long-term security credentials of an IAM
            user, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application. </para>
            <para> <b>Note:</b> Do not use this call in mobile applications or client-based web applications that directly get temporary security
            credentials. For those types of applications, use <c>AssumeRoleWithWebIdentity</c> . </para> <para>The <c>GetFederationToken</c> action must
            be called by using the long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are
            valid for the specified duration, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using
            account credentials have a maximum duration of 3600 seconds (1 hour). </para> <para>Optionally, you can pass an AWS IAM access policy to
            this operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the
            entity that is making the <c>GetFederationToken</c> call, except for any permissions explicitly denied by the policy you pass. This gives
            you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> For more
            information about how permissions work, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/TokenPermissions.html" >Controlling
            Permissions in Temporary Credentials</a> in <i>Using Temporary Security Credentials</i> . For information about using
            <c>GetFederationToken</c> to create temporary security credentials, see <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingFedTokens.html" >Creating Temporary Credentials to Enable Access for Federated
            Users</a> in <i>Using Temporary Security Credentials</i> . </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.Name">
            <summary>
            The name of the federated user. The name is used as an identifier for the temporary security credentials (such as <c>Bob</c>). For example,
            you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>2 - 32</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.Policy">
            <summary>
            An AWS IAM policy in JSON format. By default, federated users have no permissions; they do not inherit any from the IAM user. When you
            specify a policy, the federated user's permissions are based on the specified policy and the IAM user's policy. If you don't specify a
            policy, federated users can only access AWS resources that explicitly allow those federated users in a resource policy, such as in an Amazon
            S3 bucket policy.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>1 - 2048</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\u0009\u000A\u000D\u0020-\u00FF]+</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.DurationSeconds">
            <summary>
            The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to
            129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions for AWS account owners are restricted to a maximum of 3600
            seconds (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>900 - 129600</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenResponse">
            <summary>
            Returns information about the  GetFederationToken response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenResult">
            <summary>
            <para> Contains the result of a successful call to the GetFederationToken action, including temporary AWS credentials that can be used to
            make AWS requests. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.Credentials">
            <summary>
            Credentials for the service API authentication.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.FederatedUser">
            <summary>
            Identifiers for the federated user associated with the credentials (such as <c>arn:aws:sts::123456789012:federated-user/Bob</c> or
            <c>123456789012:Bob</c>). You can use the federated user's ARN in your resource policies like in an Amazon S3 bucket policy.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.PackedPolicySize">
            <summary>
            A percentage value indicating the size of the policy in packed form. The service rejects policies for which the packed size is greater than
            100 percent of the allowed value.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - </description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResponse.GetFederationTokenResult">
            <summary>
            Gets and sets the GetFederationTokenResult property.
            Contains the result of a successful call to the GetFederationToken action, including temporary AWS credentials that can be used to make AWS
            requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenRequest">
            <summary>
            Container for the parameters to the GetSessionToken operation.
            <para> Returns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access
            key, and a security token. Typically, you use <c>GetSessionToken</c> if you want use MFA to protect programmatic calls to specific AWS APIs
            like Amazon EC2 <c>StopInstances</c> . MFA-enabled IAM users would need to call <c>GetSessionToken</c> and submit an MFA code that is
            associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make
            programmatic calls to APIs that require MFA authentication. </para> <para> The <c>GetSessionToken</c> action must be called by using the
            long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration
            that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials
            have a maximum duration of 3600 seconds (1 hour). </para> <para>The permissions associated with the temporary security credentials returned
            by <c>GetSessionToken</c> are based on the permissions associated with account or IAM user whose credentials are used to call the action. If
            <c>GetSessionToken</c> is called using root account credentials, the temporary credentials have root account permissions. Similarly, if
            <c>GetSessionToken</c> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.
            </para> <para>For more information about using <c>GetSessionToken</c> to create temporary credentials, go to <a
            href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html" > Creating Temporary Credentials to Enable Access for IAM
            Users </a> in <i>Using IAM</i> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.DurationSeconds">
            <summary>
            The duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15
            minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions for AWS account owners are restricted to a
            maximum of 3600 seconds (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>900 - 129600</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.SerialNumber">
            <summary>
            The identification number of the MFA device that is associated with the IAM user who is making the <c>GetSessionToken</c> call. Specify this
            value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as
            <c>GAHT12345678</c>) or an Amazon Resource Name (ARN) for a virtual device (such as <c>arn:aws:iam::123456789012:mfa/user</c>). You can find
            the device for an IAM user by going to the AWS Management Console and viewing the user's security credentials.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>9 - 256</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\w+=/:,.@-]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.TokenCode">
            <summary>
            The value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If
            MFA authentication is required, and the user does not provide a code when requesting a set of temporary security credentials, the user will
            receive an "access denied" response when requesting resources that require MFA authentication.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Length</term>
                    <description>6 - 6</description>
                </item>
                <item>
                    <term>Pattern</term>
                    <description>[\d]*</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenResponse">
            <summary>
            Returns information about the  GetSessionToken response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenResult">
            <summary>
            <para> Contains the result of a successful call to the GetSessionToken action, including temporary AWS credentials that can be used to make
            AWS requests. </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenResult.Credentials">
            <summary>
            The session credentials for API authentication.
             
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenResponse.GetSessionTokenResult">
            <summary>
            Gets and sets the GetSessionTokenResult property.
            Contains the result of a successful call to the GetSessionToken action, including temporary AWS credentials that can be used to make AWS
            requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.IDPCommunicationErrorException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.IDPCommunicationErrorException.#ctor(System.String)">
            <summary>
            Constructs a new IDPCommunicationErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.IDPRejectedClaimException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.IDPRejectedClaimException.#ctor(System.String)">
            <summary>
            Constructs a new IDPRejectedClaimException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAuthorizationMessageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.InvalidIdentityTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidIdentityTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException">
            <summary>
             AmazonSecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.PackedPolicyTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new PackedPolicyTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumedRoleUserUnmarshaller">
            <summary>
              AssumedRoleUser Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleRequestMarshaller">
            <summary>
            Assume Role Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AssumeRole operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLRequestMarshaller">
            <summary>
            Assume Role With S A M L Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AssumeRoleWithSAML operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityRequestMarshaller">
            <summary>
            Assume Role With Web Identity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AssumeRoleWithWebIdentity operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.CredentialsUnmarshaller">
            <summary>
              Credentials Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageRequestMarshaller">
            <summary>
            Decode Authorization Message Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DecodeAuthorizationMessage operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.FederatedUserUnmarshaller">
            <summary>
              FederatedUser Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenRequestMarshaller">
            <summary>
            Get Federation Token Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetFederationToken operation
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenRequestMarshaller">
            <summary>
            Get Session Token Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetSessionToken operation
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient">
            <summary>
            Implementation for accessing AmazonIdentityManagementService.
            
            AWS Identity and Access Management <para>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user
            permissions under your AWS account. This guide provides descriptions of the IAM API. For general information about IAM, see <a href="http://aws.amazon.com/iam/">AWS Identity and Access Management (IAM)</a> . For the user guide for IAM, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/">Using IAM</a> . </para> <para><b>NOTE:</b> AWS provides SDKs that consist of
            libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a
            convenient way to create programmatic access to IAM and AWS. For example, the SDKs take care of tasks such as cryptographically signing
            requests (see below), managing errors, and retrying requests automatically. For information about the AWS SDKs, including how to download
            and install them, see the Tools for Amazon Web Services page. </para> <para> Using the IAM Query API, you make direct calls to the IAM web
            service. IAM supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for
            others. However, GET requests are subject to the limitation size of a URL; although this limit is browser dependent, a typical limit is 2048
            bytes. Therefore, for operations that require larger sizes, you must use a POST request. </para> <para> <b>Signing Requests</b> Requests
            must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your AWS account access key ID and
            secret access key for everyday work with IAM. You can use the access key ID and secret access key for an IAM user or you can use the AWS
            Security Token Service to generate temporary security credentials and use those to sign requests.</para> <para>To sign requests, we
            recommend that you use <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a> . If you
            have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some
            operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </para>
            <para> <b>Additional Resources</b> For more information, see the following:</para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a> . This topic
            provides general information about the types of credentials used for accessing AWS.</li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM Best Practices</a> . This topic presents a list
            of suggestions for using the IAM service to help secure your AWS resources.</li>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/">AWS Security Token Service</a> . This guide describes how to create and use
            temporary security credentials.</li>
            <li> <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> . This set of
            topics walk you through the process of signing a request using an access key ID and secret access key.</li>
            
            </ul>
            </summary>
        </member>
        <member name="T:Amazon.IdentityManagement.IAmazonIdentityManagementService">
            <summary>
            Interface for accessing AmazonIdentityManagementService.
            
            AWS Identity and Access Management <para>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user
            permissions under your AWS account. This guide provides descriptions of the IAM API. For general information about IAM, see <a href="http://aws.amazon.com/iam/">AWS Identity and Access Management (IAM)</a> . For the user guide for IAM, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/">Using IAM</a> . </para> <para><b>NOTE:</b> AWS provides SDKs that consist of
            libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a
            convenient way to create programmatic access to IAM and AWS. For example, the SDKs take care of tasks such as cryptographically signing
            requests (see below), managing errors, and retrying requests automatically. For information about the AWS SDKs, including how to download
            and install them, see the Tools for Amazon Web Services page. </para> <para> Using the IAM Query API, you make direct calls to the IAM web
            service. IAM supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for
            others. However, GET requests are subject to the limitation size of a URL; although this limit is browser dependent, a typical limit is 2048
            bytes. Therefore, for operations that require larger sizes, you must use a POST request. </para> <para> <b>Signing Requests</b> Requests
            must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your AWS account access key ID and
            secret access key for everyday work with IAM. You can use the access key ID and secret access key for an IAM user or you can use the AWS
            Security Token Service to generate temporary security credentials and use those to sign requests.</para> <para>To sign requests, we
            recommend that you use <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a> . If you
            have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some
            operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </para>
            <para> <b>Additional Resources</b> For more information, see the following:</para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a> . This topic
            provides general information about the types of credentials used for accessing AWS.</li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM Best Practices</a> . This topic presents a list
            of suggestions for using the IAM service to help secure your AWS resources.</li>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/">AWS Security Token Service</a> . This guide describes how to create and use
            temporary security credentials.</li>
            <li> <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> . This set of
            topics walk you through the process of signing a request using an access key ID and secret access key.</li>
            
            </ul>
            </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddRoleToInstanceProfile(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest)">
            <summary>
            <para>Adds the specified role to the specified instance profile. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> . For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddRoleToInstanceProfile service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddRoleToInstanceProfileAsync(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddRoleToInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddRoleToInstanceProfile(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddRoleToInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddUserToGroup(Amazon.IdentityManagement.Model.AddUserToGroupRequest)">
            <summary>
            <para>Adds the specified user to the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddUserToGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddUserToGroupAsync(Amazon.IdentityManagement.Model.AddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddUserToGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddUserToGroup(Amazon.IdentityManagement.Model.AddUserToGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddUserToGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ChangePassword(Amazon.IdentityManagement.Model.ChangePasswordRequest)">
            <summary>
            <para>Changes the password of the IAM user calling <c>ChangePassword</c> . The root account password is not affected by this action. For
            information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
            Passwords</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidUserTypeException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ChangePasswordAsync(Amazon.IdentityManagement.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangePassword operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ChangePassword(Amazon.IdentityManagement.Model.ChangePasswordRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccessKey(Amazon.IdentityManagement.Model.CreateAccessKeyRequest)">
            <summary>
            <para>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is
            <c>Active</c> .</para> <para>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID
            signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even
            if the AWS account has no associated users.</para> <para>For information about limits on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>To ensure the security of your AWS account, the secret access key is
            accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again.
            If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateAccessKey service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccessKeyAsync(Amazon.IdentityManagement.Model.CreateAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccessKey(Amazon.IdentityManagement.Model.CreateAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccessKey">
            <summary>
            <para>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is
            <c>Active</c> .</para> <para>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID
            signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even
            if the AWS account has no associated users.</para> <para>For information about limits on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>To ensure the security of your AWS account, the secret access key is
            accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again.
            If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</para>
            </summary>
            
            
            <returns>The response from the CreateAccessKey service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccountAlias(Amazon.IdentityManagement.Model.CreateAccountAliasRequest)">
            <summary>
            <para>This action creates an alias for your AWS account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccountAlias service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccountAliasAsync(Amazon.IdentityManagement.Model.CreateAccountAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAccountAlias operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccountAlias(Amazon.IdentityManagement.Model.CreateAccountAliasRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccountAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateGroup(Amazon.IdentityManagement.Model.CreateGroupRequest)">
            <summary>
            <para>Creates a new group.</para> <para>For information about the number of groups you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateGroup service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateGroupAsync(Amazon.IdentityManagement.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateGroup(Amazon.IdentityManagement.Model.CreateGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateInstanceProfile(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest)">
            <summary>
            <para>Creates a new instance profile. For information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para> <para>For
            information about the number of instance profiles you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateInstanceProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateInstanceProfileAsync(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateInstanceProfile(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateLoginProfile(Amazon.IdentityManagement.Model.CreateLoginProfileRequest)">
            <summary>
            <para>Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For
            more information about managing passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_ManagingLogins.html">Managing Passwords</a> in <i>Using IAM</i>
            .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateLoginProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.PasswordPolicyViolationException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateLoginProfileAsync(Amazon.IdentityManagement.Model.CreateLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateLoginProfile(Amazon.IdentityManagement.Model.CreateLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateRole(Amazon.IdentityManagement.Model.CreateRoleRequest)">
            <summary>
            <para>Creates a new role for your AWS account. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .
            For information about limitations on role names and the number of roles you can create, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para>The policy grants permission to an EC2 instance to assume the role. The policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .
            Currently, only EC2 instances can assume roles.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRole service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateRoleAsync(Amazon.IdentityManagement.Model.CreateRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateRole(Amazon.IdentityManagement.Model.CreateRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateSAMLProvider(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest)">
            <summary>
            <para>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</para> <para>The SAML provider that you create
            with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity
            provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API
            access to AWS. </para> <para>When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that
            includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that
            are received from the IdP. You must generate the metadata document using the identity management software that is used as your
            organization's IdP. </para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para> <para>For more information, see <a href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html">Giving Console Access Using SAML</a> and <a href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Credentials</i> guide. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateSAMLProviderAsync(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateSAMLProvider(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateUser(Amazon.IdentityManagement.Model.CreateUserRequest)">
            <summary>
            <para>Creates a new user for your AWS account.</para> <para>For information about limitations on the number of users you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateUserAsync(Amazon.IdentityManagement.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateUser(Amazon.IdentityManagement.Model.CreateUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateVirtualMFADevice(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest)">
            <summary>
            <para>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html">EnableMFADevice</a> to attach the MFA device to an IAM
            user. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_VirtualMFA.html">Using a Virtual MFA Device</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>For information about limits on the number of MFA devices you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on Entities</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>The seed information contained in the QR code and the Base32 string
            should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual
            device, you should ensure that the information is destroyed following secure procedures.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVirtualMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateVirtualMFADevice service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateVirtualMFADeviceAsync(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVirtualMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateVirtualMFADevice(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVirtualMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeactivateMFADevice(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest)">
            <summary>
            <para>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeactivateMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeactivateMFADeviceAsync(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeactivateMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeactivateMFADevice(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeactivateMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccessKey(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest)">
            <summary>
            <para>Deletes the access key associated with the specified user.</para> <para>If you do not specify a user name, IAM determines the user
            name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can
            use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccessKeyAsync(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccessKey(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountAlias(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest)">
            <summary>
            <para>Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountAlias service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountAliasAsync(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccountAlias operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountAlias(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountPasswordPolicy(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest)">
            <summary>
            <para>Deletes the password policy for the AWS account.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPasswordPolicy service
            method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountPasswordPolicy(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountPasswordPolicy">
            <summary>
            <para>Deletes the password policy for the AWS account.</para>
            </summary>
            
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroup(Amazon.IdentityManagement.Model.DeleteGroupRequest)">
            <summary>
            <para>Deletes the specified group. The group must not contain any users or have any attached policies.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroupAsync(Amazon.IdentityManagement.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroup(Amazon.IdentityManagement.Model.DeleteGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroupPolicy(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest)">
            <summary>
            <para>Deletes the specified policy that is associated with the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroupPolicyAsync(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroupPolicy(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteInstanceProfile(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest)">
            <summary>
            <para>Deletes the specified instance profile. The instance profile must not have an associated role.</para> <para><b>IMPORTANT:</b>Make sure
            you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that
            is associated with a running instance will break any applications running on the instance.</para> <para>For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteInstanceProfileAsync(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteInstanceProfile(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteLoginProfile(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest)">
            <summary>
            <para>Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management
            Console.</para> <para><b>IMPORTANT:</b>Deleting a user's password does not prevent a user from accessing IAM through the command line
            interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about
            making keys inactive or deleting them, see UpdateAccessKey and DeleteAccessKey. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteLoginProfileAsync(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteLoginProfile(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRole(Amazon.IdentityManagement.Model.DeleteRoleRequest)">
            <summary>
            <para>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para><b>IMPORTANT:</b>Make
            sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is
            associated with a running instance will break any applications running on the instance.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRole service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRoleAsync(Amazon.IdentityManagement.Model.DeleteRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRole(Amazon.IdentityManagement.Model.DeleteRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRolePolicy(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest)">
            <summary>
            <para>Deletes the specified policy associated with the specified role.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRolePolicyAsync(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRolePolicy(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSAMLProvider(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest)">
            <summary>
            <para>Deletes a SAML provider.</para> <para>Deleting the provider does not update any roles that reference the SAML provider as a principal
            in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. </para>
            <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSAMLProviderAsync(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSAMLProvider(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteServerCertificate(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest)">
            <summary>
            <para>Deletes the specified server certificate.</para> <para><b>IMPORTANT:</b>If you are using a server certificate with Elastic Load
            Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of
            bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend
            that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more
            information, go to DeleteLoadBalancerListeners in the Elastic Load Balancing API Reference.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteServerCertificateAsync(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteServerCertificate(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSigningCertificate(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest)">
            <summary>
            <para>Deletes the specified signing certificate associated with the specified user.</para> <para>If you do not specify a user name, IAM
            determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the
            AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSigningCertificateAsync(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSigningCertificate(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUser(Amazon.IdentityManagement.Model.DeleteUserRequest)">
            <summary>
            <para>Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached
            policies.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUserAsync(Amazon.IdentityManagement.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUser(Amazon.IdentityManagement.Model.DeleteUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUserPolicy(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest)">
            <summary>
            <para>Deletes the specified policy associated with the specified user.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUserPolicyAsync(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUserPolicy(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteVirtualMFADevice(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest)">
            <summary>
            <para>Deletes a virtual MFA device.</para> <para><b>NOTE:</b>You must deactivate a user's virtual MFA device before you can delete it. For
            information about deactivating MFA devices, see DeactivateMFADevice.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVirtualMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteVirtualMFADeviceAsync(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVirtualMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteVirtualMFADevice(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVirtualMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.EnableMFADevice(Amazon.IdentityManagement.Model.EnableMFADeviceRequest)">
            <summary>
            <para>Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every
            subsequent login by the user name associated with the device.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.EnableMFADeviceAsync(Amazon.IdentityManagement.Model.EnableMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.EnableMFADevice(Amazon.IdentityManagement.Model.EnableMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountPasswordPolicy(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest)">
            <summary>
            <para>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountPasswordPolicy service method
            on AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetAccountPasswordPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountPasswordPolicy(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountPasswordPolicy">
            <summary>
            <para>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            
            <returns>The response from the GetAccountPasswordPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountSummary(Amazon.IdentityManagement.Model.GetAccountSummaryRequest)">
            <summary>
            <para>Retrieves account level information about account entity usage and IAM quotas.</para> <para>For information about limitations on IAM
            entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM
            Entities</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSummary service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetAccountSummary service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountSummaryAsync(Amazon.IdentityManagement.Model.GetAccountSummaryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAccountSummary operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountSummary(Amazon.IdentityManagement.Model.GetAccountSummaryRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSummary operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountSummary">
            <summary>
            <para>Retrieves account level information about account entity usage and IAM quotas.</para> <para>For information about limitations on IAM
            entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM
            Entities</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            
            <returns>The response from the GetAccountSummary service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroup(Amazon.IdentityManagement.Model.GetGroupRequest)">
            <summary>
            <para>Returns a list of users that are in the specified group. You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetGroup service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroupAsync(Amazon.IdentityManagement.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroup(Amazon.IdentityManagement.Model.GetGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroupPolicy(Amazon.IdentityManagement.Model.GetGroupPolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified group. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetGroupPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroupPolicyAsync(Amazon.IdentityManagement.Model.GetGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroupPolicy(Amazon.IdentityManagement.Model.GetGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetInstanceProfile(Amazon.IdentityManagement.Model.GetInstanceProfileRequest)">
            <summary>
            <para>Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> . For more information about ARNs, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs">ARNs</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetInstanceProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetInstanceProfileAsync(Amazon.IdentityManagement.Model.GetInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetInstanceProfile(Amazon.IdentityManagement.Model.GetInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetLoginProfile(Amazon.IdentityManagement.Model.GetLoginProfileRequest)">
            <summary>
            <para>Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action
            returns a 404 ( <c>NoSuchEntity</c> ) error. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetLoginProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetLoginProfileAsync(Amazon.IdentityManagement.Model.GetLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetLoginProfile(Amazon.IdentityManagement.Model.GetLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRole(Amazon.IdentityManagement.Model.GetRoleRequest)">
            <summary>
            <para>Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to EC2 to
            assume the role. For more information about ARNs, go to <a href="&#xA;            http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs">ARNs</a> . For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>The returned policy
            is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRole service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRoleAsync(Amazon.IdentityManagement.Model.GetRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRole(Amazon.IdentityManagement.Model.GetRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRolePolicy(Amazon.IdentityManagement.Model.GetRolePolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified role. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>The returned policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetRolePolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRolePolicyAsync(Amazon.IdentityManagement.Model.GetRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRolePolicy(Amazon.IdentityManagement.Model.GetRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetSAMLProvider(Amazon.IdentityManagement.Model.GetSAMLProviderRequest)">
            <summary>
            <para>Returns the SAML provider metadocument that was uploaded when the provider was created or updated.</para> <para><b>NOTE:</b>This
            operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetSAMLProviderAsync(Amazon.IdentityManagement.Model.GetSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetSAMLProvider(Amazon.IdentityManagement.Model.GetSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetServerCertificate(Amazon.IdentityManagement.Model.GetServerCertificateRequest)">
            <summary>
            <para>Retrieves information about the specified server certificate.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetServerCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetServerCertificateAsync(Amazon.IdentityManagement.Model.GetServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetServerCertificate(Amazon.IdentityManagement.Model.GetServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUser(Amazon.IdentityManagement.Model.GetUserRequest)">
            <summary>
            <para>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</para> <para>If you do not specify a
            user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUserAsync(Amazon.IdentityManagement.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUser(Amazon.IdentityManagement.Model.GetUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUser">
            <summary>
            <para>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</para> <para>If you do not specify a
            user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</para>
            </summary>
            
            
            <returns>The response from the GetUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUserPolicy(Amazon.IdentityManagement.Model.GetUserPolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified user. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetUserPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUserPolicyAsync(Amazon.IdentityManagement.Model.GetUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUserPolicy(Amazon.IdentityManagement.Model.GetUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccessKeys(Amazon.IdentityManagement.Model.ListAccessKeysRequest)">
            <summary>
            <para>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of keys, you can still paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based on the AWS
            access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root
            credentials even if the AWS account has no associated users.</para> <para><b>NOTE:</b>To ensure the security of your AWS account, the secret
            access key is accessible only during key and user creation.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccessKeys service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListAccessKeys service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccessKeysAsync(Amazon.IdentityManagement.Model.ListAccessKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAccessKeys operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccessKeys(Amazon.IdentityManagement.Model.ListAccessKeysRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccessKeys operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccessKeys">
            <summary>
            <para>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of keys, you can still paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based on the AWS
            access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root
            credentials even if the AWS account has no associated users.</para> <para><b>NOTE:</b>To ensure the security of your AWS account, the secret
            access key is accessible only during key and user creation.</para>
            </summary>
            
            
            <returns>The response from the ListAccessKeys service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccountAliases(Amazon.IdentityManagement.Model.ListAccountAliasesRequest)">
            <summary>
            <para>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccountAliases service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListAccountAliases service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccountAliasesAsync(Amazon.IdentityManagement.Model.ListAccountAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAccountAliases operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccountAliases(Amazon.IdentityManagement.Model.ListAccountAliasesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccountAliases operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccountAliases">
            <summary>
            <para>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            
            <returns>The response from the ListAccountAliases service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupPolicies(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified group. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupPolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroupPolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupPoliciesAsync(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroupPolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupPolicies(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroups(Amazon.IdentityManagement.Model.ListGroupsRequest)">
            <summary>
            <para>Lists the groups that have the specified path prefix.</para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroups service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupsAsync(Amazon.IdentityManagement.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroups operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroups(Amazon.IdentityManagement.Model.ListGroupsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroups">
            <summary>
            <para>Lists the groups that have the specified path prefix.</para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListGroups service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupsForUser(Amazon.IdentityManagement.Model.ListGroupsForUserRequest)">
            <summary>
            <para>Lists the groups the specified user belongs to.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupsForUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroupsForUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupsForUserAsync(Amazon.IdentityManagement.Model.ListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroupsForUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupsForUser(Amazon.IdentityManagement.Model.ListGroupsForUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupsForUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfiles(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest)">
            <summary>
            <para>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfiles service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListInstanceProfiles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfilesAsync(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListInstanceProfiles operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfiles(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfiles operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfiles">
            <summary>
            <para>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListInstanceProfiles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfilesForRole(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest)">
            <summary>
            <para>Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfilesForRole service
            method on AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListInstanceProfilesForRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfilesForRoleAsync(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListInstanceProfilesForRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfilesForRole(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfilesForRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListMFADevices(Amazon.IdentityManagement.Model.ListMFADevicesRequest)">
            <summary>
            <para>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified
            user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the
            request.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMFADevices service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListMFADevicesAsync(Amazon.IdentityManagement.Model.ListMFADevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMFADevices operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListMFADevices(Amazon.IdentityManagement.Model.ListMFADevicesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMFADevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListMFADevices">
            <summary>
            <para>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified
            user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the
            request.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRolePolicies(Amazon.IdentityManagement.Model.ListRolePoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified role. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRolePolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListRolePolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRolePoliciesAsync(Amazon.IdentityManagement.Model.ListRolePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRolePolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRolePolicies(Amazon.IdentityManagement.Model.ListRolePoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRolePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRoles(Amazon.IdentityManagement.Model.ListRolesRequest)">
            <summary>
            <para>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about
            roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>The returned policy is URL-encoded according to
            RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRoles service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListRoles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRolesAsync(Amazon.IdentityManagement.Model.ListRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRoles operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRoles(Amazon.IdentityManagement.Model.ListRolesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRoles operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRoles">
            <summary>
            <para>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about
            roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>The returned policy is URL-encoded according to
            RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            
            <returns>The response from the ListRoles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSAMLProviders(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest)">
            <summary>
            <para>Lists the SAML providers in the account.</para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSAMLProviders service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListSAMLProviders service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSAMLProvidersAsync(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSAMLProviders operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSAMLProviders(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSAMLProviders operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSAMLProviders">
            <summary>
            <para>Lists the SAML providers in the account.</para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            
            <returns>The response from the ListSAMLProviders service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListServerCertificates(Amazon.IdentityManagement.Model.ListServerCertificatesRequest)">
            <summary>
            <para>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</para> <para>You
            can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServerCertificates service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListServerCertificates service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListServerCertificatesAsync(Amazon.IdentityManagement.Model.ListServerCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListServerCertificates operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListServerCertificates(Amazon.IdentityManagement.Model.ListServerCertificatesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServerCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListServerCertificates">
            <summary>
            <para>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</para> <para>You
            can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListServerCertificates service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSigningCertificates(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest)">
            <summary>
            <para>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of signing certificates, you can still paginate the results using the
            <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the user name is determined
            implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this
            API can be used to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSigningCertificates service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListSigningCertificates service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSigningCertificatesAsync(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSigningCertificates operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSigningCertificates(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSigningCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSigningCertificates">
            <summary>
            <para>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of signing certificates, you can still paginate the results using the
            <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the user name is determined
            implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this
            API can be used to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            
            <returns>The response from the ListSigningCertificates service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUserPolicies(Amazon.IdentityManagement.Model.ListUserPoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified user. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListUserPolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUserPoliciesAsync(Amazon.IdentityManagement.Model.ListUserPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUserPolicies(Amazon.IdentityManagement.Model.ListUserPoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUsers(Amazon.IdentityManagement.Model.ListUsersRequest)">
            <summary>
            <para>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListUsers service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUsersAsync(Amazon.IdentityManagement.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsers operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUsers(Amazon.IdentityManagement.Model.ListUsersRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUsers">
            <summary>
            <para>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListUsers service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListVirtualMFADevices(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest)">
            <summary>
            <para> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action
            returns a list of all virtual MFA devices. Assignment status can be <c>Assigned</c> ,
            <c>Unassigned</c> , or <c>Any</c> . </para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVirtualMFADevices service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListVirtualMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListVirtualMFADevicesAsync(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVirtualMFADevices operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListVirtualMFADevices(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVirtualMFADevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListVirtualMFADevices">
            <summary>
            <para> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action
            returns a list of all virtual MFA devices. Assignment status can be <c>Assigned</c> ,
            <c>Unassigned</c> , or <c>Any</c> . </para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListVirtualMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutGroupPolicy(Amazon.IdentityManagement.Model.PutGroupPolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified group. For information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a group, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutGroupPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests
            in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutGroupPolicyAsync(Amazon.IdentityManagement.Model.PutGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutGroupPolicy(Amazon.IdentityManagement.Model.PutGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutRolePolicy(Amazon.IdentityManagement.Model.PutRolePolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified role. For information about policies, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the policies you can associate with a role, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutRolePolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutRolePolicyAsync(Amazon.IdentityManagement.Model.PutRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutRolePolicy(Amazon.IdentityManagement.Model.PutRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutUserPolicy(Amazon.IdentityManagement.Model.PutUserPolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified user. For information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a user, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutUserPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutUserPolicyAsync(Amazon.IdentityManagement.Model.PutUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutUserPolicy(Amazon.IdentityManagement.Model.PutUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveRoleFromInstanceProfile(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest)">
            <summary>
            <para>Removes the specified role from the specified instance profile.</para> <para><b>IMPORTANT:</b>Make sure you do not have any Amazon EC2
            instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is
            associated with a running instance will break any applications running on the instance.</para> <para>For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .
            For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromInstanceProfile
            service method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveRoleFromInstanceProfileAsync(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveRoleFromInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveRoleFromInstanceProfile(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveUserFromGroup(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest)">
            <summary>
            <para>Removes the specified user from the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveUserFromGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveUserFromGroupAsync(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveUserFromGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveUserFromGroup(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveUserFromGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ResyncMFADevice(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest)">
            <summary>
            <para>Synchronizes the specified MFA device with AWS servers.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResyncMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ResyncMFADeviceAsync(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResyncMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ResyncMFADevice(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResyncMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccessKey(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest)">
            <summary>
            <para>Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key
            as part of a key rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based
            on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to
            manage root credentials even if the AWS account has no associated users.</para> <para>For information about rotating keys, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html">Managing Keys and Certificates</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccessKeyAsync(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccessKey(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccountPasswordPolicy(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest)">
            <summary>
            <para>Updates the password policy settings for the account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccountPasswordPolicy service
            method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccountPasswordPolicy(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccountPasswordPolicy">
            <summary>
            <para>Updates the password policy settings for the account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAssumeRolePolicy(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest)">
            <summary>
            <para>Updates the policy that grants an entity permission to assume a role. Currently, only an Amazon EC2 instance can assume a role. For
            more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>
            .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAssumeRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAssumeRolePolicyAsync(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAssumeRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAssumeRolePolicy(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAssumeRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateGroup(Amazon.IdentityManagement.Model.UpdateGroupRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified group.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a group's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a group name the requester must have appropriate permissions on both the source object and the target object.
            For example, to change Managers to MGRs, the entity making the request must have permission on Managers and MGRs, or must have permission on
            all (*). For more information about permissions, see Permissions and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateGroupAsync(Amazon.IdentityManagement.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateGroup(Amazon.IdentityManagement.Model.UpdateGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateLoginProfile(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest)">
            <summary>
            <para>Changes the password for the specified user.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.PasswordPolicyViolationException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateLoginProfileAsync(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateLoginProfile(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSAMLProvider(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest)">
            <summary>
            <para>Updates the metadata document for an existing SAML provider.</para> <para><b>NOTE:</b>This operation requires Signature Version
            4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the UpdateSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSAMLProviderAsync(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSAMLProvider(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateServerCertificate(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified server certificate.</para> <para><b>IMPORTANT:</b> You should understand the
            implications of changing a server certificate's path or name. For more information, see Managing Server Certificates in Using AWS Identity
            and Access Management. </para> <para><b>NOTE:</b>To change a server certificate name the requester must have appropriate permissions on both
            the source object and the target object. For example, to change the name from ProductionCert to ProdCert, the entity making the request must
            have permission on ProductionCert and ProdCert, or must have permission on all (*). For more information about permissions, see Permissions
            and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateServerCertificateAsync(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateServerCertificate(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSigningCertificate(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest)">
            <summary>
            <para>Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a
            user's signing certificate as part of a certificate rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the
            UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under
            the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</para> <para>For
            information about rotating certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html">Managing Keys and Certificates</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSigningCertificateAsync(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSigningCertificate(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateUser(Amazon.IdentityManagement.Model.UpdateUserRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified user.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a user's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a user name the requester must have appropriate permissions on both the source object and the target object. For
            example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*).
            For more information about permissions, see Permissions and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateUserAsync(Amazon.IdentityManagement.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateUser(Amazon.IdentityManagement.Model.UpdateUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadServerCertificate(Amazon.IdentityManagement.Model.UploadServerCertificateRequest)">
            <summary>
            <para>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private
            key, and an optional certificate chain, which should all be PEM-encoded.</para> <para>For information about the number of server
            certificates you can upload, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because the body of the
            public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling
            UploadServerCertificate. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the UploadServerCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.KeyPairMismatchException" />
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadServerCertificateAsync(Amazon.IdentityManagement.Model.UploadServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadServerCertificate(Amazon.IdentityManagement.Model.UploadServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadSigningCertificate(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest)">
            <summary>
            <para>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to
            validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <c>Active</c>
            .</para> <para>If the <c>UserName</c> field is not specified, the user name is determined implicitly based on the AWS access key ID used to
            sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if
            the AWS account has no associated users.</para> <para><b>NOTE:</b>Because the body of a X.509 certificate can be large, you should use POST
            rather than GET when calling UploadSigningCertificate. For information about setting up signatures and authorization through the API, go to
            Signing AWS API Requests in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query
            Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <returns>The response from the UploadSigningCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.DuplicateCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadSigningCertificateAsync(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadSigningCertificate(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor">
             <summary>
             Constructs AmazonIdentityManagementServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonIdentityManagementServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig)">
             <summary>
             Constructs AmazonIdentityManagementServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonIdentityManagementService Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Credentials and an
            AmazonIdentityManagementServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonIdentityManagementServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String,Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIdentityManagementServiceClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonIdentityManagementServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.#ctor(System.String,System.String,System.String,Amazon.IdentityManagement.AmazonIdentityManagementServiceConfig)">
            <summary>
            Constructs AmazonIdentityManagementServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIdentityManagementServiceClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonIdentityManagementServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.AddRoleToInstanceProfile(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest)">
            <summary>
            <para>Adds the specified role to the specified instance profile. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> . For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddRoleToInstanceProfile service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.AddRoleToInstanceProfileAsync(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddRoleToInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddRoleToInstanceProfile(Amazon.IdentityManagement.Model.AddRoleToInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddRoleToInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.AddUserToGroup(Amazon.IdentityManagement.Model.AddUserToGroupRequest)">
            <summary>
            <para>Adds the specified user to the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddUserToGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.AddUserToGroupAsync(Amazon.IdentityManagement.Model.AddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddUserToGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.AddUserToGroup(Amazon.IdentityManagement.Model.AddUserToGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddUserToGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ChangePassword(Amazon.IdentityManagement.Model.ChangePasswordRequest)">
            <summary>
            <para>Changes the password of the IAM user calling <c>ChangePassword</c> . The root account password is not affected by this action. For
            information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
            Passwords</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidUserTypeException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ChangePasswordAsync(Amazon.IdentityManagement.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangePassword operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ChangePassword(Amazon.IdentityManagement.Model.ChangePasswordRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangePassword operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateAccessKey(Amazon.IdentityManagement.Model.CreateAccessKeyRequest)">
            <summary>
            <para>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is
            <c>Active</c> .</para> <para>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID
            signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even
            if the AWS account has no associated users.</para> <para>For information about limits on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>To ensure the security of your AWS account, the secret access key is
            accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again.
            If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateAccessKey service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateAccessKeyAsync(Amazon.IdentityManagement.Model.CreateAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccessKey(Amazon.IdentityManagement.Model.CreateAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateAccessKey">
            <summary>
            <para>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is
            <c>Active</c> .</para> <para>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID
            signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even
            if the AWS account has no associated users.</para> <para>For information about limits on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>To ensure the security of your AWS account, the secret access key is
            accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again.
            If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</para>
            </summary>
            
            
            <returns>The response from the CreateAccessKey service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateAccountAlias(Amazon.IdentityManagement.Model.CreateAccountAliasRequest)">
            <summary>
            <para>This action creates an alias for your AWS account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccountAlias service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateAccountAliasAsync(Amazon.IdentityManagement.Model.CreateAccountAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAccountAlias operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateAccountAlias(Amazon.IdentityManagement.Model.CreateAccountAliasRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAccountAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateGroup(Amazon.IdentityManagement.Model.CreateGroupRequest)">
            <summary>
            <para>Creates a new group.</para> <para>For information about the number of groups you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateGroup service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateGroupAsync(Amazon.IdentityManagement.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateGroup(Amazon.IdentityManagement.Model.CreateGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateInstanceProfile(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest)">
            <summary>
            <para>Creates a new instance profile. For information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para> <para>For
            information about the number of instance profiles you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateInstanceProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateInstanceProfileAsync(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateInstanceProfile(Amazon.IdentityManagement.Model.CreateInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateLoginProfile(Amazon.IdentityManagement.Model.CreateLoginProfileRequest)">
            <summary>
            <para>Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For
            more information about managing passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_ManagingLogins.html">Managing Passwords</a> in <i>Using IAM</i>
            .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateLoginProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.PasswordPolicyViolationException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateLoginProfileAsync(Amazon.IdentityManagement.Model.CreateLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateLoginProfile(Amazon.IdentityManagement.Model.CreateLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateRole(Amazon.IdentityManagement.Model.CreateRoleRequest)">
            <summary>
            <para>Creates a new role for your AWS account. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .
            For information about limitations on role names and the number of roles you can create, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para>The policy grants permission to an EC2 instance to assume the role. The policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .
            Currently, only EC2 instances can assume roles.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRole service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateRoleAsync(Amazon.IdentityManagement.Model.CreateRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateRole(Amazon.IdentityManagement.Model.CreateRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateSAMLProvider(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest)">
            <summary>
            <para>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</para> <para>The SAML provider that you create
            with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity
            provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API
            access to AWS. </para> <para>When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that
            includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that
            are received from the IdP. You must generate the metadata document using the identity management software that is used as your
            organization's IdP. </para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para> <para>For more information, see <a href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html">Giving Console Access Using SAML</a> and <a href="http://aws-docs-alpha.integ.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Credentials</i> guide. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateSAMLProviderAsync(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateSAMLProvider(Amazon.IdentityManagement.Model.CreateSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateUser(Amazon.IdentityManagement.Model.CreateUserRequest)">
            <summary>
            <para>Creates a new user for your AWS account.</para> <para>For information about limitations on the number of users you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateUserAsync(Amazon.IdentityManagement.Model.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateUser(Amazon.IdentityManagement.Model.CreateUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateVirtualMFADevice(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest)">
            <summary>
            <para>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html">EnableMFADevice</a> to attach the MFA device to an IAM
            user. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_VirtualMFA.html">Using a Virtual MFA Device</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>For information about limits on the number of MFA devices you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on Entities</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para><b>IMPORTANT:</b>The seed information contained in the QR code and the Base32 string
            should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual
            device, you should ensure that the information is destroyed following secure procedures.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVirtualMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the CreateVirtualMFADevice service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.CreateVirtualMFADeviceAsync(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVirtualMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.CreateVirtualMFADevice(Amazon.IdentityManagement.Model.CreateVirtualMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVirtualMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeactivateMFADevice(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest)">
            <summary>
            <para>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeactivateMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeactivateMFADeviceAsync(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeactivateMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeactivateMFADevice(Amazon.IdentityManagement.Model.DeactivateMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeactivateMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccessKey(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest)">
            <summary>
            <para>Deletes the access key associated with the specified user.</para> <para>If you do not specify a user name, IAM determines the user
            name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can
            use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccessKeyAsync(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccessKey(Amazon.IdentityManagement.Model.DeleteAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccountAlias(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest)">
            <summary>
            <para>Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountAlias service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccountAliasAsync(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccountAlias operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountAlias(Amazon.IdentityManagement.Model.DeleteAccountAliasRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccountPasswordPolicy(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest)">
            <summary>
            <para>Deletes the password policy for the AWS account.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPasswordPolicy service
            method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteAccountPasswordPolicy(Amazon.IdentityManagement.Model.DeleteAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteAccountPasswordPolicy">
            <summary>
            <para>Deletes the password policy for the AWS account.</para>
            </summary>
            
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteGroup(Amazon.IdentityManagement.Model.DeleteGroupRequest)">
            <summary>
            <para>Deletes the specified group. The group must not contain any users or have any attached policies.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteGroupAsync(Amazon.IdentityManagement.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroup(Amazon.IdentityManagement.Model.DeleteGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteGroupPolicy(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest)">
            <summary>
            <para>Deletes the specified policy that is associated with the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteGroupPolicyAsync(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteGroupPolicy(Amazon.IdentityManagement.Model.DeleteGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteInstanceProfile(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest)">
            <summary>
            <para>Deletes the specified instance profile. The instance profile must not have an associated role.</para> <para><b>IMPORTANT:</b>Make sure
            you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that
            is associated with a running instance will break any applications running on the instance.</para> <para>For more information about instance
            profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteInstanceProfileAsync(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteInstanceProfile(Amazon.IdentityManagement.Model.DeleteInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteLoginProfile(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest)">
            <summary>
            <para>Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management
            Console.</para> <para><b>IMPORTANT:</b>Deleting a user's password does not prevent a user from accessing IAM through the command line
            interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about
            making keys inactive or deleting them, see UpdateAccessKey and DeleteAccessKey. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteLoginProfileAsync(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteLoginProfile(Amazon.IdentityManagement.Model.DeleteLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteRole(Amazon.IdentityManagement.Model.DeleteRoleRequest)">
            <summary>
            <para>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para><b>IMPORTANT:</b>Make
            sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is
            associated with a running instance will break any applications running on the instance.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRole service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteRoleAsync(Amazon.IdentityManagement.Model.DeleteRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRole(Amazon.IdentityManagement.Model.DeleteRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteRolePolicy(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest)">
            <summary>
            <para>Deletes the specified policy associated with the specified role.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteRolePolicyAsync(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteRolePolicy(Amazon.IdentityManagement.Model.DeleteRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteSAMLProvider(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest)">
            <summary>
            <para>Deletes a SAML provider.</para> <para>Deleting the provider does not update any roles that reference the SAML provider as a principal
            in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. </para>
            <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteSAMLProviderAsync(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSAMLProvider(Amazon.IdentityManagement.Model.DeleteSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteServerCertificate(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest)">
            <summary>
            <para>Deletes the specified server certificate.</para> <para><b>IMPORTANT:</b>If you are using a server certificate with Elastic Load
            Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of
            bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend
            that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more
            information, go to DeleteLoadBalancerListeners in the Elastic Load Balancing API Reference.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteServerCertificateAsync(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteServerCertificate(Amazon.IdentityManagement.Model.DeleteServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteSigningCertificate(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest)">
            <summary>
            <para>Deletes the specified signing certificate associated with the specified user.</para> <para>If you do not specify a user name, IAM
            determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the
            AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteSigningCertificateAsync(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteSigningCertificate(Amazon.IdentityManagement.Model.DeleteSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteUser(Amazon.IdentityManagement.Model.DeleteUserRequest)">
            <summary>
            <para>Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached
            policies.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteUserAsync(Amazon.IdentityManagement.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUser(Amazon.IdentityManagement.Model.DeleteUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteUserPolicy(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest)">
            <summary>
            <para>Deletes the specified policy associated with the specified user.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteUserPolicyAsync(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteUserPolicy(Amazon.IdentityManagement.Model.DeleteUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteVirtualMFADevice(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest)">
            <summary>
            <para>Deletes a virtual MFA device.</para> <para><b>NOTE:</b>You must deactivate a user's virtual MFA device before you can delete it. For
            information about deactivating MFA devices, see DeactivateMFADevice.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVirtualMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.DeleteConflictException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.DeleteVirtualMFADeviceAsync(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVirtualMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.DeleteVirtualMFADevice(Amazon.IdentityManagement.Model.DeleteVirtualMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVirtualMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.EnableMFADevice(Amazon.IdentityManagement.Model.EnableMFADeviceRequest)">
            <summary>
            <para>Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every
            subsequent login by the user name associated with the device.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.EnableMFADeviceAsync(Amazon.IdentityManagement.Model.EnableMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.EnableMFADevice(Amazon.IdentityManagement.Model.EnableMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountPasswordPolicy(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest)">
            <summary>
            <para>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountPasswordPolicy service method
            on AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetAccountPasswordPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountPasswordPolicy(Amazon.IdentityManagement.Model.GetAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountPasswordPolicy">
            <summary>
            <para>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            
            <returns>The response from the GetAccountPasswordPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountSummary(Amazon.IdentityManagement.Model.GetAccountSummaryRequest)">
            <summary>
            <para>Retrieves account level information about account entity usage and IAM quotas.</para> <para>For information about limitations on IAM
            entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM
            Entities</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSummary service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetAccountSummary service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountSummaryAsync(Amazon.IdentityManagement.Model.GetAccountSummaryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAccountSummary operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetAccountSummary(Amazon.IdentityManagement.Model.GetAccountSummaryRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSummary operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetAccountSummary">
            <summary>
            <para>Retrieves account level information about account entity usage and IAM quotas.</para> <para>For information about limitations on IAM
            entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM
            Entities</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            
            <returns>The response from the GetAccountSummary service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetGroup(Amazon.IdentityManagement.Model.GetGroupRequest)">
            <summary>
            <para>Returns a list of users that are in the specified group. You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetGroup service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetGroupAsync(Amazon.IdentityManagement.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroup(Amazon.IdentityManagement.Model.GetGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetGroupPolicy(Amazon.IdentityManagement.Model.GetGroupPolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified group. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetGroupPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetGroupPolicyAsync(Amazon.IdentityManagement.Model.GetGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetGroupPolicy(Amazon.IdentityManagement.Model.GetGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetInstanceProfile(Amazon.IdentityManagement.Model.GetInstanceProfileRequest)">
            <summary>
            <para>Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> . For more information about ARNs, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs">ARNs</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetInstanceProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetInstanceProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetInstanceProfileAsync(Amazon.IdentityManagement.Model.GetInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetInstanceProfile(Amazon.IdentityManagement.Model.GetInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetLoginProfile(Amazon.IdentityManagement.Model.GetLoginProfileRequest)">
            <summary>
            <para>Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action
            returns a 404 ( <c>NoSuchEntity</c> ) error. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetLoginProfile service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetLoginProfileAsync(Amazon.IdentityManagement.Model.GetLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetLoginProfile(Amazon.IdentityManagement.Model.GetLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetRole(Amazon.IdentityManagement.Model.GetRoleRequest)">
            <summary>
            <para>Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to EC2 to
            assume the role. For more information about ARNs, go to <a href="&#xA;            http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs">ARNs</a> . For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>The returned policy
            is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRole service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetRoleAsync(Amazon.IdentityManagement.Model.GetRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRole(Amazon.IdentityManagement.Model.GetRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetRolePolicy(Amazon.IdentityManagement.Model.GetRolePolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified role. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>The returned policy is
            URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetRolePolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetRolePolicyAsync(Amazon.IdentityManagement.Model.GetRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetRolePolicy(Amazon.IdentityManagement.Model.GetRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetSAMLProvider(Amazon.IdentityManagement.Model.GetSAMLProviderRequest)">
            <summary>
            <para>Returns the SAML provider metadocument that was uploaded when the provider was created or updated.</para> <para><b>NOTE:</b>This
            operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetSAMLProviderAsync(Amazon.IdentityManagement.Model.GetSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetSAMLProvider(Amazon.IdentityManagement.Model.GetSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetServerCertificate(Amazon.IdentityManagement.Model.GetServerCertificateRequest)">
            <summary>
            <para>Retrieves information about the specified server certificate.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetServerCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetServerCertificateAsync(Amazon.IdentityManagement.Model.GetServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetServerCertificate(Amazon.IdentityManagement.Model.GetServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetUser(Amazon.IdentityManagement.Model.GetUserRequest)">
            <summary>
            <para>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</para> <para>If you do not specify a
            user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetUserAsync(Amazon.IdentityManagement.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUser(Amazon.IdentityManagement.Model.GetUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetUser">
            <summary>
            <para>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</para> <para>If you do not specify a
            user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</para>
            </summary>
            
            
            <returns>The response from the GetUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetUserPolicy(Amazon.IdentityManagement.Model.GetUserPolicyRequest)">
            <summary>
            <para>Retrieves the specified policy document for the specified user. The returned policy is URL-encoded according to RFC 3986. For more
            information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the GetUserPolicy service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.GetUserPolicyAsync(Amazon.IdentityManagement.Model.GetUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.GetUserPolicy(Amazon.IdentityManagement.Model.GetUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccessKeys(Amazon.IdentityManagement.Model.ListAccessKeysRequest)">
            <summary>
            <para>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of keys, you can still paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based on the AWS
            access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root
            credentials even if the AWS account has no associated users.</para> <para><b>NOTE:</b>To ensure the security of your AWS account, the secret
            access key is accessible only during key and user creation.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccessKeys service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListAccessKeys service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccessKeysAsync(Amazon.IdentityManagement.Model.ListAccessKeysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAccessKeys operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccessKeys(Amazon.IdentityManagement.Model.ListAccessKeysRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccessKeys operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccessKeys">
            <summary>
            <para>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of keys, you can still paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based on the AWS
            access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root
            credentials even if the AWS account has no associated users.</para> <para><b>NOTE:</b>To ensure the security of your AWS account, the secret
            access key is accessible only during key and user creation.</para>
            </summary>
            
            
            <returns>The response from the ListAccessKeys service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccountAliases(Amazon.IdentityManagement.Model.ListAccountAliasesRequest)">
            <summary>
            <para>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccountAliases service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListAccountAliases service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccountAliasesAsync(Amazon.IdentityManagement.Model.ListAccountAliasesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAccountAliases operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListAccountAliases(Amazon.IdentityManagement.Model.ListAccountAliasesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAccountAliases operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListAccountAliases">
            <summary>
            <para>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in <i>Using AWS
            Identity and Access Management</i> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            
            <returns>The response from the ListAccountAliases service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroupPolicies(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified group. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupPolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroupPolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroupPoliciesAsync(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroupPolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupPolicies(Amazon.IdentityManagement.Model.ListGroupPoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroups(Amazon.IdentityManagement.Model.ListGroupsRequest)">
            <summary>
            <para>Lists the groups that have the specified path prefix.</para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroups service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroupsAsync(Amazon.IdentityManagement.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroups operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroups(Amazon.IdentityManagement.Model.ListGroupsRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroups">
            <summary>
            <para>Lists the groups that have the specified path prefix.</para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListGroups service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroupsForUser(Amazon.IdentityManagement.Model.ListGroupsForUserRequest)">
            <summary>
            <para>Lists the groups the specified user belongs to.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c>
            parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupsForUser service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListGroupsForUser service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListGroupsForUserAsync(Amazon.IdentityManagement.Model.ListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListGroupsForUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListGroupsForUser(Amazon.IdentityManagement.Model.ListGroupsForUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListGroupsForUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListInstanceProfiles(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest)">
            <summary>
            <para>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfiles service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListInstanceProfiles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListInstanceProfilesAsync(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListInstanceProfiles operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfiles(Amazon.IdentityManagement.Model.ListInstanceProfilesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfiles operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListInstanceProfiles">
            <summary>
            <para>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListInstanceProfiles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListInstanceProfilesForRole(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest)">
            <summary>
            <para>Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more
            information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
            Instance Profiles</a> .</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfilesForRole service
            method on AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListInstanceProfilesForRole service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListInstanceProfilesForRoleAsync(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListInstanceProfilesForRole operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListInstanceProfilesForRole(Amazon.IdentityManagement.Model.ListInstanceProfilesForRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListInstanceProfilesForRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListMFADevices(Amazon.IdentityManagement.Model.ListMFADevicesRequest)">
            <summary>
            <para>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified
            user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the
            request.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMFADevices service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListMFADevicesAsync(Amazon.IdentityManagement.Model.ListMFADevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMFADevices operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListMFADevices(Amazon.IdentityManagement.Model.ListMFADevicesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMFADevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListMFADevices">
            <summary>
            <para>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified
            user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the
            request.</para> <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListRolePolicies(Amazon.IdentityManagement.Model.ListRolePoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified role. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRolePolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListRolePolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListRolePoliciesAsync(Amazon.IdentityManagement.Model.ListRolePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRolePolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRolePolicies(Amazon.IdentityManagement.Model.ListRolePoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRolePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListRoles(Amazon.IdentityManagement.Model.ListRolesRequest)">
            <summary>
            <para>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about
            roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>The returned policy is URL-encoded according to
            RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRoles service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListRoles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListRolesAsync(Amazon.IdentityManagement.Model.ListRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRoles operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListRoles(Amazon.IdentityManagement.Model.ListRolesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRoles operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListRoles">
            <summary>
            <para>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about
            roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>The returned policy is URL-encoded according to
            RFC 3986. For more information about RFC 3986, go to <a href="http://www.faqs.org/rfcs/rfc3986.html">http://www.faqs.org/rfcs/rfc3986.html</a> .</para>
            </summary>
            
            
            <returns>The response from the ListRoles service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSAMLProviders(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest)">
            <summary>
            <para>Lists the SAML providers in the account.</para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSAMLProviders service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListSAMLProviders service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSAMLProvidersAsync(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSAMLProviders operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSAMLProviders(Amazon.IdentityManagement.Model.ListSAMLProvidersRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSAMLProviders operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSAMLProviders">
            <summary>
            <para>Lists the SAML providers in the account.</para> <para><b>NOTE:</b>This operation requires Signature Version 4.</para>
            </summary>
            
            
            <returns>The response from the ListSAMLProviders service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListServerCertificates(Amazon.IdentityManagement.Model.ListServerCertificatesRequest)">
            <summary>
            <para>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</para> <para>You
            can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServerCertificates service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListServerCertificates service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListServerCertificatesAsync(Amazon.IdentityManagement.Model.ListServerCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListServerCertificates operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListServerCertificates(Amazon.IdentityManagement.Model.ListServerCertificatesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServerCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListServerCertificates">
            <summary>
            <para>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</para> <para>You
            can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListServerCertificates service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSigningCertificates(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest)">
            <summary>
            <para>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of signing certificates, you can still paginate the results using the
            <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the user name is determined
            implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this
            API can be used to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSigningCertificates service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListSigningCertificates service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSigningCertificatesAsync(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSigningCertificates operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListSigningCertificates(Amazon.IdentityManagement.Model.ListSigningCertificatesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSigningCertificates operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListSigningCertificates">
            <summary>
            <para>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty
            list.</para> <para>Although each user is limited to a small number of signing certificates, you can still paginate the results using the
            <c>MaxItems</c> and <c>Marker</c> parameters.</para> <para>If the <c>UserName</c> field is not specified, the user name is determined
            implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this
            API can be used to manage root credentials even if the AWS account has no associated users.</para>
            </summary>
            
            
            <returns>The response from the ListSigningCertificates service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListUserPolicies(Amazon.IdentityManagement.Model.ListUserPoliciesRequest)">
            <summary>
            <para>Lists the names of the policies associated with the specified user. If there are none, the action returns an empty list.</para>
            <para>You can paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPolicies service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListUserPolicies service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListUserPoliciesAsync(Amazon.IdentityManagement.Model.ListUserPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUserPolicies operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUserPolicies(Amazon.IdentityManagement.Model.ListUserPoliciesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUserPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListUsers(Amazon.IdentityManagement.Model.ListUsersRequest)">
            <summary>
            <para>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListUsers service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListUsersAsync(Amazon.IdentityManagement.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListUsers operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListUsers(Amazon.IdentityManagement.Model.ListUsersRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUsers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListUsers">
            <summary>
            <para>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</para> <para>You can
            paginate the results using the <c>MaxItems</c> and <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListUsers service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListVirtualMFADevices(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest)">
            <summary>
            <para> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action
            returns a list of all virtual MFA devices. Assignment status can be <c>Assigned</c> ,
            <c>Unassigned</c> , or <c>Any</c> . </para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVirtualMFADevices service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the ListVirtualMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListVirtualMFADevicesAsync(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVirtualMFADevices operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ListVirtualMFADevices(Amazon.IdentityManagement.Model.ListVirtualMFADevicesRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVirtualMFADevices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ListVirtualMFADevices">
            <summary>
            <para> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action
            returns a list of all virtual MFA devices. Assignment status can be <c>Assigned</c> ,
            <c>Unassigned</c> , or <c>Any</c> . </para> <para>You can paginate the results using the <c>MaxItems</c> and
            <c>Marker</c> parameters.</para>
            </summary>
            
            
            <returns>The response from the ListVirtualMFADevices service method, as returned by AmazonIdentityManagementService.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutGroupPolicy(Amazon.IdentityManagement.Model.PutGroupPolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified group. For information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a group, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutGroupPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests
            in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutGroupPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutGroupPolicyAsync(Amazon.IdentityManagement.Model.PutGroupPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutGroupPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutGroupPolicy(Amazon.IdentityManagement.Model.PutGroupPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutGroupPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutRolePolicy(Amazon.IdentityManagement.Model.PutRolePolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified role. For information about policies, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the policies you can associate with a role, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutRolePolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutRolePolicyAsync(Amazon.IdentityManagement.Model.PutRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutRolePolicy(Amazon.IdentityManagement.Model.PutRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutUserPolicy(Amazon.IdentityManagement.Model.PutUserPolicyRequest)">
            <summary>
            <para>Adds (or updates) a policy document associated with the specified user. For information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?PoliciesOverview.html">Overview of Policies</a> in <i>Using AWS Identity
            and Access Management</i> .</para> <para>For information about limits on the number of policies you can associate with a user, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using
            AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because policy documents can be large, you should use POST rather than GET
            when calling PutUserPolicy. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutUserPolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.PutUserPolicyAsync(Amazon.IdentityManagement.Model.PutUserPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutUserPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.PutUserPolicy(Amazon.IdentityManagement.Model.PutUserPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutUserPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.RemoveRoleFromInstanceProfile(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest)">
            <summary>
            <para>Removes the specified role from the specified instance profile.</para> <para><b>IMPORTANT:</b>Make sure you do not have any Amazon EC2
            instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is
            associated with a running instance will break any applications running on the instance.</para> <para>For more information about roles, go to
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a> .
            For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromInstanceProfile
            service method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.RemoveRoleFromInstanceProfileAsync(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveRoleFromInstanceProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveRoleFromInstanceProfile(Amazon.IdentityManagement.Model.RemoveRoleFromInstanceProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromInstanceProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.RemoveUserFromGroup(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest)">
            <summary>
            <para>Removes the specified user from the specified group.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveUserFromGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.RemoveUserFromGroupAsync(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveUserFromGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.RemoveUserFromGroup(Amazon.IdentityManagement.Model.RemoveUserFromGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveUserFromGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ResyncMFADevice(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest)">
            <summary>
            <para>Synchronizes the specified MFA device with AWS servers.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResyncMFADevice service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidAuthenticationCodeException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.ResyncMFADeviceAsync(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResyncMFADevice operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.ResyncMFADevice(Amazon.IdentityManagement.Model.ResyncMFADeviceRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResyncMFADevice operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAccessKey(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest)">
            <summary>
            <para>Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key
            as part of a key rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the UserName is determined implicitly based
            on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to
            manage root credentials even if the AWS account has no associated users.</para> <para>For information about rotating keys, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html">Managing Keys and Certificates</a> in <i>Using
            AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccessKey service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAccessKeyAsync(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAccessKey operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccessKey(Amazon.IdentityManagement.Model.UpdateAccessKeyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccessKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAccountPasswordPolicy(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest)">
            <summary>
            <para>Updates the password policy settings for the account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccountPasswordPolicy service
            method on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAccountPasswordPolicyAsync(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAccountPasswordPolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAccountPasswordPolicy(Amazon.IdentityManagement.Model.UpdateAccountPasswordPolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAccountPasswordPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAccountPasswordPolicy">
            <summary>
            <para>Updates the password policy settings for the account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> .</para>
            </summary>
            
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAssumeRolePolicy(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest)">
            <summary>
            <para>Updates the policy that grants an entity permission to assume a role. Currently, only an Amazon EC2 instance can assume a role. For
            more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>
            .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAssumeRolePolicy service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateAssumeRolePolicyAsync(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAssumeRolePolicy operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateAssumeRolePolicy(Amazon.IdentityManagement.Model.UpdateAssumeRolePolicyRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAssumeRolePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateGroup(Amazon.IdentityManagement.Model.UpdateGroupRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified group.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a group's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a group name the requester must have appropriate permissions on both the source object and the target object.
            For example, to change Managers to MGRs, the entity making the request must have permission on Managers and MGRs, or must have permission on
            all (*). For more information about permissions, see Permissions and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateGroupAsync(Amazon.IdentityManagement.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateGroup operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateGroup(Amazon.IdentityManagement.Model.UpdateGroupRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateLoginProfile(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest)">
            <summary>
            <para>Changes the password for the specified user.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateLoginProfile service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.PasswordPolicyViolationException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateLoginProfileAsync(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateLoginProfile operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateLoginProfile(Amazon.IdentityManagement.Model.UpdateLoginProfileRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateLoginProfile operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateSAMLProvider(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest)">
            <summary>
            <para>Updates the metadata document for an existing SAML provider.</para> <para><b>NOTE:</b>This operation requires Signature Version
            4.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSAMLProvider service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the UpdateSAMLProvider service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidInputException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateSAMLProviderAsync(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateSAMLProvider operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSAMLProvider(Amazon.IdentityManagement.Model.UpdateSAMLProviderRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSAMLProvider operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateServerCertificate(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified server certificate.</para> <para><b>IMPORTANT:</b> You should understand the
            implications of changing a server certificate's path or name. For more information, see Managing Server Certificates in Using AWS Identity
            and Access Management. </para> <para><b>NOTE:</b>To change a server certificate name the requester must have appropriate permissions on both
            the source object and the target object. For example, to change the name from ProductionCert to ProdCert, the entity making the request must
            have permission on ProductionCert and ProdCert, or must have permission on all (*). For more information about permissions, see Permissions
            and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateServerCertificateAsync(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateServerCertificate(Amazon.IdentityManagement.Model.UpdateServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateSigningCertificate(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest)">
            <summary>
            <para>Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a
            user's signing certificate as part of a certificate rotation work flow.</para> <para>If the <c>UserName</c> field is not specified, the
            UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under
            the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</para> <para>For
            information about rotating certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?ManagingCredentials.html">Managing Keys and Certificates</a> in <i>Using AWS Identity and Access Management</i> .</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateSigningCertificateAsync(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateSigningCertificate(Amazon.IdentityManagement.Model.UpdateSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateUser(Amazon.IdentityManagement.Model.UpdateUserRequest)">
            <summary>
            <para>Updates the name and/or the path of the specified user.</para> <para><b>IMPORTANT:</b> You should understand the implications of
            changing a user's path or name. For more information, see Renaming Users and Groups in Using AWS Identity and Access Management. </para>
            <para><b>NOTE:</b>To change a user name the requester must have appropriate permissions on both the source object and the target object. For
            example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*).
            For more information about permissions, see Permissions and Policies. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUser service method on
            AmazonIdentityManagementService.</param>
            
            <exception cref="T:Amazon.IdentityManagement.Model.EntityTemporarilyUnmodifiableException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UpdateUserAsync(Amazon.IdentityManagement.Model.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateUser operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UpdateUser(Amazon.IdentityManagement.Model.UpdateUserRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateUser operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UploadServerCertificate(Amazon.IdentityManagement.Model.UploadServerCertificateRequest)">
            <summary>
            <para>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private
            key, and an optional certificate chain, which should all be PEM-encoded.</para> <para>For information about the number of server
            certificates you can upload, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?LimitationsOnEntities.html">Limitations on IAM Entities</a> in <i>Using AWS Identity and Access Management</i> .</para> <para><b>NOTE:</b>Because the body of the
            public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling
            UploadServerCertificate. For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in
            the AWS General Reference. For general information about using the Query API with IAM, go to Making Query Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadServerCertificate service method on
            AmazonIdentityManagementService.</param>
            
            <returns>The response from the UploadServerCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.KeyPairMismatchException" />
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UploadServerCertificateAsync(Amazon.IdentityManagement.Model.UploadServerCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadServerCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadServerCertificate(Amazon.IdentityManagement.Model.UploadServerCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadServerCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UploadSigningCertificate(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest)">
            <summary>
            <para>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to
            validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <c>Active</c>
            .</para> <para>If the <c>UserName</c> field is not specified, the user name is determined implicitly based on the AWS access key ID used to
            sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if
            the AWS account has no associated users.</para> <para><b>NOTE:</b>Because the body of a X.509 certificate can be large, you should use POST
            rather than GET when calling UploadSigningCertificate. For information about setting up signatures and authorization through the API, go to
            Signing AWS API Requests in the AWS General Reference. For general information about using the Query API with IAM, go to Making Query
            Requests in Using IAM.</para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadSigningCertificate service method
            on AmazonIdentityManagementService.</param>
            
            <returns>The response from the UploadSigningCertificate service method, as returned by AmazonIdentityManagementService.</returns>
            
            <exception cref="T:Amazon.IdentityManagement.Model.DuplicateCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.InvalidCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.MalformedCertificateException" />
            <exception cref="T:Amazon.IdentityManagement.Model.NoSuchEntityException" />
            <exception cref="T:Amazon.IdentityManagement.Model.LimitExceededException" />
            <exception cref="T:Amazon.IdentityManagement.Model.EntityAlreadyExistsException" />
        </member>
        <member name="M:Amazon.IdentityManagement.AmazonIdentityManagementServiceClient.UploadSigningCertificateAsync(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadSigningCertificate operation.
            <seealso cref="M:Amazon.IdentityManagement.IAmazonIdentityManagementService.UploadSigningCertificate(Amazon.IdentityManagement.Model.UploadSigningCertificateRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadSigningCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceClient">
            <summary>
            Implementation for accessing AmazonSecurityTokenService.
            
            AWS Security Token Service <para> The AWS Security Token Service (AWS STS) is a web service that enables you to request temporary,
            limited-privilege credentials for AWS Identity and Access Management (AWS IAM) users or for users that you authenticate (federated users).
            This guide provides descriptions of the AWS STS API. For more detailed information about using this service, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/Welcome.html">Using Temporary Security Credentials</a> . </para> <para><b>NOTE:</b> As
            an alternative to using the API, you can use one of the AWS SDKs, which consist of libraries and sample code for various programming
            languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS STS.
            For example, the SDKs take care of cryptographically signing requests, managing errors, and retrying requests automatically. For information
            about the AWS SDKs, including how to download and install them, see the Tools for Amazon Web Services page. </para> <para> For information
            about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General
            Reference</i> . For general information about the Query API, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in <i>Using IAM</i> . For
            information about using security tokens with other AWS products, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/UsingTokens.html">Using Temporary Security Credentials to Access AWS</a> in <i>Using
            Temporary Security Credentials</i> . </para> <para> If you're new to AWS and need additional technical information about a specific AWS
            product, you can find the product's technical documentation at <a href="http://aws.amazon.com/documentation/">http://aws.amazon.com/documentation/</a> . </para> <para> <b>Endpoints</b> </para> <para>For information about AWS STS endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region">Regions and Endpoints</a> in the <i>AWS General Reference</i>
            .</para> <para> <b>Recording API requests</b> </para> <para>AWS STS supports AWS CloudTrail, which is a service that records AWS calls for
            your AWS account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine what
            requests were successfully made to AWS STS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how
            to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatisawscloudtrail.html">AWS CloudTrail User Guide</a> .</para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.IAmazonSecurityTokenService">
            <summary>
            Interface for accessing AmazonSecurityTokenService.
            
            AWS Security Token Service <para> The AWS Security Token Service (AWS STS) is a web service that enables you to request temporary,
            limited-privilege credentials for AWS Identity and Access Management (AWS IAM) users or for users that you authenticate (federated users).
            This guide provides descriptions of the AWS STS API. For more detailed information about using this service, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/Welcome.html">Using Temporary Security Credentials</a> . </para> <para><b>NOTE:</b> As
            an alternative to using the API, you can use one of the AWS SDKs, which consist of libraries and sample code for various programming
            languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS STS.
            For example, the SDKs take care of cryptographically signing requests, managing errors, and retrying requests automatically. For information
            about the AWS SDKs, including how to download and install them, see the Tools for Amazon Web Services page. </para> <para> For information
            about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General
            Reference</i> . For general information about the Query API, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in <i>Using IAM</i> . For
            information about using security tokens with other AWS products, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/UsingTokens.html">Using Temporary Security Credentials to Access AWS</a> in <i>Using
            Temporary Security Credentials</i> . </para> <para> If you're new to AWS and need additional technical information about a specific AWS
            product, you can find the product's technical documentation at <a href="http://aws.amazon.com/documentation/">http://aws.amazon.com/documentation/</a> . </para> <para> <b>Endpoints</b> </para> <para>For information about AWS STS endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region">Regions and Endpoints</a> in the <i>AWS General Reference</i>
            .</para> <para> <b>Recording API requests</b> </para> <para>AWS STS supports AWS CloudTrail, which is a service that records AWS calls for
            your AWS account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine what
            requests were successfully made to AWS STS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how
            to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatisawscloudtrail.html">AWS CloudTrail User Guide</a> .</para>
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRole(Amazon.SecurityToken.Model.AssumeRoleRequest)">
            <summary>
            <para>Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) that you
            can use to access AWS resources that you might not normally have access to. Typically, you use <c>AssumeRole</c> for cross-account access or
            federation. </para> <para> <b>Important:</b> You cannot call <c>AssumeRole</c> by using AWS account credentials; access will be denied. You
            must use IAM user credentials or temporary security credentials to call <c>AssumeRole</c> .
            </para> <para> For cross-account access, imagine that you own multiple accounts and need to access resources in each account. You could
            create long-term credentials in each account to access those resources. However, managing all those credentials and remembering which one
            can access which account can be time consuming. Instead, you can create one set of long-term credentials in one account and then use
            temporary security credentials to access all the other accounts by assuming roles in those accounts. For more information about roles, see
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Roles</a> in <i>Using IAM</i> . </para> <para> For
            federation, you can, for example, grant single sign-on access to the AWS Management Console. If you already have an identity and
            authentication system in your corporate network, you don't have to recreate user identities in AWS in order to grant those user identities
            access to AWS. Instead, after a user has been authenticated, you call <c>AssumeRole</c> (and specify the role with the appropriate
            permissions) to get temporary security credentials for that user. With those temporary security credentials, you construct a sign-in URL
            that users can use to access the console. For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html">Scenarios for Granting Temporary Access</a> in <i>AWS Security Token
            Service</i> . </para> <para> The temporary security credentials are valid for the duration that you specified when calling <c>AssumeRole</c>
            , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). The default is 1 hour. </para> <para>Optionally, you can pass an AWS
            IAM access policy to this operation. The temporary security credentials that are returned by the operation have the permissions that are
            associated with the access policy of the role that is being assumed, except for any permissions explicitly denied by the policy you pass.
            This gives you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> To assume a role,
            your AWS account must be trusted by the role. The trust relationship is defined in the role's trust policy when the IAM role is created. You
            must also have a policy that allows you to call <c>sts:AssumeRole</c> . </para> <para> <b>Using MFA with AssumeRole</b> </para> <para> You
            can optionally include multi-factor authentication (MFA) information when you call <c>AssumeRole</c> . This is useful for cross-account
            scenarios in which you want to make sure that the user who is assuming the role has been authenticated using an AWS MFA device. In that
            scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication; if the caller does not include
            valid MFA information, the request to assume the role is denied. The condition in a a trust policy that tests for MFA authentication might
            look like the following example.</para> <para> <c>"Condition": {"Null": {"aws:MultiFactorAuthAge": false}}</c> </para> <para>For more
            information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html">Configuring MFA-Protected API Access</a> in
            the <i>Using AWS IAM</i> guide. </para> <para>To use MFA with <c>AssumeRole</c> , you pass values for the <c>SerialNumber</c> and
            <c>TokenCode</c> parameters. The <c>SerialNumber</c> value identifies the user's hardware or virtual MFA device. The <c>TokenCode</c> is the
            temporary one-time password (TOTP) that the MFA devices produces. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRole service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleAsync(Amazon.SecurityToken.Model.AssumeRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRole operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRole(Amazon.SecurityToken.Model.AssumeRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithSAML(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)">
            <summary>
            <para> Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This
            operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific
            credentials or configuration. </para> <para> The temporary security credentials returned by this operation consist of an access key ID, a
            secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services. The
            credentials are valid for the duration that you specified when calling <c>AssumeRoleWithSAML</c> , which can be up to 3600 seconds (1 hour)
            or until the time specified in the SAML authentication response's <c>NotOnOrAfter</c> value, whichever is shorter.</para>
            <para><b>NOTE:</b>The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range
            are specified. </para> <para>Optionally, you can pass an AWS IAM access policy to this operation. The temporary security credentials that
            are returned by the operation have the permissions that are associated with the access policy of the role being assumed, except for any
            permissions explicitly denied by the policy you pass. This gives you a way to further restrict the permissions for the resulting temporary
            security credentials. These policies and any applicable resource-based policies are evaluated when calls to AWS are made using the temporary
            security credentials. </para> <para> Before your application can call <c>AssumeRoleWithSAML</c> , you must configure your SAML identity
            provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (AWS IAM) to create a SAML
            provider entity in your AWS account that represents your identity provider, and create an AWS IAM role that specifies this SAML provider in
            its trust policy. </para> <para> Calling <c>AssumeRoleWithSAML</c> does not require the use of AWS security credentials. The identity of the
            caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider. </para>
            <para>For more information, see the following resources:</para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Security Credentials</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html">SAML Providers</a> in the <i>Using
            IAM</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring a Relying Party and Claims in
            the Using IAM guide. </a> </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html">Creating a Role for SAML-Based Federation</a> in the
            <i>Using IAM</i> guide. </li>
            
            </ul>
            
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRoleWithSAML service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPRejectedClaimException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.ExpiredTokenException" />
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithSAMLAsync(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithSAML operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithSAML(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithWebIdentity(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest)">
            <summary>
            <para> Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web
            identity provider, such as Login with Amazon, Facebook, or Google. </para> <para> Calling <c>AssumeRoleWithWebIdentity</c> does not require
            the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary
            security credentials without including long-term AWS credentials in the application, and without deploying server-based proxy services that
            use long-term AWS credentials. Instead, the identity of the caller is validated by using a token from the web identity provider. </para>
            <para> The temporary security credentials returned by this API consist of an access key ID, a secret access key, and a security token.
            Applications can use these temporary security credentials to sign calls to AWS service APIs. The credentials are valid for the duration that
            you specified when calling <c>AssumeRoleWithWebIdentity</c> , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By
            default, the temporary security credentials are valid for 1 hour. </para> <para>Optionally, you can pass an AWS IAM access policy to this
            operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the access
            policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. This gives you a way to further
            restrict the permissions for the resulting temporary security credentials. These policies and any applicable resource-based policies are
            evaluated when calls to AWS are made using the temporary security credentials. </para> <para> Before your application can call
            <c>AssumeRoleWithWebIdentity</c> , you must have an identity token from a supported identity provider and create a role that the application
            can assume. The role that your application assumes must trust the identity provider that is associated with the identity token. In other
            words, the identity provider must be specified in the role's trust policy. </para> <para> For more information about how to use web identity
            federation and the <c>AssumeRoleWithWebIdentity</c> , see the following resources: </para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html#MobileApplication-KnownProvider"> Creating a Mobile
            Application with Third-Party Sign-In</a> and <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html"> Creating Temporary
            Security Credentials for Mobile Apps Using Third-Party Identity Providers</a> in <i>Using Temporary Security Credentials</i> . </li>
            <li> <a href="https://web-identity-federation-playground.s3.amazonaws.com/index.html"> Web Identity Federation Playground</a> . This
            interactive website lets you walk through the process of authenticating via Login with Amazon, Facebook, or Google, getting temporary
            security credentials, and then using those credentials to make a request to AWS. </li>
            <li> <a href="http://aws.amazon.com/sdkforios/">AWS SDK for iOS</a> and <a href="http://aws.amazon.com/sdkforandroid/">AWS SDK for
            Android</a> . These toolkits contain sample apps that show how to invoke the identity providers, and then how to use the information from
            these providers to get and use temporary security credentials. </li>
            <li> <a href="http://aws.amazon.com/articles/4617974389850313">Web Identity Federation with Mobile Applications</a> . This article
            discusses web identity federation and shows an example of how to use web identity federation to get access to content in Amazon S3. </li>
            
            </ul>
            
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity service
            method on AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRoleWithWebIdentity service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPRejectedClaimException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.ExpiredTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPCommunicationErrorException" />
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithWebIdentityAsync(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithWebIdentity operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithWebIdentity(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.DecodeAuthorizationMessage(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest)">
            <summary>
            <para> Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS
            request. </para> <para> For example, if a user is not authorized to perform an action that he or she has requested, the request returns a
            <c>Client.UnauthorizedOperation</c> response (an HTTP 403 response). Some AWS actions additionally return an encoded message that can
            provide details about this authorization failure. </para> <para><b>NOTE:</b> Only certain AWS actions return an encoded authorization
            message. The documentation for an individual action indicates whether that action returns an encoded message in addition to returning an
            HTTP code. </para> <para>The message is encoded because the details of the authorization status can constitute privileged information that
            the user who requested the action should not see. To decode an authorization status message, a user must be granted permissions via an AWS
            IAM policy to request the <c>DecodeAuthorizationMessage</c> (
            <c>sts:DecodeAuthorizationMessage</c> ) action. </para> <para> The decoded message includes the following type of
            information: </para>
            <ul>
            <li>Whether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow">Determining Whether
            a Request is Allowed or Denied</a> in <i>Using AWS IAM</i> . </li>
            <li>The principal who made the request.</li>
            <li>The requested action.</li>
            <li>The requested resource.</li>
            <li>The values of condition keys in the context of the user's request.</li>
            
            </ul>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage service
            method on AmazonSecurityTokenService.</param>
            
            <returns>The response from the DecodeAuthorizationMessage service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException" />
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.DecodeAuthorizationMessageAsync(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DecodeAuthorizationMessage operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.DecodeAuthorizationMessage(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetFederationToken(Amazon.SecurityToken.Model.GetFederationTokenRequest)">
            <summary>
            <para> Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a
            federated user. A typical use is in a proxy application that is getting temporary security credentials on behalf of distributed applications
            inside a corporate network. Because you must call the <c>GetFederationToken</c> action using the long-term security credentials of an IAM
            user, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application. </para>
            <para> <b>Note:</b> Do not use this call in mobile applications or client-based web applications that directly get temporary security
            credentials. For those types of applications, use <c>AssumeRoleWithWebIdentity</c> . </para> <para>The <c>GetFederationToken</c> action must
            be called by using the long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are
            valid for the specified duration, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using
            account credentials have a maximum duration of 3600 seconds (1 hour). </para> <para>Optionally, you can pass an AWS IAM access policy to
            this operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the
            entity that is making the <c>GetFederationToken</c> call, except for any permissions explicitly denied by the policy you pass. This gives
            you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> For more
            information about how permissions work, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/TokenPermissions.html">Controlling
            Permissions in Temporary Credentials</a> in <i>Using Temporary Security Credentials</i> . For information about using
            <c>GetFederationToken</c> to create temporary security credentials, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingFedTokens.html">Creating Temporary Credentials to Enable Access for Federated
            Users</a> in <i>Using Temporary Security Credentials</i> . </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the GetFederationToken service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetFederationTokenAsync(Amazon.SecurityToken.Model.GetFederationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFederationToken operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetFederationToken(Amazon.SecurityToken.Model.GetFederationTokenRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionToken(Amazon.SecurityToken.Model.GetSessionTokenRequest)">
            <summary>
            <para> Returns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access
            key, and a security token. Typically, you use <c>GetSessionToken</c> if you want use MFA to protect programmatic calls to specific AWS APIs
            like Amazon EC2 <c>StopInstances</c> . MFA-enabled IAM users would need to call <c>GetSessionToken</c> and submit an MFA code that is
            associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make
            programmatic calls to APIs that require MFA authentication. </para> <para> The <c>GetSessionToken</c> action must be called by using the
            long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration
            that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials
            have a maximum duration of 3600 seconds (1 hour). </para> <para>The permissions associated with the temporary security credentials returned
            by <c>GetSessionToken</c> are based on the permissions associated with account or IAM user whose credentials are used to call the action. If
            <c>GetSessionToken</c> is called using root account credentials, the temporary credentials have root account permissions. Similarly, if
            <c>GetSessionToken</c> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.
            </para> <para>For more information about using <c>GetSessionToken</c> to create temporary credentials, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html"> Creating Temporary Credentials to Enable Access for IAM
            Users </a> in <i>Using IAM</i> .
            </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the GetSessionToken service method, as returned by AmazonSecurityTokenService.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionTokenAsync(Amazon.SecurityToken.Model.GetSessionTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSessionToken operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionToken(Amazon.SecurityToken.Model.GetSessionTokenRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionToken">
            <summary>
            <para> Returns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access
            key, and a security token. Typically, you use <c>GetSessionToken</c> if you want use MFA to protect programmatic calls to specific AWS APIs
            like Amazon EC2 <c>StopInstances</c> . MFA-enabled IAM users would need to call <c>GetSessionToken</c> and submit an MFA code that is
            associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make
            programmatic calls to APIs that require MFA authentication. </para> <para> The <c>GetSessionToken</c> action must be called by using the
            long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration
            that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials
            have a maximum duration of 3600 seconds (1 hour). </para> <para>The permissions associated with the temporary security credentials returned
            by <c>GetSessionToken</c> are based on the permissions associated with account or IAM user whose credentials are used to call the action. If
            <c>GetSessionToken</c> is called using root account credentials, the temporary credentials have root account permissions. Similarly, if
            <c>GetSessionToken</c> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.
            </para> <para>For more information about using <c>GetSessionToken</c> to create temporary credentials, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html"> Creating Temporary Credentials to Enable Access for IAM
            Users </a> in <i>Using IAM</i> .
            </para>
            </summary>
            
            
            <returns>The response from the GetSessionToken service method, as returned by AmazonSecurityTokenService.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor">
             <summary>
             Constructs AmazonSecurityTokenServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSecurityTokenServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
             <summary>
             Constructs AmazonSecurityTokenServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSecurityTokenService Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials and an
            AmazonSecurityTokenServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityTokenServiceClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityTokenServiceClient Configuration object.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRole(Amazon.SecurityToken.Model.AssumeRoleRequest)">
            <summary>
            <para>Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) that you
            can use to access AWS resources that you might not normally have access to. Typically, you use <c>AssumeRole</c> for cross-account access or
            federation. </para> <para> <b>Important:</b> You cannot call <c>AssumeRole</c> by using AWS account credentials; access will be denied. You
            must use IAM user credentials or temporary security credentials to call <c>AssumeRole</c> .
            </para> <para> For cross-account access, imagine that you own multiple accounts and need to access resources in each account. You could
            create long-term credentials in each account to access those resources. However, managing all those credentials and remembering which one
            can access which account can be time consuming. Instead, you can create one set of long-term credentials in one account and then use
            temporary security credentials to access all the other accounts by assuming roles in those accounts. For more information about roles, see
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Roles</a> in <i>Using IAM</i> . </para> <para> For
            federation, you can, for example, grant single sign-on access to the AWS Management Console. If you already have an identity and
            authentication system in your corporate network, you don't have to recreate user identities in AWS in order to grant those user identities
            access to AWS. Instead, after a user has been authenticated, you call <c>AssumeRole</c> (and specify the role with the appropriate
            permissions) to get temporary security credentials for that user. With those temporary security credentials, you construct a sign-in URL
            that users can use to access the console. For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html">Scenarios for Granting Temporary Access</a> in <i>AWS Security Token
            Service</i> . </para> <para> The temporary security credentials are valid for the duration that you specified when calling <c>AssumeRole</c>
            , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). The default is 1 hour. </para> <para>Optionally, you can pass an AWS
            IAM access policy to this operation. The temporary security credentials that are returned by the operation have the permissions that are
            associated with the access policy of the role that is being assumed, except for any permissions explicitly denied by the policy you pass.
            This gives you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> To assume a role,
            your AWS account must be trusted by the role. The trust relationship is defined in the role's trust policy when the IAM role is created. You
            must also have a policy that allows you to call <c>sts:AssumeRole</c> . </para> <para> <b>Using MFA with AssumeRole</b> </para> <para> You
            can optionally include multi-factor authentication (MFA) information when you call <c>AssumeRole</c> . This is useful for cross-account
            scenarios in which you want to make sure that the user who is assuming the role has been authenticated using an AWS MFA device. In that
            scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication; if the caller does not include
            valid MFA information, the request to assume the role is denied. The condition in a a trust policy that tests for MFA authentication might
            look like the following example.</para> <para> <c>"Condition": {"Null": {"aws:MultiFactorAuthAge": false}}</c> </para> <para>For more
            information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html">Configuring MFA-Protected API Access</a> in
            the <i>Using AWS IAM</i> guide. </para> <para>To use MFA with <c>AssumeRole</c> , you pass values for the <c>SerialNumber</c> and
            <c>TokenCode</c> parameters. The <c>SerialNumber</c> value identifies the user's hardware or virtual MFA device. The <c>TokenCode</c> is the
            temporary one-time password (TOTP) that the MFA devices produces. </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRole service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleAsync(Amazon.SecurityToken.Model.AssumeRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRole operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRole(Amazon.SecurityToken.Model.AssumeRoleRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithSAML(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)">
            <summary>
            <para> Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This
            operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific
            credentials or configuration. </para> <para> The temporary security credentials returned by this operation consist of an access key ID, a
            secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services. The
            credentials are valid for the duration that you specified when calling <c>AssumeRoleWithSAML</c> , which can be up to 3600 seconds (1 hour)
            or until the time specified in the SAML authentication response's <c>NotOnOrAfter</c> value, whichever is shorter.</para>
            <para><b>NOTE:</b>The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range
            are specified. </para> <para>Optionally, you can pass an AWS IAM access policy to this operation. The temporary security credentials that
            are returned by the operation have the permissions that are associated with the access policy of the role being assumed, except for any
            permissions explicitly denied by the policy you pass. This gives you a way to further restrict the permissions for the resulting temporary
            security credentials. These policies and any applicable resource-based policies are evaluated when calls to AWS are made using the temporary
            security credentials. </para> <para> Before your application can call <c>AssumeRoleWithSAML</c> , you must configure your SAML identity
            provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (AWS IAM) to create a SAML
            provider entity in your AWS account that represents your identity provider, and create an AWS IAM role that specifies this SAML provider in
            its trust policy. </para> <para> Calling <c>AssumeRoleWithSAML</c> does not require the use of AWS security credentials. The identity of the
            caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider. </para>
            <para>For more information, see the following resources:</para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating Temporary Security Credentials for SAML
            Federation</a> in the <i>Using Temporary Security Credentials</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html">SAML Providers</a> in the <i>Using
            IAM</i> guide. </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring a Relying Party and Claims in
            the Using IAM guide. </a> </li>
            <li> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html">Creating a Role for SAML-Based Federation</a> in the
            <i>Using IAM</i> guide. </li>
            
            </ul>
            
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRoleWithSAML service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPRejectedClaimException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.ExpiredTokenException" />
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithSAMLAsync(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithSAML operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithSAML(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithWebIdentity(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest)">
            <summary>
            <para> Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web
            identity provider, such as Login with Amazon, Facebook, or Google. </para> <para> Calling <c>AssumeRoleWithWebIdentity</c> does not require
            the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary
            security credentials without including long-term AWS credentials in the application, and without deploying server-based proxy services that
            use long-term AWS credentials. Instead, the identity of the caller is validated by using a token from the web identity provider. </para>
            <para> The temporary security credentials returned by this API consist of an access key ID, a secret access key, and a security token.
            Applications can use these temporary security credentials to sign calls to AWS service APIs. The credentials are valid for the duration that
            you specified when calling <c>AssumeRoleWithWebIdentity</c> , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By
            default, the temporary security credentials are valid for 1 hour. </para> <para>Optionally, you can pass an AWS IAM access policy to this
            operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the access
            policy of the role being assumed, except for any permissions explicitly denied by the policy you pass. This gives you a way to further
            restrict the permissions for the resulting temporary security credentials. These policies and any applicable resource-based policies are
            evaluated when calls to AWS are made using the temporary security credentials. </para> <para> Before your application can call
            <c>AssumeRoleWithWebIdentity</c> , you must have an identity token from a supported identity provider and create a role that the application
            can assume. The role that your application assumes must trust the identity provider that is associated with the identity token. In other
            words, the identity provider must be specified in the role's trust policy. </para> <para> For more information about how to use web identity
            federation and the <c>AssumeRoleWithWebIdentity</c> , see the following resources: </para>
            <ul>
            <li> <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html#MobileApplication-KnownProvider"> Creating a Mobile
            Application with Third-Party Sign-In</a> and <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html"> Creating Temporary
            Security Credentials for Mobile Apps Using Third-Party Identity Providers</a> in <i>Using Temporary Security Credentials</i> . </li>
            <li> <a href="https://web-identity-federation-playground.s3.amazonaws.com/index.html"> Web Identity Federation Playground</a> . This
            interactive website lets you walk through the process of authenticating via Login with Amazon, Facebook, or Google, getting temporary
            security credentials, and then using those credentials to make a request to AWS. </li>
            <li> <a href="http://aws.amazon.com/sdkforios/">AWS SDK for iOS</a> and <a href="http://aws.amazon.com/sdkforandroid/">AWS SDK for
            Android</a> . These toolkits contain sample apps that show how to invoke the identity providers, and then how to use the information from
            these providers to get and use temporary security credentials. </li>
            <li> <a href="http://aws.amazon.com/articles/4617974389850313">Web Identity Federation with Mobile Applications</a> . This article
            discusses web identity federation and shows an example of how to use web identity federation to get access to content in Amazon S3. </li>
            
            </ul>
            
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity service
            method on AmazonSecurityTokenService.</param>
            
            <returns>The response from the AssumeRoleWithWebIdentity service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPRejectedClaimException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
            <exception cref="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.ExpiredTokenException" />
            <exception cref="T:Amazon.SecurityToken.Model.IDPCommunicationErrorException" />
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithWebIdentityAsync(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithWebIdentity operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithWebIdentity(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.DecodeAuthorizationMessage(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest)">
            <summary>
            <para> Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS
            request. </para> <para> For example, if a user is not authorized to perform an action that he or she has requested, the request returns a
            <c>Client.UnauthorizedOperation</c> response (an HTTP 403 response). Some AWS actions additionally return an encoded message that can
            provide details about this authorization failure. </para> <para><b>NOTE:</b> Only certain AWS actions return an encoded authorization
            message. The documentation for an individual action indicates whether that action returns an encoded message in addition to returning an
            HTTP code. </para> <para>The message is encoded because the details of the authorization status can constitute privileged information that
            the user who requested the action should not see. To decode an authorization status message, a user must be granted permissions via an AWS
            IAM policy to request the <c>DecodeAuthorizationMessage</c> (
            <c>sts:DecodeAuthorizationMessage</c> ) action. </para> <para> The decoded message includes the following type of
            information: </para>
            <ul>
            <li>Whether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow">Determining Whether
            a Request is Allowed or Denied</a> in <i>Using AWS IAM</i> . </li>
            <li>The principal who made the request.</li>
            <li>The requested action.</li>
            <li>The requested resource.</li>
            <li>The values of condition keys in the context of the user's request.</li>
            
            </ul>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage service
            method on AmazonSecurityTokenService.</param>
            
            <returns>The response from the DecodeAuthorizationMessage service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException" />
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.DecodeAuthorizationMessageAsync(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DecodeAuthorizationMessage operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.DecodeAuthorizationMessage(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetFederationToken(Amazon.SecurityToken.Model.GetFederationTokenRequest)">
            <summary>
            <para> Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a
            federated user. A typical use is in a proxy application that is getting temporary security credentials on behalf of distributed applications
            inside a corporate network. Because you must call the <c>GetFederationToken</c> action using the long-term security credentials of an IAM
            user, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application. </para>
            <para> <b>Note:</b> Do not use this call in mobile applications or client-based web applications that directly get temporary security
            credentials. For those types of applications, use <c>AssumeRoleWithWebIdentity</c> . </para> <para>The <c>GetFederationToken</c> action must
            be called by using the long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are
            valid for the specified duration, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using
            account credentials have a maximum duration of 3600 seconds (1 hour). </para> <para>Optionally, you can pass an AWS IAM access policy to
            this operation. The temporary security credentials that are returned by the operation have the permissions that are associated with the
            entity that is making the <c>GetFederationToken</c> call, except for any permissions explicitly denied by the policy you pass. This gives
            you a way to further restrict the permissions for the resulting temporary security credentials. These policies and any applicable
            resource-based policies are evaluated when calls to AWS are made using the temporary security credentials. </para> <para> For more
            information about how permissions work, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/TokenPermissions.html">Controlling
            Permissions in Temporary Credentials</a> in <i>Using Temporary Security Credentials</i> . For information about using
            <c>GetFederationToken</c> to create temporary security credentials, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingFedTokens.html">Creating Temporary Credentials to Enable Access for Federated
            Users</a> in <i>Using Temporary Security Credentials</i> . </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the GetFederationToken service method, as returned by AmazonSecurityTokenService.</returns>
            
            <exception cref="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException" />
            <exception cref="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException" />
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetFederationTokenAsync(Amazon.SecurityToken.Model.GetFederationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFederationToken operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetFederationToken(Amazon.SecurityToken.Model.GetFederationTokenRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetSessionToken(Amazon.SecurityToken.Model.GetSessionTokenRequest)">
            <summary>
            <para> Returns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access
            key, and a security token. Typically, you use <c>GetSessionToken</c> if you want use MFA to protect programmatic calls to specific AWS APIs
            like Amazon EC2 <c>StopInstances</c> . MFA-enabled IAM users would need to call <c>GetSessionToken</c> and submit an MFA code that is
            associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make
            programmatic calls to APIs that require MFA authentication. </para> <para> The <c>GetSessionToken</c> action must be called by using the
            long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration
            that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials
            have a maximum duration of 3600 seconds (1 hour). </para> <para>The permissions associated with the temporary security credentials returned
            by <c>GetSessionToken</c> are based on the permissions associated with account or IAM user whose credentials are used to call the action. If
            <c>GetSessionToken</c> is called using root account credentials, the temporary credentials have root account permissions. Similarly, if
            <c>GetSessionToken</c> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.
            </para> <para>For more information about using <c>GetSessionToken</c> to create temporary credentials, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html"> Creating Temporary Credentials to Enable Access for IAM
            Users </a> in <i>Using IAM</i> .
            </para>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken service method on
            AmazonSecurityTokenService.</param>
            
            <returns>The response from the GetSessionToken service method, as returned by AmazonSecurityTokenService.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetSessionTokenAsync(Amazon.SecurityToken.Model.GetSessionTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSessionToken operation.
            <seealso cref="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionToken(Amazon.SecurityToken.Model.GetSessionTokenRequest)"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetSessionToken">
            <summary>
            <para> Returns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access
            key, and a security token. Typically, you use <c>GetSessionToken</c> if you want use MFA to protect programmatic calls to specific AWS APIs
            like Amazon EC2 <c>StopInstances</c> . MFA-enabled IAM users would need to call <c>GetSessionToken</c> and submit an MFA code that is
            associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make
            programmatic calls to APIs that require MFA authentication. </para> <para> The <c>GetSessionToken</c> action must be called by using the
            long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration
            that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials
            have a maximum duration of 3600 seconds (1 hour). </para> <para>The permissions associated with the temporary security credentials returned
            by <c>GetSessionToken</c> are based on the permissions associated with account or IAM user whose credentials are used to call the action. If
            <c>GetSessionToken</c> is called using root account credentials, the temporary credentials have root account permissions. Similarly, if
            <c>GetSessionToken</c> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.
            </para> <para>For more information about using <c>GetSessionToken</c> to create temporary credentials, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html"> Creating Temporary Credentials to Enable Access for IAM
            Users </a> in <i>Using IAM</i> .
            </para>
            </summary>
            
            
            <returns>The response from the GetSessionToken service method, as returned by AmazonSecurityTokenService.</returns>
        </member>
    </members>
</doc>
